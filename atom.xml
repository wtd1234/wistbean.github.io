<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>肯定会</title>
  
  <subtitle>wistbean</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://wistbean.github.io/"/>
  <updated>2019-03-09T16:53:36.793Z</updated>
  <id>https://wistbean.github.io/</id>
  
  <author>
    <name>wistbean</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>推荐|我用了十几台云服务器VPS后，告诉你哪家云服务产商性价比高,性能稳定</title>
    <link href="https://wistbean.github.io/cloud-server.html"/>
    <id>https://wistbean.github.io/cloud-server.html</id>
    <published>2019-11-27T12:10:21.000Z</published>
    <updated>2019-03-09T16:53:36.793Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="云服务器哪个好？"><a href="#云服务器哪个好？" class="headerlink" title="云服务器哪个好？"></a>云服务器哪个好？</h1><p>不管是想要搭建<a href="https://wistbean.github.io/build-personal-website.html">一个属于自己的网站</a>,还是要托管一些项目给别人使用，亦或是想搭建一个自己的梯子，云服务器已经是这个互联网时代的主力军之一了。</p><p>我买过挺多厂商的服务器的了，一开始自己想折腾点东西，当时看到<a href="https://promotion.aliyun.com/ntms/yunparter/invite.html?userCode=aqcwjw7c" target="_blank" rel="noopener">阿里云服务器</a>有优惠，就买了阿里云的服务器，后来工作又用过腾讯云，华为的，亚马逊云服务器，ucloud等。有时候需要负责公司项目的一些分布式的部署，少说也用过近 10 个不同产商的云服务器了。</p><h1 id="国内主流云服务器"><a href="#国内主流云服务器" class="headerlink" title="国内主流云服务器"></a>国内主流云服务器</h1><ul><li><a href="https://promotion.aliyun.com/ntms/yunparter/invite.html?userCode=aqcwjw7c" target="_blank" rel="noopener">阿里云服务器</a>工单处理挺快的，后台管理使用起来挺方便。</li><li>腾讯云是在阿里云之后使用的，暂时没发过工单，但是性价比方面还是可以的。</li><li><a href="https://www.ucloud.cn/" target="_blank" rel="noopener">ucloud</a>云服务器之前是在公司内部使用的，提供了一些工具，挺方便的。</li></ul><p>其实不太建议购买国内的云服务，除了需要备案之外，还会被监控。如果有些项目是需要面向国内用户，需要备案什么的话，比较推荐的还是<a href="https://promotion.aliyun.com/ntms/yunparter/invite.html?userCode=aqcwjw7c" target="_blank" rel="noopener">阿里云服务器</a>。毕竟技术摆在那里，现在不停的迭代更新。</p><p>之前也用过一些国内不太知名的云服务器产商，还没部署一天，网站就中毒了，阿里云相对来说安全性还是有的，工单处理蛮快的。但是有一点要注意的就是：不要在国内这些云服务产商搭建一些诸如区块链，VPN之类的东西，容易出事。别问我为什么知道的。</p><p>如果是个人用的话，我还是强烈推荐使用国外的云服务产商的，好处在于：</p><ul><li>免备案</li><li>无监管</li><li>稳定安全</li><li>服务好</li><li><a href="https://wistbean.github.io/banwagong-ss.html">搭建自己的vpn</a></li></ul><h1 id="高性价比国外云服务器"><a href="#高性价比国外云服务器" class="headerlink" title="高性价比国外云服务器"></a>高性价比国外云服务器</h1><p>对于<a href="https://aws.amazon.com/cn/" target="_blank" rel="noopener">亚马逊</a>，<a href="https://cloud.google.com/gcp/" target="_blank" rel="noopener">谷歌云</a>就不多说了，虽然他们有 1 年的试用，但是需要有全球通用的信用卡，操作略繁琐。</p><p>接下来主要来推荐我用过的，性价比超高的云服务器，<a href="https://www.vultr.com/?ref=7772384-4F" target="_blank" rel="noopener">Vultr</a>和<a href="https://bwh88.net/aff.php?aff=32874" target="_blank" rel="noopener">搬瓦工</a>。</p><h2 id="Vultr"><a href="#Vultr" class="headerlink" title="Vultr"></a>Vultr</h2><p>第一次知道 <a href="https://www.vultr.com/?ref=7772384-4F" target="_blank" rel="noopener">Vultr</a> 是因为它的价格，$2.5 一个月，而且当时还有优惠，试着买了一个日本的 VPS 服务器，速度飞快。</p><h3 id="Vultr介绍"><a href="#Vultr介绍" class="headerlink" title="Vultr介绍"></a>Vultr介绍</h3><p>Vultr 全球有 16 个机房：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/vultr1.png" alt="Vultr" title="">                </div>                <div class="image-caption">Vultr</div>            </figure><p>Vultr 支持的系统有主流的操作系统，比如：CentOS，Debian，Ubuntu，Windows：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/vultr2.png" alt="Vultr" title="">                </div>                <div class="image-caption">Vultr</div>            </figure><h3 id="Vultr价格和配置"><a href="#Vultr价格和配置" class="headerlink" title="Vultr价格和配置"></a>Vultr价格和配置</h3><p>Vultr 的价格感人，最便宜的才 2.5 刀,每月就有 500G 流量了：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/vultr3.png" alt="Vultr" title="">                </div>                <div class="image-caption">Vultr</div>            </figure><h3 id="Vultr后台管理"><a href="#Vultr后台管理" class="headerlink" title="Vultr后台管理"></a>Vultr后台管理</h3><p>Vultr后台操作简单，界面用起来也很舒服。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/vultr4.png" alt="Vultr" title="">                </div>                <div class="image-caption">Vultr</div>            </figure><h3 id="Vultr优惠码"><a href="#Vultr优惠码" class="headerlink" title="Vultr优惠码"></a>Vultr优惠码</h3><p>点击<a href="https://www.vultr.com/?ref=7532860" target="_blank" rel="noopener">Vultr优惠</a>注册后，系统会赠送新用户 $25 到账户，在购买云服务器的时候可以用上。之前还有充值 $10 送 $100 ,现在不知有没有了，不过 Vultr 有经常做优惠活动。这里的<a href="https://www.vultr.com/?ref=7532860" target="_blank" rel="noopener">Vultr优惠链接</a>永久有效。</p><h3 id="Vultr支付方式"><a href="#Vultr支付方式" class="headerlink" title="Vultr支付方式"></a>Vultr支付方式</h3><p>Vultr支持信用卡，paypal，比特币，支付宝，微信支付：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/vultr5.png" alt="Vultr" title="">                </div>                <div class="image-caption">Vultr</div>            </figure><h3 id="Vultr-搭建自己的vpn教程"><a href="#Vultr-搭建自己的vpn教程" class="headerlink" title="Vultr 搭建自己的vpn教程"></a>Vultr 搭建自己的vpn教程</h3><p><a href="https://wistbean.github.io/vultr-vps-bbr-ss.html">使用vultr(vps)搭建ss并开启BBR快速上网教程 超简单10分钟搞定</a></p><h1 id="搬瓦工云服务器"><a href="#搬瓦工云服务器" class="headerlink" title="搬瓦工云服务器"></a>搬瓦工云服务器</h1><h2 id="搬瓦工介绍"><a href="#搬瓦工介绍" class="headerlink" title="搬瓦工介绍"></a>搬瓦工介绍</h2><p>另一个性价比高的云服务器就是<a href="https://bwh88.net/aff.php?aff=32874" target="_blank" rel="noopener">搬瓦工</a>了，搬瓦工云服务器很方便管理，你可以在后台直接对服务器进行操作，比如开启，关闭系统，更换系统，更换ip地址等。</p><p>搬瓦工支持的系统有：</p><ul><li>CentOS</li><li>Debian</li><li>Ubuntu</li><li>Fedora</li></ul><h2 id="搬瓦工价格和配置"><a href="#搬瓦工价格和配置" class="headerlink" title="搬瓦工价格和配置"></a>搬瓦工价格和配置</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/bwg1.png" alt="搬瓦工价格和配置" title="">                </div>                <div class="image-caption">搬瓦工价格和配置</div>            </figure><p>可以看到，搬瓦工最便宜的有 $19.99 / 年，500G 的流量，对我来说完全够用。</p><h1 id="搬瓦工优惠码"><a href="#搬瓦工优惠码" class="headerlink" title="搬瓦工优惠码"></a>搬瓦工优惠码</h1><p>在<a href="https://www.bwh88.net/aff.php?aff=32874" target="_blank" rel="noopener">搬瓦工官网</a> ，可以看到这里有一些供你选择的服务器，目前 19 刀一年对于个人来说完全够用，以下是可以获取优惠码的服务器：</p><table><thead><tr><th>搬瓦工配置</th><th>搬瓦工费用</th><th>优惠链接</th></tr></thead><tbody><tr><td><em>SPECIAL 40G KVM PROMO V3 - LOS ANGELES - CN2  </em> <br>  SSD硬盘: 40  GB RAID-10 <br> RAM内存: 2048   MB <br> CPU处理器: 1x Intel Xeon <br> Transfer流量: 2000  GB/月 <br> 连接速度: 1 Gigabit <br> 洛杉矶机房，CN2路线，使用中国的直线路线，速度加快</td><td>$27.99/季</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=58" target="_blank" rel="noopener">点击进入</a></td></tr><tr><td><em>SPECIAL 20G KVM PROMO V3 - LOS ANGELES - CN2 </em> <br>  SSD硬盘: 20 GB RAID-10 <br> RAM内存: 1024  MB <br> CPU处理器: 1x Intel Xeon <br> Transfer流量: 1000  GB/月 <br> 连接速度: 1 Gigabit <br> 洛杉矶机房，CN2路线，使用中国的直线路线，速度加快</td><td>$29.99 /半年</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=57" target="_blank" rel="noopener">点击进入</a></td></tr><tr><td><em>80G KVM – PROMO</em> <br> SSD硬盘: 80 GB RAID-10<br>RAM内存: 4 GB<br>CPU处理器: 4x Intel Xeon<br>Transfer流量: 3 TB/mo<br>连接速度: 1 Gigabit<br>Multiple locations</td><td>$19.99/月</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=46" target="_blank" rel="noopener">点击进入</a></td></tr><tr><td><em>20G KVM – PROMO</em> <br> SSD硬盘: 20 GB RAID-10 <br>RAM内存: 1024 MB <br>CPU处理器: 2x Intel Xeon <br>Transfer流量: 1 TB/mo <br>连接速度: 1 Gigabit <br>Multiple locations</td><td>$49.99/年</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=44" target="_blank" rel="noopener">点击进入</a></td></tr><tr><td><em>40G KVM – PROMO</em> <br> SSD硬盘: 40 GB RAID-10 <br>RAM内存: 2 GB <br>CPU处理器: 3x Intel Xeon <br>Transfer流量: 2 TB/mo <br>连接速度: 1 Gigabit <br>Multiple locations</td><td>$99.99/年</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=45" target="_blank" rel="noopener">点击进入</a></td></tr><tr><td><em>160G KVM – PROMO</em> <br> SSD硬盘: 160 GB RAID-10<br>RAM内存: 8 GB<br>CPU处理器: 5x Intel Xeon<br>Transfer流量: 4 TB/mo<br>连接速度: 1 Gigabit<br>Multiple locations</td><td>$39.99/月</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=47" target="_blank" rel="noopener">点击进入</a></td></tr><tr><td><em>3200G KVM – PROMO</em> <br> SSD硬盘: 320 GB RAID-10<br>RAM内存: 16 GB<br>CPU处理器: 6x Intel Xeon<br>Transfer流量: 5 TB/mo<br>连接速度: 1 Gigabit<br>Multiple locations</td><td>$79.99/月</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=48" target="_blank" rel="noopener">点击进入</a></td></tr></tbody></table><p>这时候可以选择想要购买服务器的时长和服务器所处的位置。选择完之后<strong>不要急着点击 「Add to Cart」</strong>。</p><p>这时候就可以获取隐藏的优惠码了，我们对着这个网页：鼠标右击–&gt;查看网页源代码。</p><p>接着 Ctrl + F 搜索 code ，这时候你就会看到 Try this promo code: xxxx，这里的xxxx就是优惠吗，把它复制下来。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/banwagong04.png" alt="搬瓦工vps" title="">                </div>                <div class="image-caption">搬瓦工vps</div>            </figure><p>然后回到我们的购买页，点击「Add to Cart」添加到购物车。</p><p>可以看到这里有一个 Promotional Code，我们输入刚才复制的优惠码，然后点击 「Validate Code」。可以发现得到了优惠，这里我用 320G 的VPS 为例，优惠了 4.8%：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/banwagong05.png" alt="搬瓦工vps" title="">                </div>                <div class="image-caption">搬瓦工vps</div>            </figure><p>接着就可以以比别人更便宜的价格点击 CheckOut 付款啦。</p><h2 id="搬瓦工的支付方式"><a href="#搬瓦工的支付方式" class="headerlink" title="搬瓦工的支付方式"></a>搬瓦工的支付方式</h2><p>搬瓦工支持的付费方式有：信用卡，支付宝，paypal。<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/bwg2.png" alt="搬瓦工价格和配置" title="">                </div>                <div class="image-caption">搬瓦工价格和配置</div>            </figure></p><h2 id="搬瓦工搭建vpn"><a href="#搬瓦工搭建vpn" class="headerlink" title="搬瓦工搭建vpn"></a>搬瓦工搭建vpn</h2><p><a href="https://wistbean.github.io/use-banwagong.html">优惠购买搬瓦工搭建自己的VPN并开启BBR加速访问</a></p><h1 id="相关"><a href="#相关" class="headerlink" title="相关"></a>相关</h1><ul><li><a href="https://wistbean.github.io/banwagong-ss.html">搬瓦工快速手动搭建SS(Shadowsocks)服务器简明详细教程</a></li><li><a href="https://www.zhihu.com/question/43566997" target="_blank" rel="noopener">知乎：哪家的云服务器比较稳定，服务好,性价比高的推荐！？</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="vpn" scheme="https://wistbean.github.io/categories/vpn/"/>
    
    
      <category term="搬瓦工" scheme="https://wistbean.github.io/tags/%E6%90%AC%E7%93%A6%E5%B7%A5/"/>
    
      <category term="vultr" scheme="https://wistbean.github.io/tags/vultr/"/>
    
      <category term="云服务器" scheme="https://wistbean.github.io/tags/%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>java程序员的学习路线-java web学习资源及必备书籍清单</title>
    <link href="https://wistbean.github.io/java-xue-xi-lu-xian.html"/>
    <id>https://wistbean.github.io/java-xue-xi-lu-xian.html</id>
    <published>2019-03-02T07:34:27.000Z</published>
    <updated>2019-03-03T10:36:49.342Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>时不时有朋友在微信问我这样的 Java 相关问题：</p><blockquote><p>如何学习 Java ?<br>怎么自学 Java ?<br>有没有好的 Java 学习资源 ?<br>Java 的学习路线是怎么样的 ?<br>学 Java 的话要看什么书籍 ?<br>等等..</p></blockquote><p>我回想了一下自己在自学 Java 的过程中，确实也走过一些弯路，想想如果一开始，有人告诉我学习 Java 的路线是怎么样的，给我一个具体的学习 Java 的框架，能让我有一个清晰的规划，知道我此刻应该学习什么？接下来学习的又是什么？想必应该会节省很多时间，少走很多弯路，也不会产生更多的焦虑。</p><p>很多的焦虑就是来源于「自己知道自己的不知道，但是对于自己的不知道的东西很模糊，不知道怎么让不知道成为知道」，可能有点绕，不过你多体会一下这句话，应该能看得懂。所以我这篇就是想让你对于你不知道的东西具象化，让你知道怎么让你的不知道变成知道。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/dengning.jpg" alt="dunning-Kruger 心里效应" title="">                </div>                <div class="image-caption">dunning-Kruger 心里效应</div>            </figure><h1 id="Java-入门-基础"><a href="#Java-入门-基础" class="headerlink" title="Java 入门/基础"></a>Java 入门/基础</h1><p>万事开头难，人们都说好的开始是成功的一半，对于一开始入门学习 Java 的小伙伴，最好的方式不是去买相关的书籍来看，因为编程更加注重的是实践，而不是理论，所以一开始最好是有老师教你，让他演示给你看，然后模仿学习。</p><p>可能有人说了，找老师是一件麻烦的事情，找培训机构又怕被坑很多钱。其实，如果你动手能力好一点的话，完全不用担心，因为 <a href="/categories/vpn/">Google</a> 就是最好的老师。网上已经有人提供了学习 Java 基础的视频教程了，找到它们，然后认认真真的跟着学习就是了。</p><p>当然，你有幸看到这里，也刚好是个 Java 初学者，正在找入门学习 Java 基础的视频教程，我已经帮你找好了：</p><blockquote><p>链接: <a href="https://pan.baidu.com/s/1jjZNddGpySafRqk_VC7yEA" target="_blank" rel="noopener">Java基础入门视频教程百度网盘</a><br>  提取码: jtfh</p></blockquote><p>这个教程我以前有看过一些，老师教的很不错，而且很详细，是 Java 入门学习的好资源。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/java-base.png" alt="Java基础入门视频教程" title="">                </div>                <div class="image-caption">Java基础入门视频教程</div>            </figure><p>静下心来学习完，你应该大致掌握了 Java 的基础知识了，接下里可以写点小的项目来练练手。毕竟，实践出真知。想当年，我就是在这个阶段的时候模仿着写了个坦克的游戏。</p><h1 id="Java-基础巩固"><a href="#Java-基础巩固" class="headerlink" title="Java 基础巩固"></a>Java 基础巩固</h1><p>有了一定的 Java SE 基础之后，接下来就可以巩固一下，看书籍查漏补缺了。可以看看<a href="https://u.jd.com/mrMQ4g" target="_blank" rel="noopener">《Java核心技术》</a>这本书。这本书有分为两卷，卷一涉及到的 Java 基础知识，卷二涉及到的就是 Java 的高级特性知识，系统全面讲解了 Java 语言的核心概念、语法、重要特性和开发方法，包含大量案例，实践性强。</p><blockquote><p>《Java核心技术卷1》具体介绍：<a href="https://book.douban.com/subject/26880667/" target="_blank" rel="noopener">《Java核心技术卷1》具体目录</a>。<br>《Java核心技术卷2》具体介绍：<a href="https://book.douban.com/subject/27165931/" target="_blank" rel="noopener">《Java核心技术卷2》具体目录</a>。</p></blockquote><p><a href="https://u.jd.com/mrMQ4g" target="_blank"><img src="/images/java-hexin.jpg"></a></p><h1 id="Java基础到进阶"><a href="#Java基础到进阶" class="headerlink" title="Java基础到进阶"></a>Java基础到进阶</h1><h2 id="HTML-CSS-JS"><a href="#HTML-CSS-JS" class="headerlink" title="HTML/CSS/JS"></a>HTML/CSS/JS</h2><p>接下来这个阶段就可以进入 web 开发了，可以先学习 HTML ， css ，Javascript ，虽然这是前端开发者学习的基础知识，但是对于 Java 程序员，这也是需要了解的，不需要很精通，但起码要了解会用。等你写 web 项目的时候，会用到。以下是不错的HTML ， css ，Javascript 的学习资源。</p><blockquote><p>HTML学习教程：<a href="http://www.w3school.com.cn/html/index.asp" target="_blank" rel="noopener">w3school HTML学习教程</a><br>css学习教程：<a href="http://www.w3school.com.cn/css/index.asp" target="_blank" rel="noopener">w3school css学习教程</a><br>Javascript学习教程：<a href="http://www.w3school.com.cn/js/index.asp" target="_blank" rel="noopener">w3school Javascript学习教程</a></p></blockquote><h2 id="Intellij-IDEA"><a href="#Intellij-IDEA" class="headerlink" title="Intellij IDEA"></a>Intellij IDEA</h2><p>工欲善其事必先利其器，别再使用 eclipse 了，有更加高效的工具 Intellij IDEA , 你需要学会它，如何创建项目，导入项目，使用命令，使用快捷键等。点击 <a href="http://www.jetbrains.com/idea/download" target="_blank" rel="noopener">Intellij IDEA</a> 下载吧。</p><p>Intellij IDEA 学习资源：</p><blockquote><p><a href="https://www.jetbrains.com/idea/documentation/" target="_blank" rel="noopener">Intellij官方文档</a><br><a href="https://github.com/judasn/IntelliJ-IDEA-Tutorial" target="_blank" rel="noopener">IntelliJ IDEA 简体中文专题教程</a></p></blockquote><h2 id="JSP-Servlet"><a href="#JSP-Servlet" class="headerlink" title="JSP/Servlet"></a>JSP/Servlet</h2><p>要写 web 项目，一开始就可以从 JSP、Servlet 入手，快速了解 web 是如何交互的。</p><p>这里有两个不错的关于 JSP 和 Servlet 的教程。</p><blockquote><p><a href="https://www.journaldev.com/2114/servlet-jsp-tutorial" target="_blank" rel="noopener">Servlet JSP Tutorial</a><br><a href="https://www.w3cschool.cn/servlet/" target="_blank" rel="noopener">Servlet教程</a></p></blockquote><h2 id="Mysql数据库学习"><a href="#Mysql数据库学习" class="headerlink" title="Mysql数据库学习"></a>Mysql数据库学习</h2><p>做 Java 后端，肯定会涉及到数据，不会数据库怎么行？</p><p>现在很多企业在用的数据库是 MySQL ，包括 Google，百度，阿里等。免费强大，需要学会数据库的创建和一些查询操作。可以看一本叫做<a href="https://u.jd.com/8Vfs8K" target="_blank" rel="noopener">《《深入浅出MySQL：数据库开发、优化与管理维护（第2版）》》</a> 的书，是网易技术部高级 DBA 写的。这本书很适合于 MySQL 的初学者阅读。</p><p><a href="https://u.jd.com/8Vfs8K" target="_blank"><img src="/images/mysql.jpg"></a></p><h2 id="web-框架学习"><a href="#web-框架学习" class="headerlink" title="web 框架学习"></a>web 框架学习</h2><p>Java web 的框架层出不穷，可以针对现在大多数人使用的框架学习，例如 Spring、SpringMVC、MyBatis、Springboot，不用过多注重框架的表现形式，而应该学习里面的一些具体实现原理。Spring 就是一个非常值得学习的框架。这个阶段推荐看这个教程：</p><blockquote><p><a href="https://wiki.jikexueyuan.com/project/spring/web-mvc-framework.html" target="_blank" rel="noopener">MVC 框架教程</a></p></blockquote><h2 id="web-项目实战"><a href="#web-项目实战" class="headerlink" title="web 项目实战"></a>web 项目实战</h2><p>当你了解了一些框架的使用，并且具备一定的 Java 基础之后，就可以看我这个教程了：</p><blockquote><p><a href="/java-ssm-video.html">Java进阶SSM分布式项目实战视频教程</a></p></blockquote><p>这个课程涉及到很多知识点，干货满满，通过这里，带你真正走进企业项目的开发实战，从 0 到 1 打造一个分布式的电商项目。当然，我这个教程站在你的角度出发，让你学会如何使用这些技术，往后运用与你的工作中。</p><h2 id="Spring-boot-Spring-cloud"><a href="#Spring-boot-Spring-cloud" class="headerlink" title="Spring boot/Spring cloud"></a>Spring boot/Spring cloud</h2><p>项目实战完之后，再学习优秀的框架，Spring boot/Spring cloud 是目前比较流行的微服务框架，通过他们能够更加专注于业务的开发，减少一些繁杂的配置。</p><p>可以学习丁雪丰老师的视频课程：<a href="https://time.geekbang.org/course/intro/156?code=owbgioIt%2FF20PQ7AYaPse%2FbDhAK6g7mD2B-8slHObBk%3D&amp;utm_term=SPoster" target="_blank" rel="noopener">玩转 Spring 全家桶</a></p><h1 id="回归-Java-编程基础"><a href="#回归-Java-编程基础" class="headerlink" title="回归 Java 编程基础"></a>回归 Java 编程基础</h1><p>越往后就会越发现基础的重要性，而那些框架层出不穷，不断的迭代更新，但是基础都是不变的，所以要回归基础，掌握好基础才是正确的选择。</p><h2 id="什么是Java-编程基础基础？"><a href="#什么是Java-编程基础基础？" class="headerlink" title="什么是Java 编程基础基础？"></a>什么是Java 编程基础基础？</h2><p>诸如：</p><blockquote><p>Java虚拟机<br>并发编程<br>设计模式<br>数据结构<br>算法<br>计算机网络<br>缓存技术<br>消息队列<br>Linux操作系统<br>等等</p></blockquote><h2 id="学习书籍"><a href="#学习书籍" class="headerlink" title="学习书籍"></a>学习书籍</h2><p>那么到这个阶段就可以看一些更加“高深”的书籍了，在这里推荐几本。</p><ol><li><a href="https://u.jd.com/5xiDHL" target="_blank" rel="noopener">深入理解JAVA虚拟机:JVM不错特性与很佳实践</a></li></ol><p><a href="https://u.jd.com/5xiDHL" target="_blank"><img src="/images/javaxuniji.jpg"></a></p><p>这本书在 Java 界可谓名声大噪，共分为五大部分，围绕内存管理、执行子系统、程序编译与优化、高效并发等核心主题对JVM进行了全面而深入的分析，深刻揭示了JVM的工作原理。</p><ol start="2"><li><a href="https://u.jd.com/vVQQfr" target="_blank" rel="noopener">java并发编程实战</a></li></ol><p><a href="https://u.jd.com/vVQQfr" target="_blank"><img src="/images/java-bingfa.jpg"></a></p><p>对于线程安全，并发操作是 Java 程序的重点，这本书很好的解释了线程的安全和并发性。介绍了如何使用类库提供的基本并发构建块，用于避免并发危险、构造线程安全的类及验证线程安全的规则等。</p><ol start="3"><li><a href="https://u.jd.com/l7A32U" target="_blank" rel="noopener">Java性能优化权威指南</a></li></ol><p><a href="https://u.jd.com/l7A32U" target="_blank"><img src="/images/java-xingneng.jpg"></a></p><p>这是 Java 之父重点推荐的一本书，本书由曾任职于Oracle/Sun的性能优化专家编写，系统而详细地讲解了性能优化的各个方面，帮助你学习Java虚拟机的基本原理、掌握一些监控Java程序性能的工具，从而快速找到程序中的性能瓶颈，并有效改善程序的运行性能。</p><ol start="4"><li><a href="https://u.jd.com/MX4Z6t" target="_blank" rel="noopener">设计模式之禅（第2版）</a></li></ol><p><a href="https://u.jd.com/MX4Z6t" target="_blank"><img src="/images/java-shejimoshi.jpg"></a></p><p>设计模式是前人的智慧结晶，通过这本书可以学习到面向对象程序设计的6大原则、23种最常用的设计模式、各种设计模式之间的差别以及它们的理想应用场景、如何在实际开发中将各种设计模式混合起来使用、5种新的设计模式的原理、意图和最佳实践。</p><ol start="5"><li><a href="https://u.jd.com/DgJFLK" target="_blank" rel="noopener">计算机网络：自顶向下方法(原书第7版)</a></li></ol><p><a href="https://u.jd.com/DgJFLK" target="_blank"><img src="/images/jisuanji-zidingxiangxia.jpg"></a></p><p>这本书对计算机网络有一个整体的介绍，如：因特网、分组交换、因特网各层详解等等。</p><ol start="6"><li><a href="https://u.jd.com/iGex5P" target="_blank" rel="noopener">鸟哥的Linux私房菜</a></li></ol><p><a href="https://u.jd.com/iGex5P" target="_blank"><img src="/images/linux-niaoge.jpg"></a></p><p>鸟哥在Linux中文圈很出名，书中包含了鸟哥从完全不懂Linux 到现在的所有学习历程，鸟哥将这几年来的所知所学倾囊相授，以浅显易懂的文字带领您进入Linux 的世界。值得一读。</p><h2 id="学习专栏"><a href="#学习专栏" class="headerlink" title="学习专栏"></a>学习专栏</h2><ol><li><a href="https://time.geekbang.org/column/intro/126?code=50ROw9AfDR25%2FnajpoAFP6OwuQpWfZkSDTEKg-XWwZU%3D&amp;utm_term=SPoster" target="_blank" rel="noopener">数据结构与算法之美</a></li></ol><p>这是我看过的算法资料中最好的专栏，作者讲解通俗，学起来很轻松，分为四个模块：入门–&gt;基础–&gt;高级–&gt;实战。</p><ol start="2"><li><a href="https://time.geekbang.org/column/intro/159?code=D1VFDMVNabyWuqaIcYSiK0wpsBHNllEyqE9s1Z9USaA%3D&amp;utm_term=SPoster" target="_blank" rel="noopener">Java并发编程实战</a></li></ol><p>这个专栏分为五个模块：1. 并发理论基础 2. 并发工具类 3. 并发设计模式 4. 案例分析 5. 其他并发模型。</p><p>3.<a href="https://time.geekbang.org/column/intro/82?code=lk-USSDaQbdF8ihcTLDfCEggPL8%2FrPAlxX2bmh%2FYJJE%3D&amp;utm_term=SPoster" target="_blank" rel="noopener">Java核心技术 36 讲</a></p><p>这个专栏也是分为五个模块，但是评论区也很精彩，很多 Java 爱好者的评论可以认真看一下，干货满满。</p><h1 id="值得学习的-Java-博客"><a href="#值得学习的-Java-博客" class="headerlink" title="值得学习的 Java 博客"></a>值得学习的 Java 博客</h1><ol><li><p>我的博客（有点不要脸）：<br><a href="https://wistbean.github.io/">wistbean|肯定会</a></p></li><li><p>作者从事过Java开发，近几年来主要做iOS技术相关的工作，对无线产品相关和iOS平台相关开发有粗浅理解，关注新兴技术。喜欢不断深入某技术领域的原理研究，喜欢解决有挑战性的问题：<br><a href="http://www.molotang.com/java" target="_blank" rel="noopener">Java文章列表 | 三石·道</a></p></li><li><p>随着这几年的发展，并发网组织翻译和原创了几百篇技术精品文章，包括Java，C++，JS，开源框架，管理和架构等，所以并发网从最初致力于并发编程的研究和传播，进化成现在的致力于精品技术的研究和传播：<br><a href="http://ifeve.com/" target="_blank" rel="noopener">并发编程网 - ifeve.com</a></p></li><li><p>egg，一个疯狂的Java爱好者！这里会分享一个程序员成长所需的点点滴滴，以Java为主体，从基础到高级知识都会不断的出炉：<br><a href="https://blog.csdn.net/zhangerqing" target="_blank" rel="noopener">智慧演绎，无处不在 - CSDN博客</a></p></li><li><p>阿里巴巴网络技术有限公司 资深研发工程师的blog：<br><a href="http://www.hollischuang.com/" target="_blank" rel="noopener">HollisChuang’s Blog</a></p></li><li><p>满满的java干货：<br><a href="http://www.importnew.com/" target="_blank" rel="noopener">java_my_life - 博客园</a></p></li><li><p>ImportNew 由两个 Java 关键字 import 和 new 组成，意指：Java 开发者学习新知识的网站：<br><a href="http://www.importnew.com/" target="_blank" rel="noopener">专注Java &amp; Android 技术分享</a></p></li><li><p>我想很多程序员应该记得 GitHub 上有一个 Awesome - XXX 系列的资源整理。awesome-java就是 akullpp 发起维护的 Java 资源列表，内容包括：构建工具、数据库、框架、模板、安全、代码分析、日志、第三方库、书籍、Java 站点等等：<br><a href="https://github.com/jobbole/awesome-java-cn#awesome-java-cn" target="_blank" rel="noopener">jobbole/awesome-java-cn</a></p></li></ol><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p>以上 ，如果你掌握了我上述列出的这些，那么应该算是一个中高级的 Java 程序员了，到了这个阶段，想必接下来不必我多说，你也知道如何继续了。祝你牛逼，如果觉得本文对你有帮助，想要支持我一下，可以点击：<a href="/support/">我要支持wistbean</a></p><h1 id="相关"><a href="#相关" class="headerlink" title="相关"></a>相关</h1><ul><li><a href="/lean-java.html">我的自学 Java 编程之路</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="java" scheme="https://wistbean.github.io/categories/java/"/>
    
    
      <category term="java" scheme="https://wistbean.github.io/tags/java/"/>
    
      <category term="java程序员" scheme="https://wistbean.github.io/tags/java%E7%A8%8B%E5%BA%8F%E5%91%98/"/>
    
      <category term="java学习路线" scheme="https://wistbean.github.io/tags/java%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/"/>
    
      <category term="java书籍清单" scheme="https://wistbean.github.io/tags/java%E4%B9%A6%E7%B1%8D%E6%B8%85%E5%8D%95/"/>
    
      <category term="java学习论坛" scheme="https://wistbean.github.io/tags/java%E5%AD%A6%E4%B9%A0%E8%AE%BA%E5%9D%9B/"/>
    
      <category term="java学习博客" scheme="https://wistbean.github.io/tags/java%E5%AD%A6%E4%B9%A0%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="java学习路径图" scheme="https://wistbean.github.io/tags/java%E5%AD%A6%E4%B9%A0%E8%B7%AF%E5%BE%84%E5%9B%BE/"/>
    
      <category term="java web" scheme="https://wistbean.github.io/tags/java-web/"/>
    
  </entry>
  
  <entry>
    <title>「6-5」 httpclient+freemarker实现商城首页分类的导航数据展示</title>
    <link href="https://wistbean.github.io/java-ssm-6-5.html"/>
    <id>https://wistbean.github.io/java-ssm-6-5.html</id>
    <published>2019-02-23T16:03:33.000Z</published>
    <updated>2019-03-01T16:04:45.773Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>我们已经在 <a href="/java-ssm-6-3">rest 系统</a>中实现了商品分类的API，那么接下来我们就可以在 <a href="/java-ssm-6-2">portal 系统</a>中请求 rest 中的分类数据，我们可以使用 <a href="https://hc.apache.org/httpcomponents-client-ga/" target="_blank" rel="noopener">httpclient</a> 进行不同系统之间的请求，接着将获取到的数据用 <a href="/java-ssm-5-1">freemarker</a> 进行展示。</p><h1 id="创建-HttpClient"><a href="#创建-HttpClient" class="headerlink" title="创建 HttpClient"></a>创建 HttpClient</h1><p>在 common 模块中依赖相关jar包</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-lang3<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-net<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-net<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.httpcomponents<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>httpclient<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p>创建 Httpclient 工具类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.http.Header;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.HttpEntity;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.ClientProtocolException;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.config.RequestConfig;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.methods.CloseableHttpResponse;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.methods.HttpGet;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.methods.HttpPost;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.entity.StringEntity;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.impl.client.CloseableHttpClient;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.impl.client.HttpClients;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.util.EntityUtils;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * HttpClientUtil</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HttpClientUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 连接主机超时（30s）</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> HTTP_CONNECT_TIMEOUT_30S = <span class="number">30</span> * <span class="number">1000</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 从主机读取数据超时（3min）</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> HTTP_READ_TIMEOUT_3MIN = <span class="number">180</span> * <span class="number">1000</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * httpPost</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">httpPost</span><span class="params">(String url, String jsonParam)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        CloseableHttpClient httpclient = HttpClients.createDefault();</span><br><span class="line">        HttpPost httpPost = <span class="keyword">new</span> HttpPost(url);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置请求头和请求参数</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> != jsonParam &amp;&amp; !jsonParam.isEmpty()) &#123;</span><br><span class="line">            StringEntity entity = <span class="keyword">new</span> StringEntity(jsonParam, <span class="string">"utf-8"</span>);</span><br><span class="line">            entity.setContentEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line">            entity.setContentType(<span class="string">"application/json"</span>);</span><br><span class="line">            httpPost.setEntity(entity);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 超时时间设置</span></span><br><span class="line">        RequestConfig requestConfig = RequestConfig.custom().setSocketTimeout(HTTP_READ_TIMEOUT_3MIN)</span><br><span class="line">                .setConnectTimeout(HTTP_CONNECT_TIMEOUT_30S).build();</span><br><span class="line">        httpPost.setConfig(requestConfig);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 发送请求</span></span><br><span class="line">        CloseableHttpResponse response = httpclient.execute(httpPost);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取返回内容</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            HttpEntity entity = response.getEntity();</span><br><span class="line">            String str = EntityUtils.toString(entity);</span><br><span class="line">            EntityUtils.consume(entity); <span class="comment">// 此句关闭了流</span></span><br><span class="line">            <span class="keyword">return</span> str;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            response.close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * httpPost get Cookies</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Map&lt;String, Object&gt; <span class="title">httpPostGetCookies</span><span class="params">(String url, String jsonParam)</span> <span class="keyword">throws</span></span></span><br><span class="line"><span class="function">            IOException </span>&#123;</span><br><span class="line">        CloseableHttpClient httpclient = HttpClients.createDefault();</span><br><span class="line">        HttpPost httpPost = <span class="keyword">new</span> HttpPost(url);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置请求头和请求参数</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> != jsonParam &amp;&amp; !jsonParam.isEmpty()) &#123;</span><br><span class="line">            StringEntity entity = <span class="keyword">new</span> StringEntity(jsonParam, <span class="string">"utf-8"</span>);</span><br><span class="line">            entity.setContentEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line">            entity.setContentType(<span class="string">"application/json"</span>);</span><br><span class="line">            httpPost.setEntity(entity);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 超时时间设置</span></span><br><span class="line">        RequestConfig requestConfig = RequestConfig.custom().setSocketTimeout(HTTP_READ_TIMEOUT_3MIN)</span><br><span class="line">                .setConnectTimeout(HTTP_CONNECT_TIMEOUT_30S).build();</span><br><span class="line">        httpPost.setConfig(requestConfig);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 发送请求</span></span><br><span class="line">        CloseableHttpResponse response = httpclient.execute(httpPost);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取返回内容</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            HttpEntity entity = response.getEntity();</span><br><span class="line">            String str = EntityUtils.toString(entity);</span><br><span class="line">            EntityUtils.consume(entity); <span class="comment">// 此句关闭了流</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 获取数据内容</span></span><br><span class="line">            Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</span><br><span class="line">            map.put(<span class="string">"result"</span>, str);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 获取返回到额Cookies</span></span><br><span class="line">            Header[] headers = response.getHeaders(<span class="string">"Set-Cookie"</span>);</span><br><span class="line">            map.put(<span class="string">"cookies"</span>, headers);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> map;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            response.close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * httpGet</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">httpGet</span><span class="params">(String url)</span> <span class="keyword">throws</span>  IOException </span>&#123;</span><br><span class="line">        CloseableHttpClient httpclient = HttpClients.createDefault();</span><br><span class="line">        HttpGet httpGet = <span class="keyword">new</span> HttpGet(url);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 超时时间设置</span></span><br><span class="line">        RequestConfig requestConfig = RequestConfig.custom().setSocketTimeout(HTTP_READ_TIMEOUT_3MIN)</span><br><span class="line">                .setConnectTimeout(HTTP_CONNECT_TIMEOUT_30S).build();</span><br><span class="line">        httpGet.setConfig(requestConfig);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 发送请求</span></span><br><span class="line">        CloseableHttpResponse response = httpclient.execute(httpGet);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取返回内容</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            HttpEntity entity = response.getEntity();</span><br><span class="line">            String strResult = EntityUtils.toString(entity);</span><br><span class="line">            <span class="keyword">return</span> strResult;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            response.close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * httpGet with Cookies</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">httpGetWithCookies</span><span class="params">(String url, Header[] headers)</span> <span class="keyword">throws</span>  IOException </span>&#123;</span><br><span class="line">        CloseableHttpClient httpclient = HttpClients.createDefault();</span><br><span class="line">        HttpGet httpGet = <span class="keyword">new</span> HttpGet(url);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 超时时间设置</span></span><br><span class="line">        RequestConfig requestConfig = RequestConfig.custom().setSocketTimeout(HTTP_READ_TIMEOUT_3MIN)</span><br><span class="line">                .setConnectTimeout(HTTP_CONNECT_TIMEOUT_30S).build();</span><br><span class="line">        httpGet.setConfig(requestConfig);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置请求头</span></span><br><span class="line">        <span class="keyword">if</span> (headers != <span class="keyword">null</span> &amp;&amp; headers.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            httpGet.setHeaders(headers);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 发送请求</span></span><br><span class="line">        CloseableHttpResponse response = httpclient.execute(httpGet);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取返回内容</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            HttpEntity entity = response.getEntity();</span><br><span class="line">            String strResult = EntityUtils.toString(entity);</span><br><span class="line">            <span class="keyword">return</span> strResult;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            response.close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="添加-source-配置文件"><a href="#添加-source-配置文件" class="headerlink" title="添加 source 配置文件"></a>添加 source 配置文件</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># REST</span><br><span class="line">REST_URL = http://127.0.0.1:8088/rest/</span><br></pre></td></tr></table></figure><h1 id="添加配置路径文件"><a href="#添加配置路径文件" class="headerlink" title="添加配置路径文件"></a>添加配置路径文件</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;bean id=&quot;propertyConfigurer&quot; class=&quot;org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer&quot;&gt;</span><br><span class="line">      &lt;property name=&quot;location&quot;&gt;</span><br><span class="line">          &lt;value&gt;classpath:resource/resource.properties&lt;/value&gt;</span><br><span class="line">      &lt;/property&gt;</span><br><span class="line">  &lt;/bean&gt;</span><br></pre></td></tr></table></figure><h1 id="Service-的具体实现"><a href="#Service-的具体实现" class="headerlink" title="Service 的具体实现"></a>Service 的具体实现</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CategoriesServiceImpl</span> <span class="keyword">implements</span> <span class="title">CategoriesService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;REST_URL&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String REST_URL;</span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;CATEGORY_LIST&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String CATEGORY_LIST;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Res_Categories <span class="title">getCategories</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            String jsonResutlt = HttpClientUtil.httpGet(REST_URL + CATEGORY_LIST);</span><br><span class="line">            Res_Categories res_categories = GsonUtil.fromJson(Res_Categories.class, jsonResutlt);</span><br><span class="line">            <span class="keyword">return</span> res_categories;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><a href="https://wistbean.github.io/java-ssm-video.html#SSM%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B%E7%9B%AE%E5%BD%95">SSM视频教程目录</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Java" scheme="https://wistbean.github.io/categories/Java/"/>
    
      <category term="Java SSM视频教程" scheme="https://wistbean.github.io/categories/Java/Java-SSM%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="码农商城" scheme="https://wistbean.github.io/tags/%E7%A0%81%E5%86%9C%E5%95%86%E5%9F%8E/"/>
    
      <category term="商城首页分类导航" scheme="https://wistbean.github.io/tags/%E5%95%86%E5%9F%8E%E9%A6%96%E9%A1%B5%E5%88%86%E7%B1%BB%E5%AF%BC%E8%88%AA/"/>
    
      <category term="httpclient" scheme="https://wistbean.github.io/tags/httpclient/"/>
    
      <category term="freemarker" scheme="https://wistbean.github.io/tags/freemarker/"/>
    
  </entry>
  
  <entry>
    <title>「6-4」rest系统提供商城首页分类导航的json数据</title>
    <link href="https://wistbean.github.io/java-ssm-6-4.html"/>
    <id>https://wistbean.github.io/java-ssm-6-4.html</id>
    <published>2019-02-22T11:56:10.000Z</published>
    <updated>2019-03-01T16:01:08.096Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><iframe width="100%" height="315" src="https://www.youtube.com/embed/l1ZLdUzNozc" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><blockquote><p>访问不了Youtube？<br>1.点击<a href="/banwagong-ss.html">搭建自己的ss教程</a>轻松访问1080p高清Youtube视频。<br>2.点击<a href="https://space.bilibili.com/7028047" target="_blank" rel="noopener">b站视频教程地址</a>观看。</p></blockquote><p>我们已经创建好了 <a href="/java-ssm-6-3">rest</a> 系统，那么接下来这一小节我们来实现商城首页的分类数据展示。</p><p>在 <a href="https://wistbean.github.io/java-ssm-6-2">portal</a> 系统中，我们的首页目前是静态的数据，接下来我们就从 rest 系统中取 json 数据，接着将数据展示到首页分类中。</p><p>主要思路</p><blockquote><ol><li>在 portal 系统中获取 rest 服务中的 json 数据；</li><li>使用 freemarker 展示数据</li></ol></blockquote><h1 id="商城分类json数据格式"><a href="#商城分类json数据格式" class="headerlink" title="商城分类json数据格式"></a>商城分类json数据格式</h1><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"categories"</span>:[</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"cat_id"</span>:<span class="string">"1"</span>,</span><br><span class="line">            <span class="attr">"name"</span>:<span class="string">"父级分类名称"</span>,</span><br><span class="line">            <span class="attr">"sub_cetegories"</span>:[</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">"cat_id"</span>:<span class="string">"2"</span>,</span><br><span class="line">                    <span class="attr">"name"</span>:<span class="string">"java se"</span></span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">"cat_id"</span>:<span class="string">"3"</span>,</span><br><span class="line">                    <span class="attr">"name"</span>:<span class="string">"java ee"</span></span><br><span class="line">                &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"cat_id"</span>:<span class="string">"2"</span>,</span><br><span class="line">            <span class="attr">"name"</span>:<span class="string">"分类名称"</span>,</span><br><span class="line">            <span class="attr">"sub_cetegories"</span>:[</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">"cat_id"</span>:<span class="string">"2"</span>,</span><br><span class="line">                    <span class="attr">"name"</span>:<span class="string">"java se"</span></span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">"cat_id"</span>:<span class="string">"3"</span>,</span><br><span class="line">                    <span class="attr">"name"</span>:<span class="string">"java ee"</span></span><br><span class="line">                &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="通过json数据转化为实体类"><a href="#通过json数据转化为实体类" class="headerlink" title="通过json数据转化为实体类"></a>通过json数据转化为实体类</h1><p>可以使用 idea 的 <a href="https://plugins.jetbrains.com/plugin/7654-gsonformat" target="_blank" rel="noopener">GsonFormart 插件</a>生成相应的实体类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Res_Categories</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;CategoriesBean&gt; categories;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;CategoriesBean&gt; <span class="title">getCategories</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> categories;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCategories</span><span class="params">(List&lt;CategoriesBean&gt; categories)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.categories = categories;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">CategoriesBean</span> </span>&#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * cat_id : 1</span></span><br><span class="line"><span class="comment">         * name : 父级分类名称</span></span><br><span class="line"><span class="comment">         * sub_cetegories : [&#123;"cat_id":"2","name":"java se"&#125;,&#123;"cat_id":"3","name":"java ee"&#125;]</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> String cat_id;</span><br><span class="line">        <span class="keyword">private</span> String name;</span><br><span class="line">        <span class="keyword">private</span> List&lt;SubCetegoriesBean&gt; sub_cetegories;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">getCat_id</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> cat_id;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCat_id</span><span class="params">(String cat_id)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.cat_id = cat_id;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> name;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.name = name;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> List&lt;SubCetegoriesBean&gt; <span class="title">getSub_cetegories</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> sub_cetegories;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSub_cetegories</span><span class="params">(List&lt;SubCetegoriesBean&gt; sub_cetegories)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.sub_cetegories = sub_cetegories;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">SubCetegoriesBean</span> </span>&#123;</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * cat_id : 2</span></span><br><span class="line"><span class="comment">             * name : java se</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">private</span> String cat_id;</span><br><span class="line">            <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">public</span> String <span class="title">getCat_id</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> cat_id;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCat_id</span><span class="params">(String cat_id)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">this</span>.cat_id = cat_id;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> name;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">this</span>.name = name;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="具体实现"><a href="#具体实现" class="headerlink" title="具体实现"></a>具体实现</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProductCategoryServiceImpl</span> <span class="keyword">implements</span> <span class="title">ProductCategoryService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    ProductCategoryMapper productCategoryMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Res_Categories <span class="title">getCategories</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        Res_Categories res_categories = <span class="keyword">new</span> Res_Categories();</span><br><span class="line"></span><br><span class="line">        ProductCategoryExample productCategoryExample = <span class="keyword">new</span> ProductCategoryExample();</span><br><span class="line">        ProductCategoryExample.Criteria criteria = productCategoryExample.createCriteria();</span><br><span class="line">        criteria.andParentIdEqualTo((<span class="keyword">short</span>) <span class="number">0</span>);</span><br><span class="line">        List&lt;ProductCategory&gt; productCategories = productCategoryMapper.selectByExample(productCategoryExample);</span><br><span class="line"></span><br><span class="line">        List&lt;Res_Categories.CategoriesBean&gt; categories = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; productCategories.size(); i++) &#123;</span><br><span class="line">            Res_Categories.CategoriesBean categoriesBean = <span class="keyword">new</span> Res_Categories.CategoriesBean();</span><br><span class="line">            categoriesBean.setCat_id(productCategories.get(i).getId()+<span class="string">""</span>);</span><br><span class="line">            categoriesBean.setName(productCategories.get(i).getName());</span><br><span class="line"></span><br><span class="line">            <span class="comment">//获取子分类</span></span><br><span class="line">            List&lt;Res_Categories.CategoriesBean.SubCetegoriesBean&gt; subCategories = getSubCategories(productCategories</span><br><span class="line">                    .get(i)</span><br><span class="line">                    .getId());</span><br><span class="line"></span><br><span class="line">            categoriesBean.setSub_cetegories(subCategories);</span><br><span class="line">            categories.add(categoriesBean);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        res_categories.setCategories(categories);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> res_categories;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;Res_Categories.CategoriesBean.SubCetegoriesBean&gt; getSubCategories(Short id) &#123;</span><br><span class="line"></span><br><span class="line">        List&lt;Res_Categories.CategoriesBean.SubCetegoriesBean&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        ProductCategoryExample productCategoryExample = <span class="keyword">new</span> ProductCategoryExample();</span><br><span class="line">        ProductCategoryExample.Criteria criteria = productCategoryExample.createCriteria();</span><br><span class="line">        criteria.andParentIdEqualTo(id);</span><br><span class="line">        List&lt;ProductCategory&gt; productCategories = productCategoryMapper.selectByExample(productCategoryExample);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;productCategories.size() ; i++) &#123;</span><br><span class="line">            ProductCategory productCategory = productCategories.get(i);</span><br><span class="line">            Res_Categories.CategoriesBean.SubCetegoriesBean subCetegoriesBean = <span class="keyword">new</span> Res_Categories.CategoriesBean</span><br><span class="line">                    .SubCetegoriesBean();</span><br><span class="line">            subCetegoriesBean.setCat_id(productCategory.getId()+<span class="string">""</span>);</span><br><span class="line">            subCetegoriesBean.setName(productCategory.getName());</span><br><span class="line">            list.add(subCetegoriesBean);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><a href="https://wistbean.github.io/java-ssm-video.html#SSM%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B%E7%9B%AE%E5%BD%95">SSM视频教程目录</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Java" scheme="https://wistbean.github.io/categories/Java/"/>
    
      <category term="Java SSM视频教程" scheme="https://wistbean.github.io/categories/Java/Java-SSM%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="码农商城" scheme="https://wistbean.github.io/tags/%E7%A0%81%E5%86%9C%E5%95%86%E5%9F%8E/"/>
    
      <category term="json" scheme="https://wistbean.github.io/tags/json/"/>
    
      <category term="rest" scheme="https://wistbean.github.io/tags/rest/"/>
    
      <category term="rest接口java" scheme="https://wistbean.github.io/tags/rest%E6%8E%A5%E5%8F%A3java/"/>
    
      <category term="商城首页分类导航" scheme="https://wistbean.github.io/tags/%E5%95%86%E5%9F%8E%E9%A6%96%E9%A1%B5%E5%88%86%E7%B1%BB%E5%AF%BC%E8%88%AA/"/>
    
  </entry>
  
  <entry>
    <title>做一个内容提供者</title>
    <link href="https://wistbean.github.io/make-a-contentprovider.html"/>
    <id>https://wistbean.github.io/make-a-contentprovider.html</id>
    <published>2019-02-21T12:57:36.000Z</published>
    <updated>2019-02-21T13:14:47.238Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>之前在开发Android 的时候，有一个组件叫做 “ContentProvider” ，它主要是用来提供数据，在不同的 APP 之间进行数据共享，在这里我不是要解释 ContentProvider 的代码原理，其实我对它的具体实现也早就忘记了。我只是对这个名称的印象颇深。</p><p>内容提供者，按字面的意思理解，就是乐于分享内容的人，内容的具体展现方式不同，有人喜欢分享干货教程，有人喜欢分享趣事，有人喜欢分享自己拍摄的生活视频等等。</p><p>我认为这些人，都是值得被尊重的。我也想做一个内容提供者，事实上，我已经在做了。这次想说说我为什么想当一个内容提供者。</p><h2 id="1"><a href="#1" class="headerlink" title="1"></a>1</h2><p>在此之前，我想对不同的人所对待内容做一个简单的定义，即：内容提供者、内容分享者、内容搬运者以及内容使用者。</p><p>内容提供者刚刚说了，就是完全原创，并且乐于分享内容的人。</p><p>而内容分享者呢，我认为也算是内容提供者的一种，只不过成本很低，比如你看到了一篇不错的文章，你规范转发给你的朋友，给他们带来价值。</p><p>至于内容搬运者呢？是令很多内容提供者厌烦的人，怎么说呢？他们只会搬运别人内容，这些内容并不是他们自己提供的。这些搬运者更多的是为了赚点小钱，也不管什么版权，不管别人辛苦的原创。取个吸引人的标题，把别人的内容搬运到不同的平台，有人点击就行。</p><p>内容使用者就不必多说了，我们每一个人，从上学那天起，就是内容使用者。</p><h2 id="2"><a href="#2" class="headerlink" title="2"></a>2</h2><p>对我来说，提供内容，其实也是一个学习过程的一部分，我一直觉得，学习是一种过程，而不是一个状态。</p><p>不同的人接收到相同的知识会有不同的理解，同一个人在不同的阶段接收到相同的知识也是如此。提供内容能让我有个记录，我把我此刻所思所想，总结一下，提供出来。有些人看了，觉得很是认同，也有些人看了之后产生不一样的想法。我们再交流一下，彼此又学到了一点，这个过程本身就很美妙，不是吗？</p><h2 id="3"><a href="#3" class="headerlink" title="3"></a>3</h2><p>之前看过 Fenng 的一篇文章，说的是 “利他” ，他认为如果你想获得更多价值，就应该做一个利他的人。我很认同，利他就是利己，而内容提供，就是一种利他的行为。</p><p>最近我也发现，分享会给我带来运气。我想这应该是我之前 “利他” 的原因吧。</p><p>在互联网平台上，我很开心的发现越来越多的人在做着利他的事情，他们都在提供有价值的内容。前两天我想开发一个小工具用来下载视频，放在以往，我可能需要从 0 开始，去研究一些请求规则，数据解析等等。但是现在，我在 GitHub 就发现原来有人就开源了一个类似的了，我只需要把他的项目 clone 下来，然后根据我自己的需要，在此之上修改一些代码，省去了自己的很多时间，不到一天，我就把小工具做的有模有样了。</p><p>用了原作者的 “轮子” ，我就会心存感谢，如果下次原作者有什么需要帮助的，我如果能帮得上的，当然会提供帮助。</p><h2 id="4"><a href="#4" class="headerlink" title="4"></a>4</h2><p>我提供了一些有价值的内容，可以认识到一些朋友，有些是志同道合的，我们一起聊着我们正在做的事情。有些是从我这里得到了帮助，给我加油鼓励，多好啊。</p><p>除此之外，当一个内容提供者还能遇见不少机会，比如就有人找我一起创业，跟我说了很多他的想法，有培训机构找我去讲课，有人找我做外包项目，有人找我投稿，有出版社找我出书等。</p><p>虽然大多我都婉拒了，但是如果我没有坚持提供内容，我想要得到的机会就会显得很是被动。</p><h2 id="5"><a href="#5" class="headerlink" title="5"></a>5</h2><p>虽然做一个内容提供者好像挺多好处的，但都是需要坚持的，如果把它当作赚钱的工具，那是无法做长久的。</p><p>我之所以想坚持的当一个内容提供者，除了刚刚所说的，也因为我看到的“大佬们”，大多就是在坚持不断的提供有价值的内容，我向他们学习。另外，也有一点虚荣心作祟，就是为了 “装那些努力得到的逼”。当然，往后的往后，能顺带赚点钱，就更好了。</p><blockquote><p>这是发表在我的个人公众号「肯定会」的文章，推荐你关注一下哦！</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="个人提升" scheme="https://wistbean.github.io/categories/%E4%B8%AA%E4%BA%BA%E6%8F%90%E5%8D%87/"/>
    
    
      <category term="肯定会公众号" scheme="https://wistbean.github.io/tags/%E8%82%AF%E5%AE%9A%E4%BC%9A%E5%85%AC%E4%BC%97%E5%8F%B7/"/>
    
      <category term="wistbean" scheme="https://wistbean.github.io/tags/wistbean/"/>
    
      <category term="肯定会" scheme="https://wistbean.github.io/tags/%E8%82%AF%E5%AE%9A%E4%BC%9A/"/>
    
      <category term="写作" scheme="https://wistbean.github.io/tags/%E5%86%99%E4%BD%9C/"/>
    
      <category term="原创" scheme="https://wistbean.github.io/tags/%E5%8E%9F%E5%88%9B/"/>
    
  </entry>
  
  <entry>
    <title>解决 Intellij IDEA Cannot resolve bean &#39;dataSource&#39; 问题</title>
    <link href="https://wistbean.github.io/java-bug-datasource-red.html"/>
    <id>https://wistbean.github.io/java-bug-datasource-red.html</id>
    <published>2019-02-11T15:36:56.000Z</published>
    <updated>2019-02-11T16:36:39.364Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Cannot-resolve-bean-‘dataSource’"><a href="#Cannot-resolve-bean-‘dataSource’" class="headerlink" title="Cannot resolve bean ‘dataSource’"></a>Cannot resolve bean ‘dataSource’</h1><p>在 IDEA 中使用 DataSourceTransactionManager 的属性 dataSource，发现 ref = dataSource 没用引用到，报红色</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/dataSource.png" alt="datasource" title="">                </div>                <div class="image-caption">datasource</div>            </figure><p>原因是在没有依赖到 Spring。</p><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><ol><li>打开 Project Structure<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/datasource1.png" alt="datasource" title="">                </div>                <div class="image-caption">datasource</div>            </figure></li><li><p>选择相应的模块，点击上方的 + 号</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/datasource2.png" alt="datasource" title="">                </div>                <div class="image-caption">datasource</div>            </figure></li><li><p>选择 Spring</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/datasource3.png" alt="datasource" title="">                </div>                <div class="image-caption">datasource</div>            </figure></li><li><p>将配置文件依赖进来</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/datasource4.png" alt="datasource" title="">                </div>                <div class="image-caption">datasource</div>            </figure></li><li><p>点击 apply 确认，问题解决</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/datasource5.png" alt="datasource" title="">                </div>                <div class="image-caption">datasource</div>            </figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="java" scheme="https://wistbean.github.io/categories/java/"/>
    
      <category term="bug" scheme="https://wistbean.github.io/categories/java/bug/"/>
    
    
      <category term="Intellij IDEA" scheme="https://wistbean.github.io/tags/Intellij-IDEA/"/>
    
      <category term="bug" scheme="https://wistbean.github.io/tags/bug/"/>
    
      <category term="dataSource" scheme="https://wistbean.github.io/tags/dataSource/"/>
    
      <category term="Cannot resolve bean &#39;dataSource&#39;" scheme="https://wistbean.github.io/tags/Cannot-resolve-bean-dataSource/"/>
    
  </entry>
  
  <entry>
    <title>「6-3」使用SSM搭建rest服务系统</title>
    <link href="https://wistbean.github.io/java-ssm-6-3.html"/>
    <id>https://wistbean.github.io/java-ssm-6-3.html</id>
    <published>2019-02-11T08:02:57.000Z</published>
    <updated>2019-03-01T16:00:27.697Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><iframe width="100%" height="315" src="https://www.youtube.com/embed/8ruR_t5kock" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><blockquote><p>访问不了Youtube？<br>1.点击<a href="/banwagong-ss.html">搭建自己的ss教程</a>轻松访问1080p高清Youtube视频。<br>2.点击<a href="https://space.bilibili.com/7028047" target="_blank" rel="noopener">b站视频教程地址</a>观看。</p></blockquote><p>在此之前，我们已经搭建好了 Portal 系统了，那么数据从哪里来呢？ 就需要有一个系统专门来提供数据，所以我们需要搭建一个 rest 的服务来提供数据。</p><h1 id="什么是-REST-？"><a href="#什么是-REST-？" class="headerlink" title="什么是 REST ？"></a>什么是 REST ？</h1><p>REST 是由 <a href="https://en.wikipedia.org/wiki/Roy_Fielding" target="_blank" rel="noopener">Roy Fielding</a> 大佬在 2000 年的时候提出来的：</p><blockquote><p>REST是设计分布式系统的体系结构样式。它不是标准的，而是一组约束，例如无状态、具有客户机/服务器关系和统一的接口。REST与HTTP没有严格的关系，但它通常与HTTP关联。</p></blockquote><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/c/cd/Roy_Fielding.jpg/220px-Roy_Fielding.jpg" alt="Roy Fielding" title="">                </div>                <div class="image-caption">Roy Fielding</div>            </figure><h2 id="使用-REST-的原则"><a href="#使用-REST-的原则" class="headerlink" title="使用 REST 的原则"></a>使用 REST 的原则</h2><ol><li>我们定义的 URI 需要清晰易于理解，比如 <code>/manong/rest/products/list</code> ,这样我们一样就能明白这是请求商品数据列表。</li><li>通过 JSON 或者 XML 来传递数据对象和属性。</li><li>明确的使用 HTTP 方法（例如，get、post、put和delete）</li><li>无状态，在请求的时候，服务端不存储客户端的上下文状态</li></ol><h1 id="使用-SSM-搭建-REST-服务"><a href="#使用-SSM-搭建-REST-服务" class="headerlink" title="使用 SSM 搭建 REST 服务"></a>使用 SSM 搭建 REST 服务</h1><p>之前我们已经在 manong 项目中创建了 rest 模块，接下来我们进行一些整合和配置。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/rest.png" alt="rest" title="">                </div>                <div class="image-caption">rest</div>            </figure><h1 id="package-声明"><a href="#package-声明" class="headerlink" title="package 声明"></a>package 声明</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;packaging&gt;war&lt;/packaging&gt;</span><br></pre></td></tr></table></figure><h1 id="添加相关依赖"><a href="#添加相关依赖" class="headerlink" title="添加相关依赖"></a>添加相关依赖</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;dependencies&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;com.kendinghui&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;manong_common&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;com.kendinghui&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;manong_manager_pojo&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;com.kendinghui&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;manong_manager_mapper&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;commons-fileupload&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;commons-fileupload&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;com.alibaba&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;druid&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;mysql&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.mybatis&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;mybatis&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;com.github.pagehelper&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;pagehelper&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.mybatis&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;mybatis-spring&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-context&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-context-support&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-jdbc&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-aspects&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-webmvc&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-beans&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;/dependencies&gt;</span><br></pre></td></tr></table></figure><h1 id="使用-tomcat-插件"><a href="#使用-tomcat-插件" class="headerlink" title="使用 tomcat 插件"></a>使用 tomcat 插件</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;build&gt;</span><br><span class="line">        &lt;plugins&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;groupId&gt;org.apache.tomcat.maven&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;tomcat7-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">                &lt;configuration&gt;</span><br><span class="line">                    &lt;port&gt;8088&lt;/port&gt;</span><br><span class="line">                    &lt;path&gt;/&lt;/path&gt;</span><br><span class="line">                &lt;/configuration&gt;</span><br><span class="line">            &lt;/plugin&gt;</span><br><span class="line">        &lt;/plugins&gt;</span><br><span class="line">    &lt;/build&gt;</span><br></pre></td></tr></table></figure><ul><li><a href="https://wistbean.github.io/java-ssm-video.html#SSM%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B%E7%9B%AE%E5%BD%95">SSM视频教程目录</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Java" scheme="https://wistbean.github.io/categories/Java/"/>
    
      <category term="Java SSM视频教程" scheme="https://wistbean.github.io/categories/Java/Java-SSM%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="SSM" scheme="https://wistbean.github.io/tags/SSM/"/>
    
      <category term="码农商城" scheme="https://wistbean.github.io/tags/%E7%A0%81%E5%86%9C%E5%95%86%E5%9F%8E/"/>
    
      <category term="rest" scheme="https://wistbean.github.io/tags/rest/"/>
    
      <category term="restful" scheme="https://wistbean.github.io/tags/restful/"/>
    
  </entry>
  
  <entry>
    <title>从0到1学习python3爬虫教程</title>
    <link href="https://wistbean.github.io/python-spider-tutorial.html"/>
    <id>https://wistbean.github.io/python-spider-tutorial.html</id>
    <published>2019-02-05T08:08:19.000Z</published>
    <updated>2019-02-10T09:45:18.206Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="python爬虫前，抓包"><a href="#python爬虫前，抓包" class="headerlink" title="python爬虫前，抓包"></a>python爬虫前，抓包</h1><ul><li><a href="https://mp.weixin.qq.com/s/XJ4Jb5KU0Mf0PIeiSpdC7Q" target="_blank" rel="noopener">python爬虫系列教程00 | 什么是爬虫，怎么玩爬虫？</a></li><li><a href="https://mp.weixin.qq.com/s/aqOuCZKxpEW2_P2fkfWReg" target="_blank" rel="noopener">python爬虫系列教程01 | 教你在 Chrome 浏览器轻松抓包</a></li><li><a href="https://mp.weixin.qq.com/s/NGOUtPIW8n1whOYwR-LQYA" target="_blank" rel="noopener">python爬虫系列教程02 | 教你通过 Fiddler 进行手机抓包？</a></li></ul><h1 id="python爬虫库的使用"><a href="#python爬虫库的使用" class="headerlink" title="python爬虫库的使用"></a>python爬虫库的使用</h1><ul><li><a href="https://mp.weixin.qq.com/s/rJ8bt4HjYU36MrsDejHLZA" target="_blank" rel="noopener">python爬虫系列教程03 | 那个叫做 Urllib 的库让我们的 python 假装是浏览器</a></li><li><a href="https://mp.weixin.qq.com/s/dYtF8ydJtqub0QkK1cGVjA" target="_blank" rel="noopener">python爬虫系列教程04 | 长江后浪推前浪，Reuqests库把urllib库拍在沙滩上</a></li><li><a href="https://mp.weixin.qq.com/s/t4hXKK-pjA8rIVmJuiyQcw" target="_blank" rel="noopener">python爬虫系列教程05 | 年轻人，不会正则表达式你睡得着觉？有点出息没有？</a></li><li><a href="https://mp.weixin.qq.com/s/ET9HP2n3905PxBy4ZLmZNw" target="_blank" rel="noopener">python爬虫系列教程06 | 你的第一个爬虫，爬取当当网 Top 500 本五星好评书籍</a></li><li><a href="https://mp.weixin.qq.com/s/X8BT4sRp7_a4NHXa9ZSzCg" target="_blank" rel="noopener">python爬虫系列教程07 | 有了 BeautifulSoup ，妈妈再也不用担心我的正则表达式了</a></li><li><a href="https://mp.weixin.qq.com/s/zzTRw4w6SFSeUDGlUCvXGw" target="_blank" rel="noopener">python爬虫系列教程08 | 你的第二个爬虫，要过年了，爬取豆瓣最受欢迎的250部电影慢慢看</a></li><li><a href="https://mp.weixin.qq.com/s/pNs5VBLadYQbe8RjsR4x1g" target="_blank" rel="noopener">python爬虫系列教程09 | 上来，自己动 ！这就是 selenium 的牛逼之处</a></li></ul><h1 id="相关"><a href="#相关" class="headerlink" title="相关"></a>相关</h1><p><a href="/categories/python/">python教程资源</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="python" scheme="https://wistbean.github.io/categories/python/"/>
    
      <category term="python爬虫" scheme="https://wistbean.github.io/categories/python/python%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="教程" scheme="https://wistbean.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="python" scheme="https://wistbean.github.io/tags/python/"/>
    
      <category term="爬虫" scheme="https://wistbean.github.io/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="python3爬虫教程" scheme="https://wistbean.github.io/tags/python3%E7%88%AC%E8%99%AB%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>我的 2018 年终总结</title>
    <link href="https://wistbean.github.io/nian-zhong-zong-jie-2018.html"/>
    <id>https://wistbean.github.io/nian-zhong-zong-jie-2018.html</id>
    <published>2019-02-04T15:11:06.000Z</published>
    <updated>2019-02-21T13:01:46.174Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>看到一些朋友在 19 年的第一天开始总结自己的 18 年，看着他们的得与失以及对 19 年的展望。我也跟着心潮澎湃，我也想总结一下，看看自己在去年走过的路。可是迟迟未动，因为有太多的话，一时间不知道从哪说起。后来想想，我以后还是把自己的年终总结，放在春节之际，刚好都放假，刚好过年，刚好给自己增添点 “年味”。挺好的。</p><p>之前看过李笑来老师的书，有一句话让我印象挺深的，他说：“如果经过一段时间之后，你竟然不觉得过去的你很傻 x ，那表明你已经彻底变成了无可救药的傻 x ” 。有时候我回过头看看过去的自己，除了觉得自己傻 x 之外，还会觉得有些事情让我尴尬到无地自容，不过还好，别人都忘了。</p><p>18 年我在这个公众号分享过挺多文章的，有时候写写教程，有时候看到不错的书会把精华总结一下，有时候也写一些有的没的。在某个晚上自己翻了一下自己公众号写的东西，觉得挺不满意的，有些文章写的太随意了，甚至觉得有些文章写的就是垃圾，一眼就看得出来当下的自己是在迎合，我想如果一味的是为了迎合而写，那么文章是不纯粹的，很少有我自己个人的东西。所以一夜之间，我把所有文章都删了。可以看到开头的时候，我写的是第 1 篇。</p><h1 id="1-写作"><a href="#1-写作" class="headerlink" title="1.写作"></a>1.写作</h1><p>关于写作这件事情，我觉得就跟我打代码是一样的，它们都具有原创的特性，是我的兴趣之一，在开始的时候都需要输入，在过程之中会质疑和修改，在完成输出之后，得到反馈又会觉得享受。回过头来看，都会觉得最开始的那些都是垃圾，但是往后余生中又会继续。只是现在觉得不能太过于随意，得再认真一点去对待，少点急功近利，把时间拉长，写个 10 年怎么样？</p><p>我很喜欢那些原创的人，他们用自己的学识和思考，创作出一个又一个令人或是振奋，或是幽默，或是感同身受的作品。像周星驰的电影，周杰伦的歌曲，韩寒的书等，为什么我们会喜欢，我想是有一定的道理的。</p><h1 id="2-尝试"><a href="#2-尝试" class="headerlink" title="2. 尝试"></a>2. 尝试</h1><p>因为不太安分，去年我做了很多尝试，一直在寻找自己的优势，做了很多加法，看到什么新鲜事物，我都想去试一下，因为一开始我不知道我除了打代码之外，还有什么适合我干的。</p><h2 id="2-1"><a href="#2-1" class="headerlink" title="2.1"></a>2.1</h2><p>我把自己的 blog 换了一个 Material Design 风格，在那里专心写技术相关的内容。</p><h2 id="2-2"><a href="#2-2" class="headerlink" title="2.2"></a>2.2</h2><p>听过一些播客，他们以声音的形式来分享一些行业动态，思考，书籍。我也试着做了一个自己的 podcast ，每周一更，53 期，网易有 900+ 订阅，反馈寥寥。</p><h2 id="2-3"><a href="#2-3" class="headerlink" title="2.3"></a>2.3</h2><p>公众号，最开始是为了尝鲜，发现微信有这个新功能，就注册了一个瞎玩几天就扔一边了。后来看到别人做的风生水起，在公众号居然赚到了钱，于是又开始重视起来，可是自己真的去弄的时候才发现，我想的太天真了，并不是写写东西那么简单。错过了趋势，不懂产品，不懂定位，没人关注，就算我把文章写出个花来，也没人知道。所以我现在这个 “肯定会” 的公众号也就 2k 关注者。</p><p>后来我想，如果把一个公众号当做产品，用产品的思维去做个公众号应该能学到不少东西，所以我开启了一个新的公众号，叫做 “学习python的正确姿势” 。把我那无处安放的小幽默，放在这个公众号的 “小帅b” 身上，希望能写出轻松幽默的教程，来教大家从 0 开始怎么玩 python 。因为有了一定的定位，这个号平均每天会新增 50+ 关注，不出意外再过几天就 5k 关注了。以后多学学产品，定个小目标，下次春节总结的时候，看看能不能突破 2w 关注。</p><h2 id="2-4"><a href="#2-4" class="headerlink" title="2.4"></a>2.4</h2><p>我在 b 站和 YouTube 上传了关于 Java 进阶的视频教程，这个教程是面向的是有一定 Java 基础的同学，但其实也是给自己挖了个坑，因为我要制作的是一整个系列的视频教程，并不是我一开始想的那么简单，每一小节我都需要先把具体的功能实现完，然后站在自学的角度思考，怎么样才能通俗易懂？</p><p>接着需要录制，剪辑，这个过程挺耗费时间的。再加上我在去年做了很多其它领域的尝试以及本身的工作，所以这个课程更新速度很慢。不过从学习这个课程的朋友们的反馈来看，整体还是不错的，b 站有 1k+ 的朋友一起在学习。在新的一年我肯定会做减法了，而从这个课程中我也找到了自己的一点优势，会加快更新这个课程。</p><p>我对这个视频教程的质量要求也挺高的，我希望做出来的视频教程让人看起来是一种享受，看完之后觉得自己学到东西之外，还会觉得很爽，不仅局限于内容本身。还有精神层面的享受。</p><h2 id="2-5"><a href="#2-5" class="headerlink" title="2.5"></a>2.5</h2><p>跟朋友合伙了一个创业项目，虽然失败了，但是我并不觉得这是一件坏事，至少在这段时间里面让我思考了很多，也成长了不少。这本身也是一个学习的过程。很多事情，并不是嘴上说说就完事了，需要自己亲身的去实践，经历后才会理解当时自己犯的错，也才会更加的反思自己，在自己接下来的人生中尽量走好每一步。</p><h2 id="2-6"><a href="#2-6" class="headerlink" title="2.6"></a>2.6</h2><p>去年付费加入了几个不同的圈子，在不同的圈子里面确实开阔了不少思维，他们有不一样的想法，而且我发现跟他们沟通起来特别顺畅。特别是谈什么合作的时候，直接说重点，三言两句都明白了。</p><p>我自己也开了一个知识星球，因为除了能让加入的朋友来提问我课程中遇到的问题之外，我还找不到其它有利于他们的方式，所以群上有时候有些朋友说要加入，但是有点犹豫。我都会跟他们说：“学生党别加，犹豫的别加，等你们毫不犹豫的时候，再加入吧” 。但还是有 100+ 位朋友加入，感谢付费的朋友用实际行动来支持我。</p><p>以上这几点是去年的主要尝试，一直在试错，其实成长，并不是非得把自己变成另外一个人，而是应该找到自己的优势，然后不断的壮大自己的优势，很开心的是，我在 18 年的时候找到了自己的优势了。</p><h1 id="3-输入"><a href="#3-输入" class="headerlink" title="3. 输入"></a>3. 输入</h1><p>关于阅读，在互联网有太多资源了，现在已经不缺乏知识，当然也充斥着很多的信息，有那么一段时间我发现自己被动的接收太多信息了，这些信息有真有假，是具备时效性的，有些信息还不知不觉的改变着自己的思维，可怕的是自己还不自知。</p><p>而知识是被不断的验证，不断积累的。我要学的是知识，而不是信息，往往真正的主动学习是接受自己的无知开始的。</p><p>在去年我觉得读过的好书是 斯宾塞・约翰逊 用了 5 年时间写的 《礼物》，以寓言的故事引导年轻人过好自己的生活。另一本是李笑来老师的 《韭菜的自我修养》，韭菜这个词咋一看有点贬义，但是我在书中学到了理财的方法以及一些启发。其它技术书籍就不说了。</p><p>也订阅了一些在线的技术专栏，学习那些我以前不知道的内容。现在的阅读形式很多。但是本质是不变的，那就是输入，这一点，接下来也要继续多多的输入。</p><h1 id="4-情感"><a href="#4-情感" class="headerlink" title="4. 情感"></a>4. 情感</h1><p>关于情感的对待，以前的自己在情感中有点傲气，在去年的分手之后思考了很多，发现了自己的不足的地方，人就是这样，在失去的那一刻，才懂得。也感谢对方，及时止损，不会为了沉没成本而做出不明智的选择。不管怎样，我还是想努力做一个更好的自己，升级好自己就是对过去的错一个最好的交代。依然相信爱情，只不过现在暂时不抱太多的期望。恩，很开心经历了一些事情，尽管有些时候在当下是难受的。</p><h1 id="5-2019要做的事"><a href="#5-2019要做的事" class="headerlink" title="5. 2019要做的事"></a>5. 2019要做的事</h1><p>从过去这一年来，发现自己还是挺折腾的，虽然不太安分，但还是知道自己在干什么，我知道自己的能力，做不到 Top 1%, 所以我改变策略，我希望找到优势之后，在那么两三个领域中，做到 Top 20%。我想还是可以的。</p><p>其实一个好的学习过程，是有输入和输出的，就像 “费曼学习法” 那样，我过去一年一直在这样执行，也确实的感受到，学习和学到了是完全不一样的，只有真正的将自己理解的东西输出，并且让别人懂，我觉得这才是学到了。所以这一年我或多或少还是提高学习能力的。</p><p>不管是觉得以前的代码或者文章写的多垃圾，也不太过多的计较过去的开心与难过，好与坏。接下来依然会坚持，书写自己的人生。</p><p>在新的一年里，我并没有想好完整的一个规划，但是我会做减法，在自己的优势里面做的更好。</p><h2 id="5-1"><a href="#5-1" class="headerlink" title="5.1"></a>5.1</h2><p>每一个技术人，都或多或少的想写出一个牛逼的开源框架，或者做出一款不错的产品。我也不例外，在接下来的一年里，继续沉淀好自己的技术基础，为未来的做点准备，为那 20% 前进。</p><h2 id="5-2"><a href="#5-2" class="headerlink" title="5.2"></a>5.2</h2><p>坚持输出，输出有一个反作用，就是让自己先输入、先学习，今年想针对性的看一些书，少点浮躁，像今天写文章的状态一样，安静的思考和总结，在朋友圈，公众号输出观点和想法，在 blog 输出技术相关内容。</p><p>有一个动力是，有时候听到朋友因为看了我的分享，找到了满意的企业，或是看到朋友发自内心给我的打赏支持，我都觉得很开心，让我觉得我分享的内容是有价值的。</p><h2 id="5-3"><a href="#5-3" class="headerlink" title="5.3"></a>5.3</h2><p>去年做了那么多尝试，居然没有在意多锻炼自己的身体，虽然体重比之前重了些许，但是还是个瘦子，在新的一年必须健身，刚好也看完了一本健身相关的书籍，接下来做好计划跟着练。不想再每天都感到累得要死了。</p><h2 id="5-4"><a href="#5-4" class="headerlink" title="5.4"></a>5.4</h2><p>其实我自己对物质要求并没有很高，随便点到一个好吃的外卖我都能开心的发朋友圈，相比之下，我更在意的是，能有更多的时间做自己想做的事情。但有一个词叫做 “责任” ，所以，进一步学习理财知识，多赚点钱吧。</p><h2 id="5-5"><a href="#5-5" class="headerlink" title="5.5"></a>5.5</h2><p>希望新的一年里，不出什么岔子，家人平安健康，喜欢我的人能幸福。也希望自己能少点失眠，能按着自己的计划行事最好。</p><p>薛兆丰老师说过：“年轻人只是贫，但不穷” 。所以告诉自己不要气馁，也不要设限。道路且长，莫问归路。</p><blockquote><p>这是发表在我的个人公众号「肯定会」的文章，推荐你关注一下哦！</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="个人提升" scheme="https://wistbean.github.io/categories/%E4%B8%AA%E4%BA%BA%E6%8F%90%E5%8D%87/"/>
    
    
      <category term="肯定会" scheme="https://wistbean.github.io/tags/%E8%82%AF%E5%AE%9A%E4%BC%9A/"/>
    
      <category term="公众号" scheme="https://wistbean.github.io/tags/%E5%85%AC%E4%BC%97%E5%8F%B7/"/>
    
      <category term="2018" scheme="https://wistbean.github.io/tags/2018/"/>
    
      <category term="年终总结" scheme="https://wistbean.github.io/tags/%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>搬瓦工新手一键快速搭建SSR并开启bbr加速上网教程</title>
    <link href="https://wistbean.github.io/banwagong-ssr-quick.html"/>
    <id>https://wistbean.github.io/banwagong-ssr-quick.html</id>
    <published>2019-01-19T09:20:03.000Z</published>
    <updated>2019-03-01T07:33:58.510Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>搬瓦工搭建 SSR 教程，如果你是新手，又想搭建 SSR ，那么这个一键快速搭建 SSR 教程正和你意。</p><h1 id="SSR-简介"><a href="#SSR-简介" class="headerlink" title="SSR 简介"></a>SSR 简介</h1><p>SSR（ShadowsocksR ） 是 SS（Shadowsocks） 的增强版，在 SS 的基础上添加了一些功能。根据 <a href="https://zh.wikipedia.org/wiki/Shadowsocks#ShadowsocksR" target="_blank" rel="noopener">维基百科</a> 介绍，SSR 增加了一些数据混淆方式，称修复了部分安全问题并可以提高QoS优先级。</p><h1 id="搬瓦工云服务器"><a href="#搬瓦工云服务器" class="headerlink" title="搬瓦工云服务器"></a>搬瓦工云服务器</h1><p><a href="https://bwh88.net/aff.php?aff=32874" target="_blank">搬瓦工官网</a> 提供了许多性价比高的云服务器，并且可以使用支付宝支付，可以说很是亲民了，还有专门的 CN2 路线让速度加快。</p><h2 id="搬瓦工优惠购买"><a href="#搬瓦工优惠购买" class="headerlink" title="搬瓦工优惠购买"></a>搬瓦工优惠购买</h2><p>很多人不知道搬瓦工官网隐藏了一个优惠码，使用这个优惠码可以优惠 6% 左右，首先选择以下隐藏优惠码的优惠链接：</p><table><thead><tr><th>搬瓦工配置</th><th>搬瓦工费用</th><th>优惠链接</th></tr></thead><tbody><tr><td><em>SPECIAL 40G KVM PROMO V3 - LOS ANGELES - CN2  </em> <br>  SSD硬盘: 40  GB RAID-10 <br> RAM内存: 2048   MB <br> CPU处理器: 1x Intel Xeon <br> Transfer流量: 2000  GB/月 <br> 连接速度: 1 Gigabit <br> 洛杉矶机房，CN2路线，使用中国的直线路线，速度加快</td><td>$27.99/季</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=58" target="_blank" rel="noopener">点击进入</a></td></tr><tr><td><em>SPECIAL 20G KVM PROMO V3 - LOS ANGELES - CN2 </em> <br>  SSD硬盘: 20 GB RAID-10 <br> RAM内存: 1024  MB <br> CPU处理器: 1x Intel Xeon <br> Transfer流量: 1000  GB/月 <br> 连接速度: 1 Gigabit <br> 洛杉矶机房，CN2路线，使用中国的直线路线，速度加快</td><td>$29.99 /半年</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=57" target="_blank" rel="noopener">点击进入</a></td></tr><tr><td><em>80G KVM – PROMO</em> <br> SSD硬盘: 80 GB RAID-10<br>RAM内存: 4 GB<br>CPU处理器: 4x Intel Xeon<br>Transfer流量: 3 TB/mo<br>连接速度: 1 Gigabit<br>Multiple locations</td><td>$19.99/月</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=46" target="_blank" rel="noopener">点击进入</a></td></tr><tr><td><em>20G KVM – PROMO</em> <br> SSD硬盘: 20 GB RAID-10 <br>RAM内存: 1024 MB <br>CPU处理器: 2x Intel Xeon <br>Transfer流量: 1 TB/mo <br>连接速度: 1 Gigabit <br>Multiple locations</td><td>$49.99/年</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=44" target="_blank" rel="noopener">点击进入</a></td></tr><tr><td><em>40G KVM – PROMO</em> <br> SSD硬盘: 40 GB RAID-10 <br>RAM内存: 2 GB <br>CPU处理器: 3x Intel Xeon <br>Transfer流量: 2 TB/mo <br>连接速度: 1 Gigabit <br>Multiple locations</td><td>$99.99/年</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=45" target="_blank" rel="noopener">点击进入</a></td></tr><tr><td><em>160G KVM – PROMO</em> <br> SSD硬盘: 160 GB RAID-10<br>RAM内存: 8 GB<br>CPU处理器: 5x Intel Xeon<br>Transfer流量: 4 TB/mo<br>连接速度: 1 Gigabit<br>Multiple locations</td><td>$39.99/月</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=47" target="_blank" rel="noopener">点击进入</a></td></tr><tr><td><em>3200G KVM – PROMO</em> <br> SSD硬盘: 320 GB RAID-10<br>RAM内存: 16 GB<br>CPU处理器: 6x Intel Xeon<br>Transfer流量: 5 TB/mo<br>连接速度: 1 Gigabit<br>Multiple locations</td><td>$79.99/月</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=48" target="_blank" rel="noopener">点击进入</a></td></tr></tbody></table><p>当你进到这个页面的时候呢，别急着点击「Add to Cart」添加到购物车，这里面暗藏着一个优惠码，很多人不知道，使用浏览器查看源代码，chrome浏览器的话按F12，然后搜索「code」，你会发现有一个 「Try this promo code: xxxx 」，这个xxxx就是优惠码，你把他复制下来，待会有用。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/vpn4.png" alt="使用搬瓦工优惠码" title="">                </div>                <div class="image-caption">使用搬瓦工优惠码</div>            </figure><p>页面的 Location 就是选择服务器的地址，到时访问谷歌的时候会显示你当前访问的地址。好了，我们点击「Add to Cart」。</p><p>接下来，进入结算页面，我们刚才复制的优惠码就派上用场了，将你刚刚复制的优惠码复制进去然后点击 「Validate Code」，看！是不是优惠了！一般人不知道这种操作:</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/vpn5.png" alt="使用搬瓦工优惠码" title="">                </div>                <div class="image-caption">使用搬瓦工优惠码</div>            </figure><p>接着点击「CheckOut」完成付款即可。付款的时候选择 Alipay 就可以使用支付宝付款。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/vpn8.png" alt="使用搬瓦工支付宝支付" title="">                </div>                <div class="image-caption">使用搬瓦工支付宝支付</div>            </figure><p>购买完毕后你就拥有一台你自己的服务器了，接着点击Services下的MyServices，可以看到你的服务器：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/vpn6.png" alt="搬瓦工搭建ssr" title="">                </div>                <div class="image-caption">搬瓦工搭建ssr</div>            </figure><p>我们点击「KiwiVM Control Panel」进入管理界面：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/vpn7.png" alt="搬瓦工搭建ssr" title="">                </div>                <div class="image-caption">搬瓦工搭建ssr</div>            </figure><p>可以看到你服务器的信息:</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/vpn9.png" alt="搬瓦工搭建ssr" title="">                </div>                <div class="image-caption">搬瓦工搭建ssr</div>            </figure><p>有了<a href="https://bwh1.net/aff.php?aff=32874" target="_blank">搬瓦工</a>服务器的IP地址和端口,我们就可以连接了：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/pic1.png" alt="搬瓦工搭建ssr" title="">                </div>                <div class="image-caption">搬瓦工搭建ssr</div>            </figure><p>账号是root，密码可以在这里获取：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/pic2.png" alt="搬瓦工搭建ssr" title="">                </div>                <div class="image-caption">搬瓦工搭建ssr</div>            </figure><h1 id="使用-SSH-工具连接到搬瓦工服务器"><a href="#使用-SSH-工具连接到搬瓦工服务器" class="headerlink" title="使用 SSH 工具连接到搬瓦工服务器"></a>使用 SSH 工具连接到搬瓦工服务器</h1><h2 id="windows系统连接搬瓦工vps"><a href="#windows系统连接搬瓦工vps" class="headerlink" title="windows系统连接搬瓦工vps"></a>windows系统连接搬瓦工vps</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/pic3.png" alt="搬瓦工搭建ssr" title="">                </div>                <div class="image-caption">搬瓦工搭建ssr</div>            </figure><p>远程连接工具我一直用的是 <a href="https://www.vandyke.com/products/securecrt/" target="_blank" rel="noopener">SecureCRT</a> , 当然你也可以使用其它的 SSH 工具。<br>破解版的SecureCRT可以在百度网盘这里获取：</p><ul><li>链接: <a href="https://pan.baidu.com/s/11W4WHjCjmiNw6einQNrcPg" target="_blank" rel="noopener">https://pan.baidu.com/s/11W4WHjCjmiNw6einQNrcPg</a></li><li>提取码: tyux</li></ul><h2 id="mac系统连接搬瓦工vps"><a href="#mac系统连接搬瓦工vps" class="headerlink" title="mac系统连接搬瓦工vps"></a>mac系统连接搬瓦工vps</h2><p>打开你的 Terminal 终端，接着输入：ssh root@你的ip地址，接着输入你的搬瓦工的 root 密码就可以登录了。</p><h1 id="一键安装使用SSR"><a href="#一键安装使用SSR" class="headerlink" title="一键安装使用SSR"></a>一键安装使用SSR</h1><h2 id="安装-git"><a href="#安装-git" class="headerlink" title="安装 git"></a>安装 git</h2><p>输入命令：<br>    yum install git</p><h2 id="下载安装ssr安装脚本"><a href="#下载安装ssr安装脚本" class="headerlink" title="下载安装ssr安装脚本"></a>下载安装ssr安装脚本</h2><p>输入命令：<br>    git clone <a href="https://github.com/flyzy2005/ss-fly" target="_blank" rel="noopener">https://github.com/flyzy2005/ss-fly</a></p><h2 id="运行ssr脚本"><a href="#运行ssr脚本" class="headerlink" title="运行ssr脚本"></a>运行ssr脚本</h2><p>输入命令：<br>    ss-fly/ss-fly.sh -ssr</p><p>运行之后会提示你输入密码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Please enter password for ShadowsocksR:</span><br><span class="line">(Default password: teddysun.com) : (在这里输入密码然后回车)</span><br></pre></td></tr></table></figure><p>接着会提示你输入端口号：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Please enter a port for ShadowsocksR [1-65535] (Default port: 14593):(在这里输入端口然后回车)</span><br></pre></td></tr></table></figure><p>接着会提示你输入加密方式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Please select stream cipher for ShadowsocksR:（这里输入 7 然后回车）</span><br></pre></td></tr></table></figure><p>最后就会出现下面的内容，说明你已经安装ssr成功了：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Congratulations, ShadowsocksR server install completed!</span><br><span class="line">Your Server IP        :服务器ip</span><br><span class="line">Your Server Port      :端口</span><br><span class="line">Your Password         :密码</span><br><span class="line">Your Protocol         :协议</span><br><span class="line">Your obfs             :混淆</span><br><span class="line">Your Encryption Method:your_encryption_method</span><br><span class="line"></span><br><span class="line">Welcome to visit:https://shadowsocks.be/9.html</span><br><span class="line">Enjoy it!</span><br></pre></td></tr></table></figure><h1 id="SSR-命令操作"><a href="#SSR-命令操作" class="headerlink" title="SSR 命令操作"></a>SSR 命令操作</h1><ol><li>启动：/etc/init.d/shadowsocks start</li><li>停止：/etc/init.d/shadowsocks stop</li><li>卸载：./shadowsocksR.sh uninstall</li></ol><h1 id="一键开启-BBR-加速"><a href="#一键开启-BBR-加速" class="headerlink" title="一键开启 BBR 加速"></a>一键开启 BBR 加速</h1><p>到这里你是安装成功SSR了，不过还可以加速上网：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ss-fly/ss-fly.sh -bbr</span><br></pre></td></tr></table></figure><p>然后会提示你重启才会生效，我们按【y】进行重启。</p><p>这样就可以了。</p><h1 id="使用Shadowsocks"><a href="#使用Shadowsocks" class="headerlink" title="使用Shadowsocks"></a>使用Shadowsocks</h1><h2 id="windows使用Shadowsocks"><a href="#windows使用Shadowsocks" class="headerlink" title="windows使用Shadowsocks"></a>windows使用Shadowsocks</h2><p>windows点击下载：<a href="https://pan.baidu.com/s/19m0AfTkPDSRj0bfYrGpbIg" target="_blank" rel="noopener">Shadowsocks windows客户端</a></p><p>打开 Shadowsocks 客户端，输入ip地址，密码，端口，和加密方式。接着点击确定，<strong>右下角会有个小飞机按钮，右键–&gt;启动代理</strong>。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/ss4.png" alt="ss" title="">                </div>                <div class="image-caption">ss</div>            </figure><p>这时候就可以科学上网了。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/vpn18.png" alt="google" title="">                </div>                <div class="image-caption">google</div>            </figure><h2 id="Android使用Shadowsocks"><a href="#Android使用Shadowsocks" class="headerlink" title="Android使用Shadowsocks"></a>Android使用Shadowsocks</h2><p>Android点击下载：<a href="https://pan.baidu.com/s/1coAkZn-GuYHu5eIKaHECxA" target="_blank" rel="noopener">Shadowsocks Android客户端</a></p><p>打开apk安装，接着打开APP，输入ip地址，密码，端口，和加密方式。即可科学上网。</p><h2 id="iPhone使用Shadowsocks"><a href="#iPhone使用Shadowsocks" class="headerlink" title="iPhone使用Shadowsocks"></a>iPhone使用Shadowsocks</h2><p>iPhone要下载的app需要在appstore下载，但是需要用美区账号才能下载，而且这个APP需要钱。在这里提供一种解决方案，就是可以再搭建一个<a href="https://wistbean.github.io/ipsec,l2tp_vpn.html#%E4%BD%BF%E7%94%A8-IPsec-L2TP-%E8%84%9A%E6%9C%AC%E6%90%AD%E5%BB%BA">IPsec/L2TP VPN</a>,专门给你的iPhone使用。</p><h1 id="相关"><a href="#相关" class="headerlink" title="相关"></a>相关</h1><ul><li><a href="https://wistbean.github.io/banwagong-quick-build-ss.html">搬瓦工vps一键搭建ss并开启BBR代理加速科学上网，傻瓜式1分钟搞定</a></li><li><a href="https://wistbean.github.io/vultr-vps-bbr-ss.html">使用vultr(vps)搭建ss并开启BBR快速上网教程 超简单10分钟搞定</a></li><li><a href="https://wistbean.github.io/cloud-server.html">推荐|我用了十几台云服务器VPS后，告诉你哪家云服务产商性价比高,性能稳定</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="vpn" scheme="https://wistbean.github.io/categories/vpn/"/>
    
      <category term="搬瓦工" scheme="https://wistbean.github.io/categories/vpn/%E6%90%AC%E7%93%A6%E5%B7%A5/"/>
    
    
      <category term="搬瓦工ssr 2019" scheme="https://wistbean.github.io/tags/%E6%90%AC%E7%93%A6%E5%B7%A5ssr-2019/"/>
    
      <category term="搬瓦工ssr混淆" scheme="https://wistbean.github.io/tags/%E6%90%AC%E7%93%A6%E5%B7%A5ssr%E6%B7%B7%E6%B7%86/"/>
    
      <category term="搬瓦工ssr链接" scheme="https://wistbean.github.io/tags/%E6%90%AC%E7%93%A6%E5%B7%A5ssr%E9%93%BE%E6%8E%A5/"/>
    
      <category term="搬瓦工cn2 ssr" scheme="https://wistbean.github.io/tags/%E6%90%AC%E7%93%A6%E5%B7%A5cn2-ssr/"/>
    
      <category term="科学上网" scheme="https://wistbean.github.io/tags/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    
      <category term="shadowsocks搭建教程" scheme="https://wistbean.github.io/tags/shadowsocks%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>「6-2」门户系统 Portal 所涉及到的功能介绍及静态首页的添加</title>
    <link href="https://wistbean.github.io/java-ssm-6-2.html"/>
    <id>https://wistbean.github.io/java-ssm-6-2.html</id>
    <published>2019-01-17T07:50:36.000Z</published>
    <updated>2019-03-01T15:59:17.632Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><iframe width="100%" height="315" src="https://www.youtube.com/embed/QbYn-6IhbZo" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><blockquote><p>访问不了Youtube？<br>1.点击<a href="/banwagong-ss.html">搭建自己的ss教程</a>轻松访问1080p高清Youtube视频。<br>2.点击<a href="https://space.bilibili.com/7028047" target="_blank" rel="noopener">b站视频教程地址</a>观看。</p></blockquote><p>接下来我们要做的就是用户真正要访问的页面了，就像淘宝，京东进入的页面一样，这就是我们的 Portal 系统。</p><p>在这里我们主要实现的是</p><blockquote><ol><li>搜索</li><li>分类</li><li>商品列表</li><li>商品详情</li><li>购物车</li><li>订单</li></ol></blockquote><p>那么我们就先得把静态页面弄好，到时候结合 FreeMarker 对数据进行交互。</p><ul><li><a href="https://wistbean.github.io/java-ssm-video.html#SSM%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B%E7%9B%AE%E5%BD%95">SSM视频教程目录</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Java" scheme="https://wistbean.github.io/categories/Java/"/>
    
      <category term="Java SSM视频教程" scheme="https://wistbean.github.io/categories/Java/Java-SSM%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="码农商城" scheme="https://wistbean.github.io/tags/%E7%A0%81%E5%86%9C%E5%95%86%E5%9F%8E/"/>
    
      <category term="Portal" scheme="https://wistbean.github.io/tags/Portal/"/>
    
      <category term="门户系统" scheme="https://wistbean.github.io/tags/%E9%97%A8%E6%88%B7%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>vultr2019最新优惠，新注册vultr的用户可以免费获取50美元</title>
    <link href="https://wistbean.github.io/vultr-give-50-dollars-coupon.html"/>
    <id>https://wistbean.github.io/vultr-give-50-dollars-coupon.html</id>
    <published>2019-01-17T07:18:28.000Z</published>
    <updated>2019-02-20T10:09:58.778Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Vultr送50美元"><a href="#Vultr送50美元" class="headerlink" title="Vultr送50美元"></a>Vultr送50美元</h1><p><a href="https://www.vultr.com/?ref=7772384-4F" target="_blank" rel="noopener">vultr</a> 是目前来说性价比很高的云服务产商，优惠不断，2019最新的优惠来了，只要你是 Vultr 新注册的用户，就可以获取平台赠送的 50 美元，时间有限。早就是优势。</p><p>注意，只有是 vultr 的新注册用户才可以获得 vultr 的赠送 50 美元的活动。 vultr活动注册链接：<a href="https://www.vultr.com/?ref=7772384-4F" target="_blank" rel="noopener">https://my.vultr.com/</a>。</p><h1 id="Vultr-购买使用教程"><a href="#Vultr-购买使用教程" class="headerlink" title="Vultr 购买使用教程"></a>Vultr 购买使用教程</h1><p><a href="https://wistbean.github.io/vultr-vps-bbr-ss.html#%E4%BC%98%E6%83%A0%E8%B4%AD%E4%B9%B0vultr">优惠购买 Vultr</a></p><h1 id="Vultr-搭建ss并加速教程"><a href="#Vultr-搭建ss并加速教程" class="headerlink" title="Vultr 搭建ss并加速教程"></a>Vultr 搭建ss并加速教程</h1><p><a href="https://wistbean.github.io/vultr-vps-bbr-ss.html#%E4%BD%BF%E7%94%A8vultr%E6%90%AD%E5%BB%BAss%E6%9C%8D%E5%8A%A1%E5%99%A8">使用vultr搭建ss服务器</a></p><h1 id="vultr数据中心测试"><a href="#vultr数据中心测试" class="headerlink" title="vultr数据中心测试"></a>vultr数据中心测试</h1><table><thead><tr><th>vultr机房</th><th>vultr官方测试IP地址</th><th>下载测试100M文件</th><th>下载测试1000M文件</th></tr></thead><tbody><tr><td>(Asia) Tokyo, Japan</td><td>hnd-jp-ping.vultr.com</td><td><a href="http://hnd-jp-ping.vultr.com/vultr.com.100MB.bin" target="_blank" rel="noopener">100Mb</a></td><td><a href="http://hnd-jp-ping.vultr.com/vultr.com.1000MB.bin" target="_blank" rel="noopener">1000Mb</a></td></tr><tr><td>(AU) Sydney, Australia</td><td>syd-au-ping.vultr.com</td><td><a href="http://syd-au-ping.vultr.com/vultr.com.100MB.bin" target="_blank" rel="noopener">100Mb</a></td><td><a href="http://syd-au-ping.vultr.com/vultr.com.1000MB.bin" target="_blank" rel="noopener">1000Mb</a></td></tr><tr><td>(EU) Frankfurt, DE</td><td>fra-de-ping.vultr.com</td><td><a href="http://fra-de-ping.vultr.com/vultr.com.100MB.bin" target="_blank" rel="noopener">100Mb</a></td><td><a href="http://fra-de-ping.vultr.com/vultr.com.1000MB.bin" target="_blank" rel="noopener">1000Mb</a></td></tr><tr><td>(EU) Amsterdam, NL</td><td>ams-nl-ping.vultr.com</td><td><a href="http://ams-nl-ping.vultr.com/vultr.com.100MB.bin" target="_blank" rel="noopener">100Mb</a></td><td><a href="http://ams-nl-ping.vultr.com/vultr.com.1000MB.bin" target="_blank" rel="noopener">1000Mb</a></td></tr><tr><td>Seattle, Washington</td><td>wa-us-ping.vultr.com</td><td><a href="http://wa-us-ping.vultr.com/vultr.com.100MB.bin" target="_blank" rel="noopener">100Mb</a></td><td><a href="http://wa-us-ping.vultr.com/vultr.com.1000MB.bin" target="_blank" rel="noopener">1000Mb</a></td></tr><tr><td>(EU) London, UK</td><td>lon-gb-ping.vultr.com</td><td><a href="http://lon-gb-ping.vultr.com/vultr.com.100MB.bin" target="_blank" rel="noopener">100Mb</a></td><td><a href="http://lon-gb-ping.vultr.com/vultr.com.1000MB.bin" target="_blank" rel="noopener">1000Mb</a></td></tr><tr><td>(EU) Paris, France</td><td>par-fr-ping.vultr.com</td><td><a href="http://par-fr-ping.vultr.com/vultr.com.100MB.bin" target="_blank" rel="noopener">100Mb</a></td><td><a href="http://par-fr-ping.vultr.com/vultr.com.1000MB.bin" target="_blank" rel="noopener">1000Mb</a></td></tr><tr><td>Los Angeles, California</td><td>lax-ca-us-ping.vultr.com</td><td><a href="http://lax-ca-us-ping.vultr.com/vultr.com.100MB.bin" target="_blank" rel="noopener">100Mb</a></td><td><a href="http://lax-ca-us-ping.vultr.com/vultr.com.1000MB.bin" target="_blank" rel="noopener">1000Mb</a></td></tr><tr><td>Chicago, Illinois</td><td>il-us-ping.vultr.com</td><td><a href="http://il-us-ping.vultr.com/vultr.com.100MB.bin" target="_blank" rel="noopener">100Mb</a></td><td><a href="http://il-us-ping.vultr.com/vultr.com.1000MB.bin" target="_blank" rel="noopener">1000Mb</a></td></tr><tr><td>Dallas, Texas</td><td>tx-us-ping.vultr.com</td><td><a href="http://tx-us-ping.vultr.com/vultr.com.100MB.bin" target="_blank" rel="noopener">100Mb</a></td><td><a href="http://tx-us-ping.vultr.com/vultr.com.1000MB.bin" target="_blank" rel="noopener">1000Mb</a></td></tr><tr><td>New York / New Jersey</td><td>nj-us-ping.vultr.com</td><td><a href="http://nj-us-ping.vultr.com/vultr.com.100MB.bin" target="_blank" rel="noopener">100Mb</a></td><td><a href="http://nj-us-ping.vultr.com/vultr.com.1000MB.bin" target="_blank" rel="noopener">1000Mb</a></td></tr><tr><td>Atlanta, Georgia</td><td>ga-us-ping.vultr.com</td><td><a href="http://ga-us-ping.vultr.com/vultr.com.100MB.bin" target="_blank" rel="noopener">100Mb</a></td><td><a href="http://ga-us-ping.vultr.com/vultr.com.1000MB.bin" target="_blank" rel="noopener">1000Mb</a></td></tr><tr><td>Miami, Florida</td><td>fl-us-ping.vultr.com</td><td><a href="http://fl-us-ping.vultr.com/vultr.com.100MB.bin" target="_blank" rel="noopener">100Mb</a></td><td><a href="http://fl-us-ping.vultr.com/vultr.com.1000MB.bin" target="_blank" rel="noopener">1000Mb</a></td></tr></tbody></table><h1 id="相关"><a href="#相关" class="headerlink" title="相关"></a>相关</h1><ul><li><a href="https://wistbean.github.io/bangwagong-vultr-na-ge-hao.html">搬瓦工和vultr哪个好</a></li><li><a href="https://wistbean.github.io/vultr-25-December-vps-coupon.html">2018最新12月vultr vps优惠送25美元</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="vultr" scheme="https://wistbean.github.io/categories/vultr/"/>
    
      <category term="vpn" scheme="https://wistbean.github.io/categories/vultr/vpn/"/>
    
      <category term="vps" scheme="https://wistbean.github.io/categories/vultr/vpn/vps/"/>
    
    
      <category term="vultr" scheme="https://wistbean.github.io/tags/vultr/"/>
    
      <category term="优惠码" scheme="https://wistbean.github.io/tags/%E4%BC%98%E6%83%A0%E7%A0%81/"/>
    
      <category term="vpn" scheme="https://wistbean.github.io/tags/vpn/"/>
    
      <category term="搭建ss" scheme="https://wistbean.github.io/tags/%E6%90%AD%E5%BB%BAss/"/>
    
      <category term="vultr学生优惠" scheme="https://wistbean.github.io/tags/vultr%E5%AD%A6%E7%94%9F%E4%BC%98%E6%83%A0/"/>
    
      <category term="vultr新用户充值优惠" scheme="https://wistbean.github.io/tags/vultr%E6%96%B0%E7%94%A8%E6%88%B7%E5%85%85%E5%80%BC%E4%BC%98%E6%83%A0/"/>
    
      <category term="vultr优惠码2019" scheme="https://wistbean.github.io/tags/vultr%E4%BC%98%E6%83%A0%E7%A0%812019/"/>
    
      <category term="vultr优惠怎么用" scheme="https://wistbean.github.io/tags/vultr%E4%BC%98%E6%83%A0%E6%80%8E%E4%B9%88%E7%94%A8/"/>
    
      <category term="vultr 50美元" scheme="https://wistbean.github.io/tags/vultr-50%E7%BE%8E%E5%85%83/"/>
    
      <category term="vultr教程" scheme="https://wistbean.github.io/tags/vultr%E6%95%99%E7%A8%8B/"/>
    
      <category term="vultr邀请码" scheme="https://wistbean.github.io/tags/vultr%E9%82%80%E8%AF%B7%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>「6-1」SpringMVC+Spring+FreeMarker搭建门户系统Portal</title>
    <link href="https://wistbean.github.io/java-ssm-6-1.html"/>
    <id>https://wistbean.github.io/java-ssm-6-1.html</id>
    <published>2019-01-15T08:06:11.000Z</published>
    <updated>2019-02-23T17:53:55.261Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><iframe width="100%" height="315" src="https://www.youtube.com/embed/vE5_09nEkOc" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><blockquote><p>访问不了Youtube？<br>1.点击<a href="/banwagong-ss.html">搭建自己的ss教程</a>轻松访问1080p高清Youtube视频。<br>2.点击<a href="https://www.bilibili.com/video/av40991734/" target="_blank" rel="noopener">本节b站视频教程地址</a>观看。</p></blockquote><p>接下来我们就要进入我们的这个门户系统了。那么我们需要搭建一个 maven 模块，可以通过 SSM 框架整合一个门户系统。在此之前，我们搭建了 manager 的管理系统，其实大同小异，只不过在这里我们不需要用到 Mybatis，所以我们搭建的 portal 系统可以用 Spring + SpringMVC进行整合。</p><h1 id="portal系统的maven依赖"><a href="#portal系统的maven依赖" class="headerlink" title="portal系统的maven依赖"></a>portal系统的maven依赖</h1><p>我们之前在 manager 模块中配置过 FreeMarker 的模板引擎，但是我们没有使用到，所以我们会在 portal 里面去进行使用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot;</span><br><span class="line">         xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line">         xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;</span><br><span class="line">    &lt;parent&gt;</span><br><span class="line">        &lt;artifactId&gt;manong_parent&lt;/artifactId&gt;</span><br><span class="line">        &lt;groupId&gt;com.kendinghui&lt;/groupId&gt;</span><br><span class="line">        &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;</span><br><span class="line">        &lt;relativePath&gt;../manong_parent/pom.xml&lt;/relativePath&gt;</span><br><span class="line">    &lt;/parent&gt;</span><br><span class="line">    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</span><br><span class="line">    &lt;packaging&gt;war&lt;/packaging&gt;</span><br><span class="line">    &lt;artifactId&gt;manong_portal&lt;/artifactId&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependencies&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.kendinghui&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;manong_common&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.kendinghui&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;manong_managerr_pojo&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-context&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;$&#123;spring.version&#125;&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-context-support&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-jdbc&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-aspects&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-webmvc&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-beans&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.freemarker&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;freemarker&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;javax.servlet&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;servlet-api&lt;/artifactId&gt;</span><br><span class="line">            &lt;scope&gt;provided&lt;/scope&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/dependencies&gt;</span><br><span class="line">&lt;/project&gt;</span><br></pre></td></tr></table></figure><h1 id="portal系统添加web-xml"><a href="#portal系统添加web-xml" class="headerlink" title="portal系统添加web.xml"></a>portal系统添加web.xml</h1><p>我们在 /main-src 目录下创建 /webapp/WEB-INF ，然后创建我们的 web.xml:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;web-app xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line">         xmlns=&quot;http://java.sun.com/xml/ns/javaee&quot; xmlns:web=&quot;http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd&quot;</span><br><span class="line">         xsi:schemaLocation=&quot;http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd&quot;</span><br><span class="line">         id=&quot;manong&quot; version=&quot;2.5&quot;&gt;</span><br><span class="line">    &lt;display-name&gt;manong-portal&lt;/display-name&gt;</span><br><span class="line">    &lt;welcome-file-list&gt;</span><br><span class="line">        &lt;welcome-file&gt;index.html&lt;/welcome-file&gt;</span><br><span class="line">        &lt;welcome-file&gt;index.htm&lt;/welcome-file&gt;</span><br><span class="line">        &lt;welcome-file&gt;index.jsp&lt;/welcome-file&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/welcome-file-list&gt;</span><br><span class="line">    &lt;!-- 加载spring容器 --&gt;</span><br><span class="line">    &lt;context-param&gt;</span><br><span class="line">        &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;</span><br><span class="line">        &lt;param-value&gt;classpath:spring/applicationContext-*.xml&lt;/param-value&gt;</span><br><span class="line">    &lt;/context-param&gt;</span><br><span class="line">    &lt;listener&gt;</span><br><span class="line">        &lt;listener-class&gt;org.springframework.web.context.ContextLoaderListener&lt;/listener-class&gt;</span><br><span class="line">    &lt;/listener&gt;</span><br><span class="line">    &lt;!-- 解决post乱码 --&gt;</span><br><span class="line">    &lt;filter&gt;</span><br><span class="line">        &lt;filter-name&gt;CharacterEncodingFilter&lt;/filter-name&gt;</span><br><span class="line">        &lt;filter-class&gt;org.springframework.web.filter.CharacterEncodingFilter&lt;/filter-class&gt;</span><br><span class="line">        &lt;init-param&gt;</span><br><span class="line">            &lt;param-name&gt;encoding&lt;/param-name&gt;</span><br><span class="line">            &lt;param-value&gt;utf-8&lt;/param-value&gt;</span><br><span class="line">        &lt;/init-param&gt;</span><br><span class="line">    &lt;/filter&gt;</span><br><span class="line">    &lt;filter-mapping&gt;</span><br><span class="line">        &lt;filter-name&gt;CharacterEncodingFilter&lt;/filter-name&gt;</span><br><span class="line">        &lt;url-pattern&gt;/*&lt;/url-pattern&gt;</span><br><span class="line">    &lt;/filter-mapping&gt;</span><br><span class="line">    &lt;!-- springmvc的前端控制器 --&gt;</span><br><span class="line">    &lt;servlet&gt;</span><br><span class="line">        &lt;servlet-name&gt;manong-portal&lt;/servlet-name&gt;</span><br><span class="line">        &lt;servlet-class&gt;org.springframework.web.servlet.DispatcherServlet&lt;/servlet-class&gt;</span><br><span class="line"></span><br><span class="line">        &lt;init-param&gt;</span><br><span class="line">            &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;</span><br><span class="line">            &lt;param-value&gt;classpath:spring/springmvc.xml&lt;/param-value&gt;</span><br><span class="line">        &lt;/init-param&gt;</span><br><span class="line">        &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;</span><br><span class="line">    &lt;/servlet&gt;</span><br><span class="line">    &lt;servlet-mapping&gt;</span><br><span class="line">        &lt;servlet-name&gt;manong-portal&lt;/servlet-name&gt;</span><br><span class="line">        &lt;url-pattern&gt;/&lt;/url-pattern&gt;</span><br><span class="line">    &lt;/servlet-mapping&gt;</span><br><span class="line">&lt;/web-app&gt;</span><br></pre></td></tr></table></figure><p>接着我们就可以将 manager 相应的配置文件复制过来。</p><h1 id="定义插件"><a href="#定义插件" class="headerlink" title="定义插件"></a>定义插件</h1><p>这里我们把端口设置为 8081 。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;build&gt;</span><br><span class="line">       &lt;plugins&gt;</span><br><span class="line">           &lt;plugin&gt;</span><br><span class="line">               &lt;groupId&gt;org.apache.tomcat.maven&lt;/groupId&gt;</span><br><span class="line">               &lt;artifactId&gt;tomcat7-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">               &lt;configuration&gt;</span><br><span class="line">                   &lt;port&gt;8081&lt;/port&gt;</span><br><span class="line">                   &lt;path&gt;/&lt;/path&gt;</span><br><span class="line">               &lt;/configuration&gt;</span><br><span class="line">           &lt;/plugin&gt;</span><br><span class="line">       &lt;/plugins&gt;</span><br><span class="line">   &lt;/build&gt;</span><br></pre></td></tr></table></figure><h1 id="portal使用freemarker"><a href="#portal使用freemarker" class="headerlink" title="portal使用freemarker"></a>portal使用freemarker</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/hello"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">SayHello</span><span class="params">(Model model)</span></span>&#123;</span><br><span class="line">        model.addAttribute(<span class="string">"name"</span>,<span class="string">"wistbean"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"hello"</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;h1&gt;hello $&#123;name&#125;&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">&lt;#list [&quot;aaa&quot;, &quot;bbbb&quot;, &quot;ccccc&quot;]  as x&gt;</span><br><span class="line">$&#123;x&#125;</span><br><span class="line">&lt;/#list&gt;</span><br></pre></td></tr></table></figure><p>访问：<a href="http://localhost:8081/hello" target="_blank" rel="noopener">http://localhost:8081/hello</a></p><p><img src="/images/portal.png" alt="portal"></p><p>ok,完美！</p><h1 id="SSM视频教程目录"><a href="#SSM视频教程目录" class="headerlink" title="SSM视频教程目录"></a>SSM视频教程目录</h1><ul><li><a href="https://wistbean.github.io/java-ssm-video.html#SSM%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B%E7%9B%AE%E5%BD%95">SSM视频教程目录</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Java" scheme="https://wistbean.github.io/categories/Java/"/>
    
      <category term="Java SSM视频教程" scheme="https://wistbean.github.io/categories/Java/Java-SSM%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="码农商城" scheme="https://wistbean.github.io/tags/%E7%A0%81%E5%86%9C%E5%95%86%E5%9F%8E/"/>
    
      <category term="Spring" scheme="https://wistbean.github.io/tags/Spring/"/>
    
      <category term="FreeMarker" scheme="https://wistbean.github.io/tags/FreeMarker/"/>
    
      <category term="SpringMVC" scheme="https://wistbean.github.io/tags/SpringMVC/"/>
    
      <category term="Portal" scheme="https://wistbean.github.io/tags/Portal/"/>
    
      <category term="spring freemarker配置" scheme="https://wistbean.github.io/tags/spring-freemarker%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>5G即将到来，那么到底什么是 5G 呢？</title>
    <link href="https://wistbean.github.io/5G.html"/>
    <id>https://wistbean.github.io/5G.html</id>
    <published>2019-01-11T16:38:37.000Z</published>
    <updated>2019-02-23T17:47:13.453Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>5G即将到来，那么到底什么是 5G 呢？</p><p>G，就是 generation ，也就是说移动通信的更新换代，每一代的升级，都给我们的生活带来改变，同时也带来了一些机会，往往，沿着趋势做事情，能够事半功倍，相对来说，更加容易成功，毕竟，大家都知道，在风口，猪都能上天。</p><p>我想跟大家简单说一下移动通信的发展。</p><p>在 1G 的时候，那个时候可以说是在一个通话时代，那时候连不了网，也没什么人知道互联网是啥，更多的是，谁拿大哥大，谁就是牛逼，比现在的 iPhone XS 牛逼多了。虽然 1G 的时候只是能简单的通话，但是却奠定了一个基础，那就是「模拟蜂窝移动通信」。</p><p>蜂窝移动大家应该不陌生吧，在你的 iPhone 手机设置那里，现在的名称依然是「移动蜂窝网络」。</p><p>为什么叫做蜂窝呢？其实我们之所以能够上网，是因为我们的手机身处在运营商搭建的基站范围内，这些基站以正六边形为一个范围，一个连接一个，就像蜂窝一样。所以就叫做蜂窝网络了。</p><p>到了 2G 的时候，我们就进入了数字通信了，这个时候，我们的信号越来越强了，也让我们的手机有了接入互联网的可能。</p><p>可能大家比较熟知的移动通信是从 3G 开始的，在 3G 的时候，我们可以通过上网，发短信，听 mp3 ，但是流量少的可怜，速度也很慢。</p><p>直到 4G ，也就是我们现在这个时候，可以看到，在速度的提升下，我们都能直接在手机上流畅的使用各种直播，游戏，电影了，同时也产生了很多流量的生意。还记得我第一次换上 4G 卡上网的时候，那个速度让我差点激动的把手机掉到地上。</p><p>那么 5G 要来了，你知道会发生啥么？</p><p>5G 的一个核心就是，速度大大提升了，是 4G 的几十倍，很多数据都会变的更精确，延时都会降到最低。以后我们要在网上下载一部 1080p 的毛片，对于 5G 来说就跟复制粘贴一样。</p><p>万物互联，人工智能就会得到大大的发展。也许，那个时候我们坐着自动驾驶车，听着美妙的音乐，喝着机器人给你递上的咖啡… 想想那是多么 geek 的场景啊！</p><p>通信的更新换代，都会牵扯到许许多多的产业，暂且不说中国华为，美国高通，欧洲法国对标准技术的竞争，看看我们身边的事物，就我们的手机来说，到时是不是会有很多人更换支持 5G 的手机，是不是很多人会购买智能的设备？是不是会有更多人去分享自己的生活视频？等等…</p><p>这些都是趋势，你说你要去买小米相关的股票也好， 要去学习人工智能的相关的知识也好，等等，在趋势的方向做事，总不会太错。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="互联网" scheme="https://wistbean.github.io/categories/%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
    
      <category term="什么是5g时代" scheme="https://wistbean.github.io/tags/%E4%BB%80%E4%B9%88%E6%98%AF5g%E6%97%B6%E4%BB%A3/"/>
    
      <category term="5g通信" scheme="https://wistbean.github.io/tags/5g%E9%80%9A%E4%BF%A1/"/>
    
      <category term="中国5g网络" scheme="https://wistbean.github.io/tags/%E4%B8%AD%E5%9B%BD5g%E7%BD%91%E7%BB%9C/"/>
    
      <category term="5g有什么用" scheme="https://wistbean.github.io/tags/5g%E6%9C%89%E4%BB%80%E4%B9%88%E7%94%A8/"/>
    
      <category term="中国5g发展" scheme="https://wistbean.github.io/tags/%E4%B8%AD%E5%9B%BD5g%E5%8F%91%E5%B1%95/"/>
    
      <category term="中国5g华为" scheme="https://wistbean.github.io/tags/%E4%B8%AD%E5%9B%BD5g%E5%8D%8E%E4%B8%BA/"/>
    
  </entry>
  
  <entry>
    <title>挖槽！GitHub无限私有仓库免费了</title>
    <link href="https://wistbean.github.io/github-free.html"/>
    <id>https://wistbean.github.io/github-free.html</id>
    <published>2019-01-08T07:39:56.000Z</published>
    <updated>2019-01-09T14:34:58.775Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Github 的最新 blog ： <a href="https://blog.github.com/2019-01-07-new-year-new-github/" target="_blank" rel="noopener">New year, new GitHub: Announcing unlimited free private repos and unified Enterprise offering</a>。主要说了两个事情：</p><ol><li><p>从今天开始，我们可以在 GitHub 无限使用私有仓库，已经不收费了，私有仓库最多可以有 3 个人合作。</p></li><li><p>Enterprise Cloud 和 Enterprise Server 统一为 GitHub Enterprise，通过  GitHub Connect 这些产品可以安全链接，提供了一个混合选项，这样开发人员就可以在两个环境中无缝工作。</p></li></ol><p>之前微软收购 GitHub 的时候，很多开发者都不看好，特别是国内的朋友们，我也觉得微软会搞事情。</p><p>不过从这一段时间来看，GitHub 的每一次更新都是利于开发者。有点香！</p><p>对于我来说简直是太好了，以前我在开发项目的时候，对于一些不能公开的项目只能到国内的码云平台托管，或者自己在服务器搭建 Git 服务器，因为之前 GitHub 对私有仓库是会收费的。</p><p>所以很多人都在 Gitee ，GitLab，GitHub 等平台来回游走。搞得自己的贡献量零零散散，都不能好好的装逼了。</p><p>微软这次给广大的开发者一份牛逼的新年礼物 ：New year, new GitHub ，啥也不说了，微软的 GitHub 牛了逼了！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="GitHub" scheme="https://wistbean.github.io/categories/GitHub/"/>
    
    
      <category term="GitHub" scheme="https://wistbean.github.io/tags/GitHub/"/>
    
      <category term="免费" scheme="https://wistbean.github.io/tags/%E5%85%8D%E8%B4%B9/"/>
    
  </entry>
  
  <entry>
    <title>「5-6」Mybatis分页，DataGrid使用，实现商品列表分页展示</title>
    <link href="https://wistbean.github.io/java-ssm-5-6.html"/>
    <id>https://wistbean.github.io/java-ssm-5-6.html</id>
    <published>2019-01-07T10:06:44.000Z</published>
    <updated>2019-02-23T17:53:54.641Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><iframe width="100%" height="315" src="https://www.youtube.com/embed/Amdz5mQALgw" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><blockquote><p>访问不了Youtube？<br>1.点击<a href="/banwagong-ss.html">搭建自己的ss教程</a>轻松访问1080p高清Youtube视频。<br>2.点击<a href="https://www.bilibili.com/video/av40301170/" target="_blank" rel="noopener">本节b站视频教程地址</a>观看。</p></blockquote><p>接下来我们就来获取商品数据了，我们需要完成的目标：</p><blockquote><ol><li>mybatis分页插件的使用</li><li>获取到的数据列表进行分页展示，DataGrid使用</li></ol></blockquote><p>那么我们会使用到的分页插件是 <a href="https://github.com/pagehelper/Mybatis-PageHelper/blob/master/wikis/zh/HowToUse.md" target="_blank" rel="noopener">Mybatis-PageHelper</a> 。在我们的 <a href="https://github.com/wistbean/manong-ssm" target="_blank" rel="noopener">manong</a> 项目中依赖它，然后进行简单的配置，就可以很方便的使用分页功能了。</p><h1 id="Mybatis-PageHelper使用"><a href="#Mybatis-PageHelper使用" class="headerlink" title="Mybatis-PageHelper使用"></a>Mybatis-PageHelper使用</h1><h2 id="pagehelper的依赖"><a href="#pagehelper的依赖" class="headerlink" title="pagehelper的依赖"></a>pagehelper的依赖</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> &lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.github.pagehelper&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;pagehelper&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;5.1.8&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h2 id="在-sqlMapConfig-xml-中配置插件"><a href="#在-sqlMapConfig-xml-中配置插件" class="headerlink" title="在 sqlMapConfig.xml 中配置插件"></a>在 sqlMapConfig.xml 中配置插件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;plugins&gt;</span><br><span class="line">    &lt;plugin interceptor=&quot;com.github.pagehelper.PageHelper&quot;&gt;</span><br><span class="line">        &lt;property name=&quot;helperDialect&quot; value=&quot;mysql&quot;/&gt;</span><br><span class="line">    &lt;/plugin&gt;</span><br><span class="line">&lt;/plugins&gt;</span><br></pre></td></tr></table></figure><h1 id="DataGrid-Json数据"><a href="#DataGrid-Json数据" class="headerlink" title="DataGrid Json数据"></a>DataGrid Json数据</h1><p>DataGrid 需要返回的 JSON 数据是这样的：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;total&quot;:28,&quot;rows&quot;:[......]&#125;</span><br></pre></td></tr></table></figure></p><p>所以我们可以用一个对象来封装，最终将数据以上面的这样 JSON 格式来返回：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EasyDataGrid</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> total;</span><br><span class="line">    <span class="keyword">private</span> List&lt;?&gt; rows;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getTotal</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> total;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTotal</span><span class="params">(<span class="keyword">int</span> total)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.total = total;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;?&gt; getRows() &#123;</span><br><span class="line">        <span class="keyword">return</span> rows;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRows</span><span class="params">(List&lt;?&gt; rows)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.rows = rows;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Service"><a href="#Service" class="headerlink" title="Service"></a>Service</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">ProductExample productExample = <span class="keyword">new</span> ProductExample();</span><br><span class="line">       PageHelper.startPage(page, row);</span><br><span class="line">       List&lt;Product&gt; products = productMapper.selectByExample(productExample);</span><br><span class="line">       PageInfo&lt;Product&gt; pageInfo = <span class="keyword">new</span> PageInfo&lt;&gt;(products);</span><br><span class="line"></span><br><span class="line">       EasyDataGrid easyDataGrid = <span class="keyword">new</span> EasyDataGrid();</span><br><span class="line">       easyDataGrid.setRows(products);</span><br><span class="line">       easyDataGrid.setTotal((<span class="keyword">int</span>) pageInfo.getTotal());</span><br><span class="line"></span><br><span class="line">       <span class="keyword">return</span> easyDataGrid;</span><br></pre></td></tr></table></figure><p> SSM视频教程目录</p><ul><li><a href="https://wistbean.github.io/java-ssm-video.html#SSM%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B%E7%9B%AE%E5%BD%95">SSM视频教程目录</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Java" scheme="https://wistbean.github.io/categories/Java/"/>
    
      <category term="Java SSM视频教程" scheme="https://wistbean.github.io/categories/Java/Java-SSM%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="教程" scheme="https://wistbean.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Java" scheme="https://wistbean.github.io/tags/Java/"/>
    
      <category term="Intellij IDEA" scheme="https://wistbean.github.io/tags/Intellij-IDEA/"/>
    
      <category term="Java视频教程" scheme="https://wistbean.github.io/tags/Java%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/"/>
    
      <category term="项目实战" scheme="https://wistbean.github.io/tags/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/"/>
    
      <category term="分布式" scheme="https://wistbean.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
      <category term="SSM" scheme="https://wistbean.github.io/tags/SSM/"/>
    
      <category term="码农商城" scheme="https://wistbean.github.io/tags/%E7%A0%81%E5%86%9C%E5%95%86%E5%9F%8E/"/>
    
      <category term="EasyUI" scheme="https://wistbean.github.io/tags/EasyUI/"/>
    
      <category term="商品" scheme="https://wistbean.github.io/tags/%E5%95%86%E5%93%81/"/>
    
      <category term="Jqury" scheme="https://wistbean.github.io/tags/Jqury/"/>
    
      <category term="easyui文件上传" scheme="https://wistbean.github.io/tags/easyui%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    
      <category term="ajaxFileUpload" scheme="https://wistbean.github.io/tags/ajaxFileUpload/"/>
    
  </entry>
  
  <entry>
    <title>「5-5」码农商城实现商品数据提交到Mysql数据库</title>
    <link href="https://wistbean.github.io/java-ssm-5-5.html"/>
    <id>https://wistbean.github.io/java-ssm-5-5.html</id>
    <published>2019-01-05T06:56:43.000Z</published>
    <updated>2019-02-23T17:53:54.577Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><iframe width="100%" height="315" src="https://www.youtube.com/embed/-kQf9ig03QY" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><blockquote><p>访问不了Youtube？<br>1.点击<a href="/banwagong-ss.html">搭建自己的ss教程</a>轻松访问1080p高清Youtube视频。<br>2.点击<a href="https://www.bilibili.com/video/av40023351/" target="_blank" rel="noopener">本节b站视频教程地址</a>观看。</p></blockquote><p>我们之前已经通过逆向工程获取到了 Product 这个实体类，那么我们在提交表单数据的时候，我们的标签 name 值需要和属性值对应起来。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> Integer id;</span><br><span class="line"><span class="keyword">private</span> Short categoryId;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="keyword">private</span> String image;</span><br><span class="line"><span class="keyword">private</span> Long maketPrice;</span><br><span class="line"><span class="keyword">private</span> Long price;</span><br><span class="line"><span class="keyword">private</span> Byte status;</span><br><span class="line"><span class="keyword">private</span> String description;</span><br><span class="line"><span class="keyword">private</span> String productNumber;</span><br></pre></td></tr></table></figure><p>对于一些需要通过 js 获取的值，我们可以使用 hidden 属性的 input 标签来接收数据：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"categoryId"</span>  /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"image"</span>  /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"description"</span>  /&gt;</span></span><br></pre></td></tr></table></figure><p>对于分类 id 的获取：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"#addProductForm"</span>).find(<span class="string">"select[name='cid2']"</span>).combobox(&#123;</span><br><span class="line">    onChange: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> value=$(<span class="string">"#cc2"</span>).val();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(value == <span class="number">0</span>)&#123;</span><br><span class="line">            $(<span class="string">"#addProductForm"</span>).find(<span class="string">"input[name='categoryId']"</span>).val($(<span class="string">"#addProductForm"</span>).find(<span class="string">"input[name='cid1']"</span>).val());</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            $(<span class="string">"#addProductForm"</span>).find(<span class="string">"input[name='categoryId']"</span>).val(value);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>对于图片路径的获取：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">success: <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">                   $(<span class="string">"#img"</span>).attr(<span class="string">"src"</span>, <span class="string">"http://65.49.227.129:8888/"</span> + $(data).find(<span class="string">"body"</span>).text());</span><br><span class="line">                   $(<span class="string">"#addProductForm"</span>).find(<span class="string">"input[name='image']"</span>).val($(data).find(<span class="string">"body"</span>).text());</span><br><span class="line">               &#125;</span><br></pre></td></tr></table></figure></p><p>对于商品描述的获取:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UE.getEditor(<span class="string">'editor'</span>).getContent()</span><br></pre></td></tr></table></figure><p>form 表单提交：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$.post(<span class="string">"/product_save"</span>,$(<span class="string">"#addProductForm"</span>).serialize(), <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">          <span class="keyword">if</span>(data.status == <span class="number">200</span>)&#123;</span><br><span class="line">              $.messager.alert(<span class="string">'提示'</span>,<span class="string">'新增商品成功!'</span>);</span><br><span class="line">          &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>Controller:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"product_save"</span>,method = RequestMethod.POST)</span><br><span class="line">   <span class="meta">@ResponseBody</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> ResponseJsonResult <span class="title">saveProduct</span><span class="params">(Product product)</span></span>&#123;</span><br><span class="line">       ResponseJsonResult responseJsonResult = productService.saveProduct(product);</span><br><span class="line">       <span class="keyword">return</span> responseJsonResult;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></p><p> SSM视频教程目录</p><ul><li><a href="https://wistbean.github.io/java-ssm-video.html#SSM%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B%E7%9B%AE%E5%BD%95">SSM视频教程目录</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Java" scheme="https://wistbean.github.io/categories/Java/"/>
    
      <category term="Java SSM视频教程" scheme="https://wistbean.github.io/categories/Java/Java-SSM%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="教程" scheme="https://wistbean.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Java" scheme="https://wistbean.github.io/tags/Java/"/>
    
      <category term="Intellij IDEA" scheme="https://wistbean.github.io/tags/Intellij-IDEA/"/>
    
      <category term="Java视频教程" scheme="https://wistbean.github.io/tags/Java%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/"/>
    
      <category term="项目实战" scheme="https://wistbean.github.io/tags/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/"/>
    
      <category term="分布式" scheme="https://wistbean.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
      <category term="SSM" scheme="https://wistbean.github.io/tags/SSM/"/>
    
      <category term="码农商城" scheme="https://wistbean.github.io/tags/%E7%A0%81%E5%86%9C%E5%95%86%E5%9F%8E/"/>
    
      <category term="EasyUI" scheme="https://wistbean.github.io/tags/EasyUI/"/>
    
      <category term="商品" scheme="https://wistbean.github.io/tags/%E5%95%86%E5%93%81/"/>
    
      <category term="Jqury" scheme="https://wistbean.github.io/tags/Jqury/"/>
    
      <category term="easyui文件上传" scheme="https://wistbean.github.io/tags/easyui%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    
      <category term="ajaxFileUpload" scheme="https://wistbean.github.io/tags/ajaxFileUpload/"/>
    
  </entry>
  
  <entry>
    <title>我在暗网发现了一些不为人知的事情</title>
    <link href="https://wistbean.github.io/deep-web.html"/>
    <id>https://wistbean.github.io/deep-web.html</id>
    <published>2019-01-03T08:47:38.000Z</published>
    <updated>2019-01-04T12:18:14.998Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="传说中的暗网"><a href="#传说中的暗网" class="headerlink" title="传说中的暗网"></a>传说中的暗网</h1><p>很多人都听说过暗网，传说中的暗网是黑客的聚集地，有些人会认为如果你没什么技术，然后不小心上了暗网，那么你完蛋了，马上就会有黑客来攻击你，盗取你的钱财、裸照等。</p><p>然而，事实是这样么？不是！</p><p>也有些人认为暗网里面充斥着色情，暴力，血腥，毒品等等一系列非法黑产。</p><p>事实是这样么？不完全是！</p><h1 id="什么是暗网"><a href="#什么是暗网" class="headerlink" title="什么是暗网"></a>什么是暗网</h1><p>正常情况下，我们在上网的过程中，首先是自己的互联网设备能够通网，我们拥有自己的 IP 地址，当我们想要去访问某些网站的时候，这些网站需要有服务器 24 小时托管。说的简单点，我们在上网查询资料的时候，就是从这些服务器里面获取资源，从而展现到我们的客户端上。</p><p>Google，百度这些搜索引擎也是这样的，他们会根据关键词去那些服务器爬取相关网站，建立索引库。当我们需要查询某一资源的时候，我们只需要在搜索引擎搜索相应的关键词，搜索引擎会从自己爬取到的索引库里面找到相应的网站，从而显示条目给我直达进入网站。</p><p>有很多网站的站长都在做 SEO ，也就是搜索引擎优化，为的就是能够将自己的网站能够被更容易被搜索得到。</p><p>可是，有些网站的站长，是不希望他们的网站被搜索引擎搜索得到的，甚至不希望被别人知道具体的服务器地址。也有些用户，他们不希望暴露自己的 IP 地址（尽管有些人挂代理，但是长时间使用同一个也会很容易被发现的），他们不希望被知道自己的访问记录，不希望被发现自己在网络上做的什么勾当。总而言之，他们都希望匿名，安全，不被泄露隐私。</p><p>那么这个时候，暗网就正合他们之意。</p><p>暗网提供了匿名的网络，在这里，我们不用担心自己的隐私安全问题，因为我们每个人都可以成为每一个人的代理，并且层层加密，这样我们就可以做到真正隐藏自己的真实 IP 地址。</p><h1 id="洋葱-Tor-浏览器"><a href="#洋葱-Tor-浏览器" class="headerlink" title="洋葱 Tor 浏览器"></a>洋葱 Tor 浏览器</h1><p>Tor 是一个分布式的匿名网络，当你通过 Tor 进入网络的时候，它首先会去找到那些分布在 Tor 上的节点。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/tor01.png" alt="Tor" title="">                </div>                <div class="image-caption">Tor</div>            </figure><p>接着会通过随机的路径，一层一层的加密，最后才能访问到目的地。在这种情况下，想要追踪你的路径根本做不到，因为在这里访问再也不是那么简单的「从点到源」直接访问服务器那么简单了。即使你知道其中一个中继节点，也没办法知道这个数据是从哪里来到哪里去。<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/tor02.png" alt="Tor" title="">                </div>                <div class="image-caption">Tor</div>            </figure></p><blockquote><p>这个想法类似于使用一个曲折的，难以遵循的路线，以摆脱跟踪你的人-然后定期删除你的脚印。</p></blockquote><p>而且，每隔 10 分钟左右的时间，Tor 又会重新赋予一个新的随机加密网络连接路线。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/tor03.png" alt="Tor" title="">                </div>                <div class="image-caption">Tor</div>            </figure><p>洋葱网络，这个名字起得太形象了，我们使用 Tor 的时候，就像洋葱一样，一层一层的代理且加密，做到完全的匿名。</p><p>所以当下次杨宗纬唱 《洋葱》 的时候，跟他说一句，对不起，我在 Tor 做不到！</p><blockquote><p> 如果你愿意一层一层一层的剥开我的心<br> 你会发现 你会讶异<br> 你是我 最压抑<br> 最深处的秘密<br> …<br> 如果你愿意一层一层一层的剥开我的心<br> 你会鼻酸 你会流泪<br> 只要你能 听到我<br>看到我的全心全意</p></blockquote><h1 id="使用-Tor-访问暗网"><a href="#使用-Tor-访问暗网" class="headerlink" title="使用 Tor 访问暗网"></a>使用 Tor 访问暗网</h1><p>点击 <a href="/download/download-easy.html.en">下载Tor</a>，好像国内访问不了，可以点击|<a href="/use-banwagong.html">搭建自己的VPN教程</a>。</p><p>下载安装之后打开 Tor ，可以使用 ss 连接：</p><h2 id="点击-conigure："><a href="#点击-conigure：" class="headerlink" title="点击 conigure："></a>点击 conigure：</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/tor1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="连接代理："><a href="#连接代理：" class="headerlink" title="连接代理："></a>连接代理：</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/tor2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="开始使用-Tor-："><a href="#开始使用-Tor-：" class="headerlink" title="开始使用 Tor ："></a>开始使用 Tor ：</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/tor3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>洋葱暗网的地址都是以 「.onion」结尾的，只有洋葱浏览器才可以访问，而且地址像是一串乱码，根本无法知道服务器的具体地址，比如大名鼎鼎的丝绸之路：<a href="http://reloadedudjtjvxr.onion/" target="_blank" rel="noopener">http://reloadedudjtjvxr.onion/</a> ，由于匿名安全，在这里有很多黑市。说到匿名，可能你也想到了比特币，没错，他们就是结合「暗网+比特币」的方式，在上面猖狂的做着非法交易。</p><p>在 Tor 上看过一些卖数据的，有一些股民的数据，学校家长的数据，Facebook账号等等早就被泄露了。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/tor4.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>也有一些搞笑的，比如有一个 fuck you 的暗网，进去之后叫我 fuck 自己？？？<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/tor5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></p><p>一些血腥的，恋童癖的就不说了，太他妈缺德了。</p><p>其实暗网并非都是在做坏事，比如记者传达的一些机密，可以通过暗网而不被窃取。举报一些势力强大的不法分子，为了不被报复，也可以在暗网进行举报。企业内部的一些隐私商业交流，同样也可以使用暗网。</p><p>技术本身没有罪，好与坏取决使用它的人。</p><p>切记不要在暗网做一些非法的事情。说不定有一些暗网就是人家做的局，之前的暗网 Hansa 就是荷兰警方通过长期的钓鱼，一锅端。</p><p>也许这个世界并不是你想的那么绝对。你穿着得体，打扮的体面，也许在有些人眼里，你就是裸着的。你的坚强与善良，在有些人眼里，你就是装。眼见不一定为实。暗网不一定为坏。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="互联网" scheme="https://wistbean.github.io/categories/%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
      <category term="暗网" scheme="https://wistbean.github.io/categories/%E4%BA%92%E8%81%94%E7%BD%91/%E6%9A%97%E7%BD%91/"/>
    
    
      <category term="互联网" scheme="https://wistbean.github.io/tags/%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
      <category term="暗网" scheme="https://wistbean.github.io/tags/%E6%9A%97%E7%BD%91/"/>
    
      <category term="黑客攻击" scheme="https://wistbean.github.io/tags/%E9%BB%91%E5%AE%A2%E6%94%BB%E5%87%BB/"/>
    
      <category term="犯罪" scheme="https://wistbean.github.io/tags/%E7%8A%AF%E7%BD%AA/"/>
    
      <category term="安全" scheme="https://wistbean.github.io/tags/%E5%AE%89%E5%85%A8/"/>
    
      <category term="病毒" scheme="https://wistbean.github.io/tags/%E7%97%85%E6%AF%92/"/>
    
      <category term="数据" scheme="https://wistbean.github.io/tags/%E6%95%B0%E6%8D%AE/"/>
    
  </entry>
  
  <entry>
    <title>「5-4」FastDFS+filebox+ajaxFileUpload实现商品图片上传</title>
    <link href="https://wistbean.github.io/java-ssm-5-4.html"/>
    <id>https://wistbean.github.io/java-ssm-5-4.html</id>
    <published>2018-12-31T08:54:18.000Z</published>
    <updated>2019-02-23T17:53:55.077Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><iframe width="100%" height="315" src="https://www.youtube.com/embed/SGV11wiE71g" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><blockquote><p>访问不了Youtube？<br>1.点击<a href="/banwagong-ss.html">搭建自己的ss教程</a>轻松访问1080p高清Youtube视频。<br>2.点击<a href="https://www.bilibili.com/video/av39694909/" target="_blank" rel="noopener">本节b站视频教程地址</a>观看。</p></blockquote><p>在 <a href="https://wistbean.github.io/java-ssm-5-3.html">5-3</a> 小节的时候，我们已经实现了对商品分类的获取展示，那么接下来就要将商品图片上传到我们的存储服务器，然后把商品的图片地址存放到我们的数据库里面。</p><p>我们已经搭建好了<a href="https://wistbean.github.io/java-ssm-4-1.html">Java文件服务器FastDFS</a>了，而且我们也可以写了上传图片的接口，那么接下来就可以使用 ajaxFileUpload 来上传我们的商品图片。</p><p>ajaxFileUpload的源码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// JavaScript Document</span></span><br><span class="line">jQuery.extend(&#123;</span><br><span class="line"></span><br><span class="line">    createUploadIframe: <span class="function"><span class="keyword">function</span>(<span class="params">id, uri</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//create frame</span></span><br><span class="line">        <span class="keyword">var</span> frameId = <span class="string">'jUploadFrame'</span> + id;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">window</span>.ActiveXObject) &#123;</span><br><span class="line">            <span class="keyword">var</span> io = <span class="built_in">document</span>.createElement(<span class="string">'&lt;iframe id="'</span> + frameId + <span class="string">'" name="'</span> + frameId + <span class="string">'" /&gt;'</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">typeof</span> uri== <span class="string">'boolean'</span>)&#123;</span><br><span class="line">                io.src = <span class="string">'javascript:false'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">typeof</span> uri== <span class="string">'string'</span>)&#123;</span><br><span class="line">                io.src = uri;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">var</span> io = <span class="built_in">document</span>.createElement(<span class="string">'iframe'</span>);</span><br><span class="line">            io.id = frameId;</span><br><span class="line">            io.name = frameId;</span><br><span class="line">        &#125;</span><br><span class="line">        io.style.position = <span class="string">'absolute'</span>;</span><br><span class="line">        io.style.top = <span class="string">'-1000px'</span>;</span><br><span class="line">        io.style.left = <span class="string">'-1000px'</span>;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">document</span>.body.appendChild(io);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> io;</span><br><span class="line">    &#125;,</span><br><span class="line">    createUploadForm: <span class="function"><span class="keyword">function</span>(<span class="params">id, fileElementId</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//create form</span></span><br><span class="line">        <span class="keyword">var</span> formId = <span class="string">'jUploadForm'</span> + id;</span><br><span class="line">        <span class="keyword">var</span> fileId = <span class="string">'jUploadFile'</span> + id;</span><br><span class="line">        <span class="keyword">var</span> form = jQuery(<span class="string">'&lt;form  action="" method="POST" name="'</span> + formId + <span class="string">'" id="'</span> + formId + <span class="string">'" enctype="multipart/form-data"&gt;&lt;/form&gt;'</span>);</span><br><span class="line">        <span class="keyword">var</span> oldElement = jQuery(<span class="string">'#'</span> + fileElementId);</span><br><span class="line">        <span class="keyword">var</span> newElement = jQuery(oldElement).clone();</span><br><span class="line">        jQuery(oldElement).attr(<span class="string">'id'</span>, fileId);</span><br><span class="line">        jQuery(oldElement).before(newElement);</span><br><span class="line">        jQuery(oldElement).appendTo(form);</span><br><span class="line">        <span class="comment">//set attributes</span></span><br><span class="line">        jQuery(form).css(<span class="string">'position'</span>, <span class="string">'absolute'</span>);</span><br><span class="line">        jQuery(form).css(<span class="string">'top'</span>, <span class="string">'-1200px'</span>);</span><br><span class="line">        jQuery(form).css(<span class="string">'left'</span>, <span class="string">'-1200px'</span>);</span><br><span class="line">        jQuery(form).appendTo(<span class="string">'body'</span>);</span><br><span class="line">        <span class="keyword">return</span> form;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    ajaxFileUpload: <span class="function"><span class="keyword">function</span>(<span class="params">s</span>) </span>&#123;</span><br><span class="line">        <span class="comment">// TODO introduce global settings, allowing the client to modify them for all requests, not only timeout</span></span><br><span class="line">        s = jQuery.extend(&#123;&#125;, jQuery.ajaxSettings, s);</span><br><span class="line">        <span class="keyword">var</span> id = s.fileElementId;</span><br><span class="line">        <span class="keyword">var</span> form = jQuery.createUploadForm(id, s.fileElementId);</span><br><span class="line">        <span class="keyword">var</span> io = jQuery.createUploadIframe(id, s.secureuri);</span><br><span class="line">        <span class="keyword">var</span> frameId = <span class="string">'jUploadFrame'</span> + id;</span><br><span class="line">        <span class="keyword">var</span> formId = <span class="string">'jUploadForm'</span> + id;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>( s.global &amp;&amp; ! jQuery.active++ )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// Watch for a new set of requests</span></span><br><span class="line">            jQuery.event.trigger( <span class="string">"ajaxStart"</span> );</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> requestDone = <span class="literal">false</span>;</span><br><span class="line">        <span class="comment">// Create the request object</span></span><br><span class="line">        <span class="keyword">var</span> xml = &#123;&#125;;</span><br><span class="line">        <span class="keyword">if</span>( s.global )</span><br><span class="line">        &#123;</span><br><span class="line">            jQuery.event.trigger(<span class="string">"ajaxSend"</span>, [xml, s]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> uploadCallback = <span class="function"><span class="keyword">function</span>(<span class="params">isTimeout</span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="comment">// Wait for a response to come back</span></span><br><span class="line">            <span class="keyword">var</span> io = <span class="built_in">document</span>.getElementById(frameId);</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(io.contentWindow)</span><br><span class="line">                &#123;</span><br><span class="line">                    xml.responseText = io.contentWindow.document.body?io.contentWindow.document.body.innerHTML:<span class="literal">null</span>;</span><br><span class="line">                    xml.responseXML = io.contentWindow.document.XMLDocument?io.contentWindow.document.XMLDocument:io.contentWindow.document;</span><br><span class="line"></span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>(io.contentDocument)</span><br><span class="line">                &#123;</span><br><span class="line">                    xml.responseText = io.contentDocument.document.body?io.contentDocument.document.body.innerHTML:<span class="literal">null</span>;</span><br><span class="line">                    xml.responseXML = io.contentDocument.document.XMLDocument?io.contentDocument.document.XMLDocument:io.contentDocument.document;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">catch</span>(e)</span><br><span class="line">            &#123;</span><br><span class="line">                jQuery.handleError(s, xml, <span class="literal">null</span>, e);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>( xml || isTimeout == <span class="string">"timeout"</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                requestDone = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">var</span> status;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    status = isTimeout != <span class="string">"timeout"</span> ? <span class="string">"success"</span> : <span class="string">"error"</span>;</span><br><span class="line">                    <span class="comment">// Make sure that the request was successful or notmodified</span></span><br><span class="line">                    <span class="keyword">if</span>( status != <span class="string">"error"</span> )</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="comment">// process the data (runs the xml through httpData regardless of callback)</span></span><br><span class="line">                        <span class="keyword">var</span> data = jQuery.uploadHttpData( xml, s.dataType );</span><br><span class="line">                        <span class="keyword">if</span>( s.success )</span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="comment">// ifa local callback was specified, fire it and pass it the data</span></span><br><span class="line">                            s.success( data, status );</span><br><span class="line">                        &#125;;</span><br><span class="line">                        <span class="keyword">if</span>( s.global )</span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="comment">// Fire the global callback</span></span><br><span class="line">                            jQuery.event.trigger( <span class="string">"ajaxSuccess"</span>, [xml, s] );</span><br><span class="line">                        &#125;;</span><br><span class="line">                    &#125; <span class="keyword">else</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        jQuery.handleError(s, xml, status);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                &#125; <span class="keyword">catch</span>(e)</span><br><span class="line">                &#123;</span><br><span class="line">                    status = <span class="string">"error"</span>;</span><br><span class="line">                    jQuery.handleError(s, xml, status, e);</span><br><span class="line">                &#125;;</span><br><span class="line">                <span class="keyword">if</span>( s.global )</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">// The request was completed</span></span><br><span class="line">                    jQuery.event.trigger( <span class="string">"ajaxComplete"</span>, [xml, s] );</span><br><span class="line">                &#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                <span class="comment">// Handle the global AJAX counter</span></span><br><span class="line">                <span class="keyword">if</span>(s.global &amp;&amp; ! --jQuery.active)</span><br><span class="line">                &#123;</span><br><span class="line">                    jQuery.event.trigger(<span class="string">"ajaxStop"</span>);</span><br><span class="line">                &#125;;</span><br><span class="line">                <span class="keyword">if</span>(s.complete)</span><br><span class="line">                &#123;</span><br><span class="line">                    s.complete(xml, status);</span><br><span class="line">                &#125; ;</span><br><span class="line"></span><br><span class="line">                jQuery(io).unbind();</span><br><span class="line"></span><br><span class="line">                setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">                </span>&#123; <span class="keyword">try</span></span><br><span class="line">                &#123;</span><br><span class="line">                    jQuery(io).remove();</span><br><span class="line">                    jQuery(form).remove();</span><br><span class="line"></span><br><span class="line">                &#125; <span class="keyword">catch</span>(e)</span><br><span class="line">                &#123;</span><br><span class="line">                    jQuery.handleError(s, xml, <span class="literal">null</span>, e);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                &#125;, <span class="number">100</span>);</span><br><span class="line"></span><br><span class="line">                xml = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// Timeout checker</span></span><br><span class="line">        <span class="keyword">if</span>( s.timeout &gt; <span class="number">0</span> )</span><br><span class="line">        &#123;</span><br><span class="line">            setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>( !requestDone )</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">// Check to see ifthe request is still happening</span></span><br><span class="line">                    uploadCallback( <span class="string">"timeout"</span> );</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;, s.timeout);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">var</span> form = jQuery(<span class="string">'#'</span> + formId);</span><br><span class="line">            jQuery(form).attr(<span class="string">'action'</span>, s.url);</span><br><span class="line">            jQuery(form).attr(<span class="string">'method'</span>, <span class="string">'POST'</span>);</span><br><span class="line">            jQuery(form).attr(<span class="string">'target'</span>, frameId);</span><br><span class="line">            <span class="keyword">if</span>(form.encoding)</span><br><span class="line">            &#123;</span><br><span class="line">                form.encoding = <span class="string">'multipart/form-data'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                form.enctype = <span class="string">'multipart/form-data'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            jQuery(form).submit();</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span>(e)</span><br><span class="line">        &#123;</span><br><span class="line">            jQuery.handleError(s, xml, <span class="literal">null</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">window</span>.attachEvent)&#123;</span><br><span class="line">            <span class="built_in">document</span>.getElementById(frameId).attachEvent(<span class="string">'onload'</span>, uploadCallback);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">document</span>.getElementById(frameId).addEventListener(<span class="string">'load'</span>, uploadCallback, <span class="literal">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> &#123;<span class="attr">abort</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;&#125;&#125;;</span><br><span class="line"></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    uploadHttpData: <span class="function"><span class="keyword">function</span>(<span class="params"> r, type </span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> data = !type;</span><br><span class="line">        data = type == <span class="string">"xml"</span> || data ? r.responseXML : r.responseText;</span><br><span class="line">        <span class="comment">// ifthe type is "script", eval it in global context</span></span><br><span class="line">        <span class="keyword">if</span>( type == <span class="string">"script"</span> )</span><br><span class="line">        &#123;</span><br><span class="line">            jQuery.globalEval( data );</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Get the JavaScript object, ifJSON is used.</span></span><br><span class="line">        <span class="keyword">if</span>( type == <span class="string">"json"</span> )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">eval</span>( <span class="string">"data = "</span> + data );</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// evaluate scripts within html</span></span><br><span class="line">        <span class="keyword">if</span>( type == <span class="string">"html"</span> )</span><br><span class="line">        &#123;</span><br><span class="line">            jQuery(<span class="string">"&lt;div&gt;"</span>).html(data).evalScripts();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> data;</span><br><span class="line">    &#125;,</span><br><span class="line">    handleError: <span class="function"><span class="keyword">function</span>(<span class="params"> s, xhr, status, e </span>)      </span>&#123;</span><br><span class="line">        <span class="comment">// If a local callback was specified, fire it</span></span><br><span class="line">        <span class="keyword">if</span> ( s.error ) &#123;</span><br><span class="line">            s.error.call( s.context || s, xhr, status, e );</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Fire the global callback</span></span><br><span class="line">        <span class="keyword">if</span> ( s.global ) &#123;</span><br><span class="line">            (s.context ? jQuery(s.context) : jQuery.event).trigger( <span class="string">"ajaxError"</span>, [xhr, s, e] );</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p> SSM视频教程目录</p><ul><li><a href="https://wistbean.github.io/java-ssm-video.html#SSM%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B%E7%9B%AE%E5%BD%95">SSM视频教程目录</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Java" scheme="https://wistbean.github.io/categories/Java/"/>
    
      <category term="Java SSM视频教程" scheme="https://wistbean.github.io/categories/Java/Java-SSM%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="教程" scheme="https://wistbean.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Java" scheme="https://wistbean.github.io/tags/Java/"/>
    
      <category term="Intellij IDEA" scheme="https://wistbean.github.io/tags/Intellij-IDEA/"/>
    
      <category term="Java视频教程" scheme="https://wistbean.github.io/tags/Java%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/"/>
    
      <category term="项目实战" scheme="https://wistbean.github.io/tags/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/"/>
    
      <category term="分布式" scheme="https://wistbean.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
      <category term="SSM" scheme="https://wistbean.github.io/tags/SSM/"/>
    
      <category term="码农商城" scheme="https://wistbean.github.io/tags/%E7%A0%81%E5%86%9C%E5%95%86%E5%9F%8E/"/>
    
      <category term="EasyUI" scheme="https://wistbean.github.io/tags/EasyUI/"/>
    
      <category term="商品" scheme="https://wistbean.github.io/tags/%E5%95%86%E5%93%81/"/>
    
      <category term="FreeMarker" scheme="https://wistbean.github.io/tags/FreeMarker/"/>
    
      <category term="Jqury" scheme="https://wistbean.github.io/tags/Jqury/"/>
    
      <category term="easyui文件上传" scheme="https://wistbean.github.io/tags/easyui%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    
      <category term="ajaxFileUpload" scheme="https://wistbean.github.io/tags/ajaxFileUpload/"/>
    
      <category term="easyui-filebox" scheme="https://wistbean.github.io/tags/easyui-filebox/"/>
    
  </entry>
  
  <entry>
    <title>我的网站域名被DNS投毒了</title>
    <link href="https://wistbean.github.io/dns-cache-poisoning.html"/>
    <id>https://wistbean.github.io/dns-cache-poisoning.html</id>
    <published>2018-12-30T05:04:24.000Z</published>
    <updated>2018-12-30T05:36:57.224Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>前不久，陆续有小伙伴告诉我，我的<a href="https://wistbean.github.io">网站</a>访问不了了。</p><p>我还纳了闷了，以为是服务器的问题。排查了一遍发现服务器没什么可疑的地方。</p><p>用自己的电脑去 ping 我的域名，发现有时候解析到正确的地址，有时候又解析到乱七八糟的地址去了。这时候我以为是 dns 的问题，之前用的 <a href="dnspod.cn/console/dns">dnspod</a> ,上去看了下，发现自己没动过啊，之前都好好的。</p><p>后来想想，域名是在 <a href="https://dcc.godaddy.com" target="_blank" rel="noopener">godaddy</a> ,是不是域名商的问题呢？</p><p>找了客服询问了一番，发现没啥问题，我在上面买的别的域名也正常。妈了个蛋！</p><p>后来发现，我的网站在国外可以访问。速度也不慢。这个时候我就知道为啥了，我的域名 wistbean.com 应该是被 <a href="https://zh.wikipedia.org/wiki/%E5%9F%9F%E5%90%8D%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%BC%93%E5%AD%98%E6%B1%A1%E6%9F%93" target="_blank" rel="noopener">DNS投毒</a> 了，上 <a href="https://www.17ce.com/" target="_blank" rel="noopener">17ce</a> 查了一下，果然，我的域名被解析到各种 Facebook 的 IP 上去了。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/dns.png" alt="dns投毒" title="">                </div>                <div class="image-caption">dns投毒</div>            </figure><p>所以，我的域名 wistbean.com 在国内算是废了。</p><p>没办法，只能 301 重定向了，所以本站的国内域名现在为 wistbean.github.io 。</p><p>也没关系，我依然会在这里分享有用的教程。</p><p>最后，好好学习，I Love China ！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="个人网站" scheme="https://wistbean.github.io/categories/%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/"/>
    
    
      <category term="dns" scheme="https://wistbean.github.io/tags/dns/"/>
    
      <category term="投毒" scheme="https://wistbean.github.io/tags/%E6%8A%95%E6%AF%92/"/>
    
      <category term="域名" scheme="https://wistbean.github.io/tags/%E5%9F%9F%E5%90%8D/"/>
    
      <category term="dns污染" scheme="https://wistbean.github.io/tags/dns%E6%B1%A1%E6%9F%93/"/>
    
  </entry>
  
  <entry>
    <title>「5-3」实现码农商城商品分类的添加数据交互</title>
    <link href="https://wistbean.github.io/java-ssm-5-3.html"/>
    <id>https://wistbean.github.io/java-ssm-5-3.html</id>
    <published>2018-12-23T05:46:09.000Z</published>
    <updated>2019-02-23T17:53:56.008Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><iframe width="100%" height="315" src="https://www.youtube.com/embed/eskTPnvHtZ4" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><blockquote><p>访问不了Youtube？<br>1.点击<a href="/banwagong-ss.html">搭建自己的ss教程</a>轻松访问1080p高清Youtube视频。<br>2.点击<a href="https://www.bilibili.com/video/av38940502/" target="_blank" rel="noopener">本节b站视频教程地址</a>观看。</p></blockquote><p>我们已经在<a href="https://wistbean.github.io/java-ssm-5-2.html">5-2</a>小节中实现了商品添加的界面,那么接下来我们就要对数据进行交互了。</p><p>在我们请求 product_add 这个页面的时候，我们应该将商品分类父级的数据放到 session 里面，然后传给页面。所以我们可以写一个 Controller 来实现：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/product_add"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">requestProductAdd</span><span class="params">(HttpServletRequest request)</span></span>&#123;</span><br><span class="line">    List&lt;EasyUITree&gt; categories = productCategoryService.findProductCategoryListByParentId((<span class="keyword">short</span>) <span class="number">0</span>);</span><br><span class="line">    request.getSession().setAttribute(<span class="string">"categories"</span>,categories);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"product_add"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接着我们的jsp就需要用动态的方式获取数据了：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">    List&lt;EasyUITree&gt; list = (List) session.getAttribute(<span class="string">"categories"</span>);</span><br><span class="line">%&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> &lt;td&gt;所属分类：&lt;/td&gt;</span><br><span class="line"> &lt;td&gt;</span><br><span class="line">     &lt;select id=<span class="string">"cc"</span>  <span class="class"><span class="keyword">class</span></span>=<span class="string">"easyui-combobox"</span> name=<span class="string">"cid"</span> style=<span class="string">"width:800px;"</span>&gt;</span><br><span class="line">         &lt;option value="0"&gt;请选择&lt;/option&gt;</span><br><span class="line">         &lt;%</span><br><span class="line">             <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;list.size();i++)&#123;</span><br><span class="line">                 EasyUITree item = list.get(i);</span><br><span class="line">                 %&gt;</span><br><span class="line">                 &lt;option value="&lt;%=item.getId()%&gt;"&gt;&lt;%=item.getText()%&gt;&lt;/option&gt;</span><br><span class="line">             &lt;%</span><br><span class="line">             &#125;</span><br><span class="line">         %&gt;</span><br><span class="line"></span><br><span class="line">     &lt;/select&gt;</span><br><span class="line"> &lt;/td&gt;</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/cat.png" alt="获取商品分类" title="">                </div>                <div class="image-caption">获取商品分类</div>            </figure><p>虽然我们已经获取到了一级分类了，但是有些分类是有二级类目的，这时候我们需要用到 JavaScript 来写一些方法，对商品分类的获取与展示，商品图片的上传，商品详情页的数据处理等。</p><p>那么我们可以创建一个 produat_add.js 文件。然后在我们需要用到的地方引入这个 js 文件，从而能够应用到 js 方法。</p><p>当我们点击分类的时候，获取选中的id，然后去请求获取相应的子分类:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$(&quot;#addProductForm&quot;).find(&quot;select[name=&apos;cid&apos;]&quot;).combobox(&#123;</span><br><span class="line">          width: 190,</span><br><span class="line">          onChange: function() &#123;</span><br><span class="line">              var value=$(&quot;#cc&quot;).val();</span><br><span class="line">              loadSubCategories(value);</span><br><span class="line">          &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p> SSM视频教程目录</p><ul><li><a href="https://wistbean.github.io/java-ssm-video.html#SSM%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B%E7%9B%AE%E5%BD%95">SSM视频教程目录</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Java" scheme="https://wistbean.github.io/categories/Java/"/>
    
      <category term="Java SSM视频教程" scheme="https://wistbean.github.io/categories/Java/Java-SSM%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="教程" scheme="https://wistbean.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Java" scheme="https://wistbean.github.io/tags/Java/"/>
    
      <category term="Intellij IDEA" scheme="https://wistbean.github.io/tags/Intellij-IDEA/"/>
    
      <category term="Java视频教程" scheme="https://wistbean.github.io/tags/Java%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/"/>
    
      <category term="项目实战" scheme="https://wistbean.github.io/tags/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/"/>
    
      <category term="分布式" scheme="https://wistbean.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
      <category term="SSM" scheme="https://wistbean.github.io/tags/SSM/"/>
    
      <category term="码农商城" scheme="https://wistbean.github.io/tags/%E7%A0%81%E5%86%9C%E5%95%86%E5%9F%8E/"/>
    
      <category term="EasyUI" scheme="https://wistbean.github.io/tags/EasyUI/"/>
    
      <category term="商品" scheme="https://wistbean.github.io/tags/%E5%95%86%E5%93%81/"/>
    
      <category term="FreeMarker" scheme="https://wistbean.github.io/tags/FreeMarker/"/>
    
      <category term="Jqury" scheme="https://wistbean.github.io/tags/Jqury/"/>
    
  </entry>
  
  <entry>
    <title>「5-2」 码农商城-实现商品添加界面</title>
    <link href="https://wistbean.github.io/java-ssm-5-2.html"/>
    <id>https://wistbean.github.io/java-ssm-5-2.html</id>
    <published>2018-12-16T06:47:55.000Z</published>
    <updated>2019-02-23T17:53:55.581Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><iframe width="100%" height="315" src="https://www.youtube.com/embed/gjvIuZVUTIQ" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><blockquote><p>访问不了Youtube？<br>1.点击<a href="/banwagong-ss.html">搭建自己的ss教程</a>轻松访问1080p高清Youtube视频。<br>2.或者点击<a href="https://www.bilibili.com/video/av38471418/" target="_blank" rel="noopener">本节b站视频教程地址</a>观看。</p></blockquote><h1 id="管理系统的添加商品页面"><a href="#管理系统的添加商品页面" class="headerlink" title="管理系统的添加商品页面"></a>管理系统的添加商品页面</h1><p><a href="http://www.jeasyui.com/documentation/index.php#" target="_blank" rel="noopener">EasyUI</a>给我们提供了<a href="http://www.jeasyui.com/documentation/form.php?_=1544943321524" target="_blank" rel="noopener">Form组件</a>，我们使用它的表单提交，可以很方便的来与后端数据进行交互。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/easyui_form.png" alt="easyui_form" title="">                </div>                <div class="image-caption">easyui_form</div>            </figure><h1 id="SpringMVC整合Ueditor，EasyUI"><a href="#SpringMVC整合Ueditor，EasyUI" class="headerlink" title="SpringMVC整合Ueditor，EasyUI"></a>SpringMVC整合Ueditor，EasyUI</h1><p>新建 product_add.jsp，添加ueditor所需要的js文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=&quot;text/javascript&quot; charset=&quot;utf-8&quot; src=&quot;/ueditor/ueditor.config.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; charset=&quot;utf-8&quot; src=&quot;/ueditor/ueditor.all.min.js&quot;&gt; &lt;/script&gt;</span><br><span class="line">&lt;!--建议手动加在语言，避免在ie下有时因为加载语言失败导致编辑器加载失败--&gt;</span><br><span class="line">&lt;!--这里加载的语言文件会覆盖你在配置项目里添加的语言类型，比如你在配置项目里配置的是英文，这里加载的中文，那最后就是中文--&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; charset=&quot;utf-8&quot; src=&quot;/ueditor/lang/zh-cn/zh-cn.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><p>在 ueditor.config.js 文件中需要配置一下路径，很多人因为在这里遇到了找不到资源文件的问题：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">URL = URL + &quot;/ueditor/&quot;;</span><br></pre></td></tr></table></figure><h1 id="SSM视频教程目录"><a href="#SSM视频教程目录" class="headerlink" title="SSM视频教程目录"></a>SSM视频教程目录</h1><ul><li><a href="https://wistbean.github.io/java-ssm-video.html#SSM%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B%E7%9B%AE%E5%BD%95">SSM视频教程目录</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Java" scheme="https://wistbean.github.io/categories/Java/"/>
    
      <category term="Java SSM视频教程" scheme="https://wistbean.github.io/categories/Java/Java-SSM%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="教程" scheme="https://wistbean.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Java" scheme="https://wistbean.github.io/tags/Java/"/>
    
      <category term="Intellij IDEA" scheme="https://wistbean.github.io/tags/Intellij-IDEA/"/>
    
      <category term="Java视频教程" scheme="https://wistbean.github.io/tags/Java%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/"/>
    
      <category term="项目实战" scheme="https://wistbean.github.io/tags/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/"/>
    
      <category term="分布式" scheme="https://wistbean.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
      <category term="SSM" scheme="https://wistbean.github.io/tags/SSM/"/>
    
      <category term="码农商城" scheme="https://wistbean.github.io/tags/%E7%A0%81%E5%86%9C%E5%95%86%E5%9F%8E/"/>
    
      <category term="EasyUI" scheme="https://wistbean.github.io/tags/EasyUI/"/>
    
      <category term="UEditor" scheme="https://wistbean.github.io/tags/UEditor/"/>
    
      <category term="富文本编辑器" scheme="https://wistbean.github.io/tags/%E5%AF%8C%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91%E5%99%A8/"/>
    
      <category term="商品" scheme="https://wistbean.github.io/tags/%E5%95%86%E5%93%81/"/>
    
      <category term="FreeMarker" scheme="https://wistbean.github.io/tags/FreeMarker/"/>
    
  </entry>
  
  <entry>
    <title>「5-1」Java模板引擎FreeMarker整合SSM</title>
    <link href="https://wistbean.github.io/java-ssm-5-1.html"/>
    <id>https://wistbean.github.io/java-ssm-5-1.html</id>
    <published>2018-12-11T13:27:26.000Z</published>
    <updated>2019-02-23T17:53:56.051Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="什么是FreeMarker"><a href="#什么是FreeMarker" class="headerlink" title="什么是FreeMarker"></a>什么是FreeMarker</h1><iframe src="//player.bilibili.com/player.html?aid=38024613&cid=66844321&page=1" width="100%" height="436" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><p><a href="https://freemarker.apache.org/" target="_blank" rel="noopener">FreeMarker</a>是一个 Java 的模板引擎，可以使用它来动态的绑定数据。比如我们在 JSP 中想要直接显示 Controller 传过来的数据的时候，那么我们就可以使用到 FreeMarker。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://freemarker.apache.org/images/overview.png" alt="FreeMarker" title="">                </div>                <div class="image-caption">FreeMarker</div>            </figure><p>比如上图中的 ${name} 就是一个模板，这样的话前端不需要知道这个数据的具体逻辑，后端给就是了，页面的样式和数据之间分离出来，各过各的，挺好。</p><p>FreeMarker 还提供了一些<a href="https://freemarker.apache.org/docs/dgui_template_directives.html" target="_blank" rel="noopener">指令</a>，比如 if 判断，列表数据，循环等。我们的项目中到时候会用到。</p><h1 id="FreeMarker与SpringMVC的整合"><a href="#FreeMarker与SpringMVC的整合" class="headerlink" title="FreeMarker与SpringMVC的整合"></a>FreeMarker与SpringMVC的整合</h1><h2 id="maven-依赖-freemarker"><a href="#maven-依赖-freemarker" class="headerlink" title="maven 依赖 freemarker"></a>maven 依赖 freemarker</h2><p>freemarker的maven依赖,<a href="https://mvnrepository.com/artifact/org.freemarker/freemarker/2.3.28" target="_blank" rel="noopener">最新版本如下</a>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.freemarker&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;freemarker&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;2.3.28&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p>支持集成常见的第三方库的依赖：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">     &lt;groupId&gt;org.springframework&lt;/groupId&gt;</span><br><span class="line">     &lt;artifactId&gt;spring-context-support&lt;/artifactId&gt;</span><br><span class="line">     &lt;version&gt;$&#123;spring.version&#125;&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h2 id="SpringMVC配置FreeMarker"><a href="#SpringMVC配置FreeMarker" class="headerlink" title="SpringMVC配置FreeMarker"></a>SpringMVC配置FreeMarker</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--freemarker的配置在前，当当请求发现/WEB-INF/ftl/没有的时候，就会去/WEB-INF/jsp/查找--&gt;</span><br><span class="line">   &lt;bean id=&quot;freemarkerConfig&quot; class=&quot;org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer&quot;&gt;</span><br><span class="line">       &lt;property name=&quot;templateLoaderPath&quot; value=&quot;/WEB-INF/ftl/&quot;/&gt;</span><br><span class="line">   &lt;/bean&gt;</span><br><span class="line">   &lt;bean id=&quot;viewResolver&quot; class=&quot;org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver&quot;&gt;</span><br><span class="line">       &lt;property name=&quot;prefix&quot; value=&quot;&quot;/&gt;</span><br><span class="line">       &lt;property name=&quot;suffix&quot; value=&quot;.ftl&quot;/&gt;</span><br><span class="line">       &lt;property name=&quot;contentType&quot; value=&quot;text/html; charset=UTF-8&quot;/&gt;</span><br><span class="line">   &lt;/bean&gt;</span><br></pre></td></tr></table></figure><h2 id="Controller使用FreeMarker"><a href="#Controller使用FreeMarker" class="headerlink" title="Controller使用FreeMarker"></a>Controller使用FreeMarker</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FreeMarkerTestController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/hello"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">SayHello</span><span class="params">(Model model)</span></span>&#123;</span><br><span class="line">        model.addAttribute(<span class="string">"name"</span>,<span class="string">"wistbean"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"hello"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/hi"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">SayHi</span><span class="params">(Model model)</span></span>&#123;</span><br><span class="line">        model.addAttribute(<span class="string">"name"</span>,<span class="string">"wistbean"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"hi"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="template使用"><a href="#template使用" class="headerlink" title="template使用"></a>template使用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;h1&gt;hello $&#123;name&#125;&lt;/h1&gt;</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/freemark" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h1 id="SSM视频教程目录"><a href="#SSM视频教程目录" class="headerlink" title="SSM视频教程目录"></a>SSM视频教程目录</h1><ul><li><a href="https://wistbean.github.io/java-ssm-video.html#SSM%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B%E7%9B%AE%E5%BD%95">SSM视频教程目录</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Java" scheme="https://wistbean.github.io/categories/Java/"/>
    
      <category term="Java SSM视频教程" scheme="https://wistbean.github.io/categories/Java/Java-SSM%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="教程" scheme="https://wistbean.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Java" scheme="https://wistbean.github.io/tags/Java/"/>
    
      <category term="Intellij IDEA" scheme="https://wistbean.github.io/tags/Intellij-IDEA/"/>
    
      <category term="Java视频教程" scheme="https://wistbean.github.io/tags/Java%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/"/>
    
      <category term="项目实战" scheme="https://wistbean.github.io/tags/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/"/>
    
      <category term="分布式" scheme="https://wistbean.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
      <category term="SSM" scheme="https://wistbean.github.io/tags/SSM/"/>
    
      <category term="码农商城" scheme="https://wistbean.github.io/tags/%E7%A0%81%E5%86%9C%E5%95%86%E5%9F%8E/"/>
    
      <category term="EasyUI" scheme="https://wistbean.github.io/tags/EasyUI/"/>
    
      <category term="UEditor" scheme="https://wistbean.github.io/tags/UEditor/"/>
    
      <category term="富文本编辑器" scheme="https://wistbean.github.io/tags/%E5%AF%8C%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91%E5%99%A8/"/>
    
      <category term="商品" scheme="https://wistbean.github.io/tags/%E5%95%86%E5%93%81/"/>
    
      <category term="FreeMarker" scheme="https://wistbean.github.io/tags/FreeMarker/"/>
    
  </entry>
  
  <entry>
    <title>搬瓦工vps一键搭建ss并开启BBR代理加速科学上网，傻瓜式1分钟搞定</title>
    <link href="https://wistbean.github.io/banwagong-quick-build-ss.html"/>
    <id>https://wistbean.github.io/banwagong-quick-build-ss.html</id>
    <published>2018-12-10T08:24:46.000Z</published>
    <updated>2019-03-01T07:33:12.957Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>搬瓦工后台有一个<code>一键搭建ss</code>的菜单选项，支持一键安装ss，不需要任何命令代码，完全傻瓜式操作，点一下就开始安装，安装完之后会给你生成ss的账号密码，直接拿来就可以使用了。</p><p>不过现在搬瓦工后台隐藏了这个选项，但其实地址还在，下文会提到。</p><p>本教程将从<code>优惠购买搬瓦工vps</code>，到<code>一键搭建ss</code>，再到<code>使用ss</code>，让你能快速的能够访问Google，YouTube等地方获取第一手资料。</p><h1 id="优惠购买搬瓦工vps"><a href="#优惠购买搬瓦工vps" class="headerlink" title="优惠购买搬瓦工vps"></a>优惠购买搬瓦工vps</h1><p>点击<a href="https://www.bwh88.net/aff.php?aff=32874" target="_blank" rel="noopener">搬瓦工官网</a>进行注册，搬瓦工有一个隐藏的优惠码，可以根据自己的需要，点击以下官方优惠链接：</p><table><thead><tr><th>搬瓦工配置</th><th>搬瓦工费用</th><th>优惠链接</th></tr></thead><tbody><tr><td><em>SPECIAL 40G KVM PROMO V3 - LOS ANGELES - CN2  </em> <br>  SSD硬盘: 40  GB RAID-10 <br> RAM内存: 2048   MB <br> CPU处理器: 1x Intel Xeon <br> Transfer流量: 2000  GB/月 <br> 连接速度: 1 Gigabit <br> 洛杉矶机房，CN2路线，使用中国的直线路线，速度加快</td><td>$27.99/季</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=58" target="_blank" rel="noopener">点击进入</a></td></tr><tr><td><em>SPECIAL 20G KVM PROMO V3 - LOS ANGELES - CN2 </em> <br>  SSD硬盘: 20 GB RAID-10 <br> RAM内存: 1024  MB <br> CPU处理器: 1x Intel Xeon <br> Transfer流量: 1000  GB/月 <br> 连接速度: 1 Gigabit <br> 洛杉矶机房，CN2路线，使用中国的直线路线，速度加快</td><td>$29.99 /半年</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=57" target="_blank" rel="noopener">点击进入</a></td></tr><tr><td><em>80G KVM – PROMO</em> <br> SSD硬盘: 80 GB RAID-10<br>RAM内存: 4 GB<br>CPU处理器: 4x Intel Xeon<br>Transfer流量: 3 TB/mo<br>连接速度: 1 Gigabit<br>Multiple locations</td><td>$19.99/月</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=46" target="_blank" rel="noopener">点击进入</a></td></tr><tr><td><em>20G KVM – PROMO</em> <br> SSD硬盘: 20 GB RAID-10 <br>RAM内存: 1024 MB <br>CPU处理器: 2x Intel Xeon <br>Transfer流量: 1 TB/mo <br>连接速度: 1 Gigabit <br>Multiple locations</td><td>$49.99/年</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=44" target="_blank" rel="noopener">点击进入</a></td></tr><tr><td><em>40G KVM – PROMO</em> <br> SSD硬盘: 40 GB RAID-10 <br>RAM内存: 2 GB <br>CPU处理器: 3x Intel Xeon <br>Transfer流量: 2 TB/mo <br>连接速度: 1 Gigabit <br>Multiple locations</td><td>$99.99/年</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=45" target="_blank" rel="noopener">点击进入</a></td></tr><tr><td><em>160G KVM – PROMO</em> <br> SSD硬盘: 160 GB RAID-10<br>RAM内存: 8 GB<br>CPU处理器: 5x Intel Xeon<br>Transfer流量: 4 TB/mo<br>连接速度: 1 Gigabit<br>Multiple locations</td><td>$39.99/月</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=47" target="_blank" rel="noopener">点击进入</a></td></tr><tr><td><em>3200G KVM – PROMO</em> <br> SSD硬盘: 320 GB RAID-10<br>RAM内存: 16 GB<br>CPU处理器: 6x Intel Xeon<br>Transfer流量: 5 TB/mo<br>连接速度: 1 Gigabit<br>Multiple locations</td><td>$79.99/月</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=48" target="_blank" rel="noopener">点击进入</a></td></tr></tbody></table><p>进入之后就可以获取优惠码了，选择完之后<strong>不要急着点击 「Add to Cart」</strong>。</p><p>这时候就可以获取隐藏的优惠码了，我们对着这个网页：<code>鼠标右击--&gt;查看网页源代码</code>。</p><p>接着 <code>Ctrl + F</code> 搜索 <code>code</code> ，这时候你就会看到 <code>Try this promo code: xxxx</code>，这里的<code>xxxx</code>就是优惠吗，把它复制下来。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/banwagong04.png" alt="搬瓦工vps" title="">                </div>                <div class="image-caption">搬瓦工vps</div>            </figure><p>页面的 Location 就是选择服务器的地址，到时访问谷歌的时候会显示你当前访问的地址。好了，我们点击「Add to Cart」。</p><p>接下来，进入结算页面，我们刚才复制的优惠码就派上用场了，将你刚刚复制的优惠码复制进去然后点击 「Validate Code」，看！是不是优惠了！一般人不知道这种操作:</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/vpn5.png" alt="搬瓦工优惠码" title="">                </div>                <div class="image-caption">搬瓦工优惠码</div>            </figure><p>接着点击「CheckOut」完成付款即可。付款的时候选择 Alipay 就可以使用支付宝付款。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/vpn8.png" alt="搬瓦工支付宝支付" title="">                </div>                <div class="image-caption">搬瓦工支付宝支付</div>            </figure><h1 id="搬瓦工一键安装ss"><a href="#搬瓦工一键安装ss" class="headerlink" title="搬瓦工一键安装ss"></a>搬瓦工一键安装ss</h1><p>当你购买完你的vps服务器的时候，在<a href="https://www.bwh88.net/aff.php?aff=32874" target="_blank" rel="noopener">搬瓦工的首页</a>点击<code>Services</code>下的<code>MyServices</code>就可以看到你购买的服务器了。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/banwagong-server.png" alt="搬瓦工买到的服务器" title="">                </div>                <div class="image-caption">搬瓦工买到的服务器</div>            </figure><p>接着点击<code>KiwiVM Control Panel</code>到你的服务器后台管理。在菜单的最下方有一个<code>KiwiVM Extras</code></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/banwagong-extras.png" alt="搬瓦工一键安装" title="">                </div>                <div class="image-caption">搬瓦工一键安装</div>            </figure><p>如果你发现没有<code>Shadowsocks Server</code>这个选项，那就说明被搬瓦工隐藏了这个功能。</p><p>不着急，点击 <a href="https://kiwivm.64clouds.com/main-exec.php?mode=extras_shadowsocks" target="_blank" rel="noopener">搬瓦工一键安装ss</a> 进入可以看到，搬瓦工一键安装ss的界面出现了。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/banwagong-ss.png" alt="搬瓦工一键安装ss" title="">                </div>                <div class="image-caption">搬瓦工一键安装ss</div>            </figure><p>点击<code>Install Shadowsocks Server</code>进行一键安装ss。</p><p>等一会之后就安装完成了，点击 <code>Go back</code> 按钮。</p><p>这时候可以看到ss所需要的信息了，加密方式，端口号，和密码。那么等会就可以使用这些信息进行科学上网了。</p><h1 id="使用Shadowsocks"><a href="#使用Shadowsocks" class="headerlink" title="使用Shadowsocks"></a>使用Shadowsocks</h1><h2 id="windows使用Shadowsocks"><a href="#windows使用Shadowsocks" class="headerlink" title="windows使用Shadowsocks"></a>windows使用Shadowsocks</h2><p>windows点击下载：<a href="https://pan.baidu.com/s/19m0AfTkPDSRj0bfYrGpbIg" target="_blank" rel="noopener">Shadowsocks windows客户端</a></p><p>打开 Shadowsocks 客户端，输入ip地址，密码，端口，和加密方式。接着点击确定，<strong>右下角会有个小飞机按钮，右键–&gt;启动代理</strong>。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/ss4.png" alt="vultr的ss" title="">                </div>                <div class="image-caption">vultr的ss</div>            </figure><p>这时候就可以科学上网了。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/vpn18.png" alt="google" title="">                </div>                <div class="image-caption">google</div>            </figure><h2 id="Android使用Shadowsocks"><a href="#Android使用Shadowsocks" class="headerlink" title="Android使用Shadowsocks"></a>Android使用Shadowsocks</h2><p>Android点击下载：<a href="https://pan.baidu.com/s/1coAkZn-GuYHu5eIKaHECxA" target="_blank" rel="noopener">Shadowsocks Android客户端</a></p><p>打开apk安装，接着打开APP，输入ip地址，密码，端口，和加密方式。即可科学上网。</p><h2 id="iPhone使用Shadowsocks"><a href="#iPhone使用Shadowsocks" class="headerlink" title="iPhone使用Shadowsocks"></a>iPhone使用Shadowsocks</h2><p>iPhone要下载的app需要在appstore下载，但是需要用美区账号才能下载，而且这个APP需要钱。在这里提供一种解决方案，就是可以再搭建一个<a href="https://wistbean.github.io/ipsec,l2tp_vpn.html#%E4%BD%BF%E7%94%A8-IPsec-L2TP-%E8%84%9A%E6%9C%AC%E6%90%AD%E5%BB%BA">IPsec/L2TP VPN</a>,专门给你的iPhone使用。</p><p>接着就可以上外网了：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/pic8.png" alt="google" title="">                </div>                <div class="image-caption">google</div>            </figure><h1 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h1><ul><li><a href="https://wistbean.github.io/banwagong-vpn.html">使用搬瓦工快速搭建自己的VPN</a></li><li><a href="https://wistbean.github.io/banwagong-ss.html">搬瓦工快速手动搭建SS(Shadowsocks)服务器简明详细教程</a></li><li><a href="https://wistbean.github.io/use-banwagong.html">优惠购买搬瓦工搭建自己的VPN并开启BBR加速访问</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="vpn" scheme="https://wistbean.github.io/categories/vpn/"/>
    
      <category term="搬瓦工" scheme="https://wistbean.github.io/categories/vpn/%E6%90%AC%E7%93%A6%E5%B7%A5/"/>
    
    
      <category term="搬瓦工" scheme="https://wistbean.github.io/tags/%E6%90%AC%E7%93%A6%E5%B7%A5/"/>
    
      <category term="vps" scheme="https://wistbean.github.io/tags/vps/"/>
    
      <category term="ss搭建" scheme="https://wistbean.github.io/tags/ss%E6%90%AD%E5%BB%BA/"/>
    
      <category term="教程" scheme="https://wistbean.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="搬瓦工一键ss" scheme="https://wistbean.github.io/tags/%E6%90%AC%E7%93%A6%E5%B7%A5%E4%B8%80%E9%94%AEss/"/>
    
      <category term="搬瓦工没有一键ss功能了怎么办" scheme="https://wistbean.github.io/tags/%E6%90%AC%E7%93%A6%E5%B7%A5%E6%B2%A1%E6%9C%89%E4%B8%80%E9%94%AEss%E5%8A%9F%E8%83%BD%E4%BA%86%E6%80%8E%E4%B9%88%E5%8A%9E/"/>
    
      <category term="搬瓦工取消了一键安装shadowsocks" scheme="https://wistbean.github.io/tags/%E6%90%AC%E7%93%A6%E5%B7%A5%E5%8F%96%E6%B6%88%E4%BA%86%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85shadowsocks/"/>
    
  </entry>
  
  <entry>
    <title>搬瓦工和vultr哪个好</title>
    <link href="https://wistbean.github.io/bangwagong-vultr-na-ge-hao.html"/>
    <id>https://wistbean.github.io/bangwagong-vultr-na-ge-hao.html</id>
    <published>2018-12-09T12:15:44.000Z</published>
    <updated>2019-03-01T07:33:13.082Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>在<a href="https://wistbean.github.io/cloud-server.html">《推荐|哪家云服务产商性价比高,性能稳定》</a>一文中有说到搬瓦工和vultr是性价比很高的vps，搬瓦工和vultr算是海外服务器运营商中最受欢迎的了，不管是优惠力度还是服务器本身的架构，都挺出色的，那么，搬瓦工和vultr哪个好呢？</p><h1 id="搬瓦工和vultr的价格"><a href="#搬瓦工和vultr的价格" class="headerlink" title="搬瓦工和vultr的价格"></a>搬瓦工和vultr的价格</h1><p><a href="https://www.bwh88.net/aff.php?aff=32874" target="_blank" rel="noopener">搬瓦工</a>和<a href="https://www.vultr.com/?ref=7772384-4F" target="_blank" rel="noopener">vultr</a>经常有提供一些优惠的活动，vultr有时候会提供充值$10送$10，而搬瓦工常年会有一个隐藏的优惠码。不过很多人不知道，搬瓦工优惠码具体获取方式可以看这里：<a href="https://wistbean.github.io/banwagong-coupon.html">搬瓦工优惠码怎么来的？购买搬瓦工VPS省钱攻略：获取搬瓦工优惠码</a>。</p><p>搬瓦工之前最便宜的是19美元/年的服务器，具体配置如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">10G KVM – PROMO</span><br><span class="line">SSD硬盘: 10 GB RAID-10</span><br><span class="line">RAM内存: 512 MB</span><br><span class="line">CPU处理器: 1x Intel Xeon</span><br><span class="line">Transfer流量: 500 GB/月</span><br><span class="line">连接速度: 1 Gigabit</span><br></pre></td></tr></table></figure><p>不过现在已经没货下架了，目前提供了<a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=84" target="_blank" rel="noopener">$15.99/半年</a>和<a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=82" target="_blank" rel="noopener">$27.60/年</a>的vps，但是配置比19美元/年的要高很多。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/banwagong-2018.png" alt="搬瓦工优惠vps" title="">                </div>                <div class="image-caption">搬瓦工优惠vps</div>            </figure><p>可以看到，搬瓦工优惠vps有 1TB 的流量，CN2路线，直连中国路线，速度很快。</p><p>而 <a href="https://www.vultr.com/?ref=7772384-4F" target="_blank" rel="noopener">vultr 的最低配置$2.5/月</a>，和之前搬瓦工的最低配置差不多，也是512 MB内存，500 GB/月的流量。虽然vultr目前最低价格的配置比不上搬瓦工，但是vultr可以按月付，而且vultr按小时计费，也就是当你不用的时候可以停掉，就不会产生费用了。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/vultr-2.5.png" alt="vultr最低配置" title="">                </div>                <div class="image-caption">vultr最低配置</div>            </figure><h1 id="搬瓦工和vultr的支付方式"><a href="#搬瓦工和vultr的支付方式" class="headerlink" title="搬瓦工和vultr的支付方式"></a>搬瓦工和vultr的支付方式</h1><p>搬瓦工支持的支付方式有：PayPal，支付宝，信用卡</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/banwagong-pay.png" alt="搬瓦工支付方式" title="">                </div>                <div class="image-caption">搬瓦工支付方式</div>            </figure><p>vultr支持的支付方式有：信用卡，PayPal，比特币，支付宝，微信</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/vultr-paymethod.png" alt="vultr支付方式" title="">                </div>                <div class="image-caption">vultr支付方式</div>            </figure><p>之前vultr不可以用支付宝支付，现在都支持支付宝支付，算是很方便了。</p><h1 id="搬瓦工和vultr的机房"><a href="#搬瓦工和vultr的机房" class="headerlink" title="搬瓦工和vultr的机房"></a>搬瓦工和vultr的机房</h1><p>搬瓦工的机房分布于美国，纽约，加拿大，香港，亚利桑那州等</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/banwagong-jifang.png" alt="搬瓦工的机房" title="">                </div>                <div class="image-caption">搬瓦工的机房</div>            </figure><p>vultr的机房分布于日本，新加坡，美国，伦敦等</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/vultr-jifang.png" alt="vultr的机房" title="">                </div>                <div class="image-caption">vultr的机房</div>            </figure><p>相对来说，vultr机房多一些，选择也更多。</p><h1 id="搬瓦工和vultr的架构"><a href="#搬瓦工和vultr的架构" class="headerlink" title="搬瓦工和vultr的架构"></a>搬瓦工和vultr的架构</h1><p>搬瓦工和vultr都支持KVM架构，可以使用BBR加速内核，当然了还允许执行所有基本的管理任务：启动/停止、OS重新加载、紧急控制台、rDNS(PTR)记录管理、数据中心迁移、快照、使用统计、API等。</p><h1 id="搬瓦工和vultr的一键安装"><a href="#搬瓦工和vultr的一键安装" class="headerlink" title="搬瓦工和vultr的一键安装"></a>搬瓦工和vultr的一键安装</h1><p>搬瓦工提供了openVPN，Snapshots的一键安装。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/banwagong-oneclick.png" alt="搬瓦工一键安装" title="">                </div>                <div class="image-caption">搬瓦工一键安装</div>            </figure><p>vultr提供了比较多，有Docker，GitLab，LAMP,OpenVPN，WordPress等等的一键安装。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/vultr-oneclick.png" alt="vultr一键安装" title="">                </div>                <div class="image-caption">vultr一键安装</div>            </figure><p>相对来说，vultr用心一些，一键安装的程序比较多，省去了用户的很多时间。</p><h1 id="搬瓦工和vultr的速度测试"><a href="#搬瓦工和vultr的速度测试" class="headerlink" title="搬瓦工和vultr的速度测试"></a>搬瓦工和vultr的速度测试</h1><h2 id="搬瓦工数据中心IP测试"><a href="#搬瓦工数据中心IP测试" class="headerlink" title="搬瓦工数据中心IP测试"></a>搬瓦工数据中心IP测试</h2><table><thead><tr><th>搬瓦工机房</th><th>搬瓦工官方测试IP地址</th><th>下载测试100M文件</th><th>下载测试1000M文件</th></tr></thead><tbody><tr><td>CABC_1，加拿大</td><td>172.93.32.16</td><td><a href="http://172.93.32.16/100mb.bin" target="_blank" rel="noopener">100 MB</a></td><td><a href="http://172.93.32.16/1000mb.bin" target="_blank" rel="noopener">1000 MB</a></td></tr><tr><td>EUNL_3，荷兰</td><td>45.62.120.202</td><td><a href="http://45.62.120.202/100mb.bin" target="_blank" rel="noopener">100 MB</a></td><td><a href="http://45.62.120.202/1000mb.bin" target="_blank" rel="noopener">1000 MB</a></td></tr><tr><td>弗罗里达</td><td>172.93.32.16</td><td><a href="http://23.252.104.22/100mb.bin" target="_blank" rel="noopener">100 MB</a></td><td><a href="http://23.252.104.22/1000mb.bin" target="_blank" rel="noopener">1000 MB</a></td></tr><tr><td>USNY_2，纽约</td><td>208.167.227.122</td><td><a href="http://208.167.227.122/100mb.bin" target="_blank" rel="noopener">100 MB</a></td><td><a href="http://208.167.227.122/1000mb.bin" target="_blank" rel="noopener">1000 MB</a></td></tr><tr><td>USNJ，新泽西</td><td>23.29.138.3</td><td><a href="http://23.29.138.3/100mb.bin" target="_blank" rel="noopener">100 MB</a></td><td><a href="http://23.29.138.3/1000mb.bin" target="_blank" rel="noopener">1000 MB</a></td></tr><tr><td>USCA_FMT，弗里蒙特</td><td>184.105.138.67</td><td><a href="http://184.105.138.67/100mb.bin" target="_blank" rel="noopener">100 MB</a></td><td><a href="http://184.105.138.67/1000mb.bin" target="_blank" rel="noopener">1000 MB</a></td></tr><tr><td>USAZ_2，凤凰城</td><td>198.35.46.28</td><td><a href="http://198.35.46.28/100mb.bin" target="_blank" rel="noopener">100 MB</a></td><td><a href="http://198.35.46.28/1000mb.bin" target="_blank" rel="noopener">1000 MB</a></td></tr><tr><td>USCA_4 (DC4 MCOM) 洛杉矶 MCOM</td><td>98.142.136.11</td><td><a href="http://98.142.136.11/100mb.bin" target="_blank" rel="noopener">100 MB</a></td><td><a href="http://98.142.136.11/1000mb.bin" target="_blank" rel="noopener">1000 MB</a></td></tr><tr><td>USCA_2 (DC2 QNET KVM) 洛杉矶 QNET</td><td>23.252.96.201</td><td><a href="http://23.252.96.201/100mb.bin" target="_blank" rel="noopener">100 MB</a></td><td><a href="http://23.252.96.201/1000mb.bin" target="_blank" rel="noopener">1000 MB</a></td></tr><tr><td>USCA_8 (DC8 CN2 KVM) 洛杉矶 CN2 (C3)</td><td>23.252.99.102</td><td><a href="http://23.252.99.102/100mb.bin" target="_blank" rel="noopener">100 MB</a></td><td><a href="http://23.252.99.102/1000mb.bin" target="_blank" rel="noopener">1000 MB</a></td></tr><tr><td>USCA_2 (DC2 QNET KVM) 洛杉矶 CN2 (QN)</td><td>23.252.96.201</td><td><a href="http://23.252.103.101/100mb.bin" target="_blank" rel="noopener">100 MB</a></td><td><a href="http://23.252.103.101/1000mb.bin" target="_blank" rel="noopener">1000 MB</a></td></tr><tr><td>USCA_9 (DC9 CN2 GIA) 洛杉矶 CN2 GIA</td><td>65.49.131.102</td><td><a href="http://65.49.131.102/100mb.bin" target="_blank" rel="noopener">100 MB</a></td><td><a href="http://65.49.131.102/1000mb.bin" target="_blank" rel="noopener">1000 MB</a></td></tr><tr><td>HKHK_1 香港 PCCW</td><td>23.252.97.148</td><td><a href="http://23.252.97.148/100mb.bin" target="_blank" rel="noopener">100 MB</a></td><td><a href="http://23.252.97.148/1000mb.bin" target="_blank" rel="noopener">1000 MB</a></td></tr></tbody></table><h2 id="vultr数据中心测试"><a href="#vultr数据中心测试" class="headerlink" title="vultr数据中心测试"></a>vultr数据中心测试</h2><table><thead><tr><th>vultr机房</th><th>vultr官方测试IP地址</th><th>下载测试100M文件</th><th>下载测试1000M文件</th></tr></thead><tbody><tr><td>(Asia) Tokyo, Japan</td><td>hnd-jp-ping.vultr.com</td><td><a href="http://hnd-jp-ping.vultr.com/vultr.com.100MB.bin" target="_blank" rel="noopener">100Mb</a></td><td><a href="http://hnd-jp-ping.vultr.com/vultr.com.1000MB.bin" target="_blank" rel="noopener">1000Mb</a></td></tr><tr><td>(AU) Sydney, Australia</td><td>syd-au-ping.vultr.com</td><td><a href="http://syd-au-ping.vultr.com/vultr.com.100MB.bin" target="_blank" rel="noopener">100Mb</a></td><td><a href="http://syd-au-ping.vultr.com/vultr.com.1000MB.bin" target="_blank" rel="noopener">1000Mb</a></td></tr><tr><td>(EU) Frankfurt, DE</td><td>fra-de-ping.vultr.com</td><td><a href="http://fra-de-ping.vultr.com/vultr.com.100MB.bin" target="_blank" rel="noopener">100Mb</a></td><td><a href="http://fra-de-ping.vultr.com/vultr.com.1000MB.bin" target="_blank" rel="noopener">1000Mb</a></td></tr><tr><td>(EU) Amsterdam, NL</td><td>ams-nl-ping.vultr.com</td><td><a href="http://ams-nl-ping.vultr.com/vultr.com.100MB.bin" target="_blank" rel="noopener">100Mb</a></td><td><a href="http://ams-nl-ping.vultr.com/vultr.com.1000MB.bin" target="_blank" rel="noopener">1000Mb</a></td></tr><tr><td>Seattle, Washington</td><td>wa-us-ping.vultr.com</td><td><a href="http://wa-us-ping.vultr.com/vultr.com.100MB.bin" target="_blank" rel="noopener">100Mb</a></td><td><a href="http://wa-us-ping.vultr.com/vultr.com.1000MB.bin" target="_blank" rel="noopener">1000Mb</a></td></tr><tr><td>(EU) London, UK</td><td>lon-gb-ping.vultr.com</td><td><a href="http://lon-gb-ping.vultr.com/vultr.com.100MB.bin" target="_blank" rel="noopener">100Mb</a></td><td><a href="http://lon-gb-ping.vultr.com/vultr.com.1000MB.bin" target="_blank" rel="noopener">1000Mb</a></td></tr><tr><td>(EU) Paris, France</td><td>par-fr-ping.vultr.com</td><td><a href="http://par-fr-ping.vultr.com/vultr.com.100MB.bin" target="_blank" rel="noopener">100Mb</a></td><td><a href="http://par-fr-ping.vultr.com/vultr.com.1000MB.bin" target="_blank" rel="noopener">1000Mb</a></td></tr><tr><td>Los Angeles, California</td><td>lax-ca-us-ping.vultr.com</td><td><a href="http://lax-ca-us-ping.vultr.com/vultr.com.100MB.bin" target="_blank" rel="noopener">100Mb</a></td><td><a href="http://lax-ca-us-ping.vultr.com/vultr.com.1000MB.bin" target="_blank" rel="noopener">1000Mb</a></td></tr><tr><td>Chicago, Illinois</td><td>il-us-ping.vultr.com</td><td><a href="http://il-us-ping.vultr.com/vultr.com.100MB.bin" target="_blank" rel="noopener">100Mb</a></td><td><a href="http://il-us-ping.vultr.com/vultr.com.1000MB.bin" target="_blank" rel="noopener">1000Mb</a></td></tr><tr><td>Dallas, Texas</td><td>tx-us-ping.vultr.com</td><td><a href="http://tx-us-ping.vultr.com/vultr.com.100MB.bin" target="_blank" rel="noopener">100Mb</a></td><td><a href="http://tx-us-ping.vultr.com/vultr.com.1000MB.bin" target="_blank" rel="noopener">1000Mb</a></td></tr><tr><td>New York / New Jersey</td><td>nj-us-ping.vultr.com</td><td><a href="http://nj-us-ping.vultr.com/vultr.com.100MB.bin" target="_blank" rel="noopener">100Mb</a></td><td><a href="http://nj-us-ping.vultr.com/vultr.com.1000MB.bin" target="_blank" rel="noopener">1000Mb</a></td></tr><tr><td>Atlanta, Georgia</td><td>ga-us-ping.vultr.com</td><td><a href="http://ga-us-ping.vultr.com/vultr.com.100MB.bin" target="_blank" rel="noopener">100Mb</a></td><td><a href="http://ga-us-ping.vultr.com/vultr.com.1000MB.bin" target="_blank" rel="noopener">1000Mb</a></td></tr><tr><td>Miami, Florida</td><td>fl-us-ping.vultr.com</td><td><a href="http://fl-us-ping.vultr.com/vultr.com.100MB.bin" target="_blank" rel="noopener">100Mb</a></td><td><a href="http://fl-us-ping.vultr.com/vultr.com.1000MB.bin" target="_blank" rel="noopener">1000Mb</a></td></tr></tbody></table><h1 id="搬瓦工和vultr的优惠"><a href="#搬瓦工和vultr的优惠" class="headerlink" title="搬瓦工和vultr的优惠"></a>搬瓦工和vultr的优惠</h1><h2 id="搬瓦工优惠链接"><a href="#搬瓦工优惠链接" class="headerlink" title="搬瓦工优惠链接"></a>搬瓦工优惠链接</h2><table><thead><tr><th>搬瓦工配置</th><th>搬瓦工费用</th><th>优惠链接</th></tr></thead><tbody><tr><td><em>SPECIAL 40G KVM PROMO V3 - LOS ANGELES - CN2  </em> <br>  SSD硬盘: 40  GB RAID-10 <br> RAM内存: 2048   MB <br> CPU处理器: 1x Intel Xeon <br> Transfer流量: 2000  GB/月 <br> 连接速度: 1 Gigabit <br> 洛杉矶机房，CN2路线，使用中国的直线路线，速度加快</td><td>$27.99/季</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=58" target="_blank" rel="noopener">点击进入</a></td></tr><tr><td><em>SPECIAL 20G KVM PROMO V3 - LOS ANGELES - CN2 </em> <br>  SSD硬盘: 20 GB RAID-10 <br> RAM内存: 1024  MB <br> CPU处理器: 1x Intel Xeon <br> Transfer流量: 1000  GB/月 <br> 连接速度: 1 Gigabit <br> 洛杉矶机房，CN2路线，使用中国的直线路线，速度加快</td><td>$29.99 /半年</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=57" target="_blank" rel="noopener">点击进入</a></td></tr><tr><td><em>80G KVM – PROMO</em> <br> SSD硬盘: 80 GB RAID-10<br>RAM内存: 4 GB<br>CPU处理器: 4x Intel Xeon<br>Transfer流量: 3 TB/mo<br>连接速度: 1 Gigabit<br>Multiple locations</td><td>$19.99/月</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=46" target="_blank" rel="noopener">点击进入</a></td></tr><tr><td><em>20G KVM – PROMO</em> <br> SSD硬盘: 20 GB RAID-10 <br>RAM内存: 1024 MB <br>CPU处理器: 2x Intel Xeon <br>Transfer流量: 1 TB/mo <br>连接速度: 1 Gigabit <br>Multiple locations</td><td>$49.99/年</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=44" target="_blank" rel="noopener">点击进入</a></td></tr><tr><td><em>40G KVM – PROMO</em> <br> SSD硬盘: 40 GB RAID-10 <br>RAM内存: 2 GB <br>CPU处理器: 3x Intel Xeon <br>Transfer流量: 2 TB/mo <br>连接速度: 1 Gigabit <br>Multiple locations</td><td>$99.99/年</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=45" target="_blank" rel="noopener">点击进入</a></td></tr><tr><td><em>160G KVM – PROMO</em> <br> SSD硬盘: 160 GB RAID-10<br>RAM内存: 8 GB<br>CPU处理器: 5x Intel Xeon<br>Transfer流量: 4 TB/mo<br>连接速度: 1 Gigabit<br>Multiple locations</td><td>$39.99/月</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=47" target="_blank" rel="noopener">点击进入</a></td></tr><tr><td><em>3200G KVM – PROMO</em> <br> SSD硬盘: 320 GB RAID-10<br>RAM内存: 16 GB<br>CPU处理器: 6x Intel Xeon<br>Transfer流量: 5 TB/mo<br>连接速度: 1 Gigabit<br>Multiple locations</td><td>$79.99/月</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=48" target="_blank" rel="noopener">点击进入</a></td></tr></tbody></table><h2 id="vultr优惠链接"><a href="#vultr优惠链接" class="headerlink" title="vultr优惠链接"></a>vultr优惠链接</h2><p>vultr优惠活动经常有，包括充值10美元赠送10美元，50美元，100美元等，点击<a href="https://www.vultr.com/?ref=7772384-4F" target="_blank" rel="noopener">vultr官方优惠购买链接</a>进行优惠购买。</p><h1 id="相关"><a href="#相关" class="headerlink" title="相关"></a>相关</h1><ul><li><a href="https://wistbean.github.io/use-banwagong.html">优惠购买搬瓦工搭建自己的VPN并开启BBR加速访问</a></li><li><a href="https://wistbean.github.io/banwagong-vpn.html">使用搬瓦工快速搭建自己的VPN</a></li><li><a href="https://wistbean.github.io/vultr-vps-bbr-ss.html">使用vultr(vps)搭建ss并开启BBR快速上网教程 超简单10分钟搞定</a></li><li><a href="https://wistbean.github.io/banwagong-15-1000G-vps.html">搬瓦工19美元服务器没货下架了，但提供了15美元1000GB的vps</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="vps" scheme="https://wistbean.github.io/categories/vps/"/>
    
      <category term="搬瓦工" scheme="https://wistbean.github.io/categories/vps/%E6%90%AC%E7%93%A6%E5%B7%A5/"/>
    
      <category term="vultr" scheme="https://wistbean.github.io/categories/vps/%E6%90%AC%E7%93%A6%E5%B7%A5/vultr/"/>
    
    
      <category term="搬瓦工" scheme="https://wistbean.github.io/tags/%E6%90%AC%E7%93%A6%E5%B7%A5/"/>
    
      <category term="vultr" scheme="https://wistbean.github.io/tags/vultr/"/>
    
      <category term="vps" scheme="https://wistbean.github.io/tags/vps/"/>
    
      <category term="优惠码" scheme="https://wistbean.github.io/tags/%E4%BC%98%E6%83%A0%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>肯定会电台，晚点见</title>
    <link href="https://wistbean.github.io/ken-ding-hui-dian-tai.html"/>
    <id>https://wistbean.github.io/ken-ding-hui-dian-tai.html</id>
    <published>2018-12-08T07:54:00.000Z</published>
    <updated>2018-12-08T08:32:37.091Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>不知不觉，肯定会电台已经做了 53 期了，平均每周都会更新一期，其实每期时间不长，大多都在 10 分钟左右。</p><p>其实我经常听podcast，我觉得这种方式挺好的，听听别人的想法，听听一些自己可能从来不知道的东西，扩展自己的视野。</p><p>后来想着要不自己也弄一个玩玩，说点科技上的，说点个人提升的，说点书上的精华。想想自己能做点输出，让别人听了觉得有用，是件挺有意义的事情。</p><p>虽然说自己做的这个玩意没有多好，但在做的过程还是能体会到背后的那些付出，原来，有些事情被我想得过于简单。</p><p>不管这么样，这一年我还是有在坚持的，要不也不会有这 53 期。</p><p>不过听这个肯定会电台的人不多，有那么几个人私信我说，很好。还是有点开心的。</p><p>其实，这也是自己在不断的尝试一些“新鲜”事物之一，觉得可以做就试试，试试就好好试试。</p><p>最近每周五都更新一期，我觉得星期五是整个星期挺美好的一个数字，不过从这个星期五开始暂时停更一阵子啦。</p><p>停下来，看一看，想一想先，也先做点减法。</p><p>肯定会电台，54-100期，晚点见。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="podcast" scheme="https://wistbean.github.io/categories/podcast/"/>
    
      <category term="肯定会电台" scheme="https://wistbean.github.io/categories/podcast/%E8%82%AF%E5%AE%9A%E4%BC%9A%E7%94%B5%E5%8F%B0/"/>
    
    
      <category term="肯定会电台" scheme="https://wistbean.github.io/tags/%E8%82%AF%E5%AE%9A%E4%BC%9A%E7%94%B5%E5%8F%B0/"/>
    
  </entry>
  
  <entry>
    <title>搬瓦工19美元服务器没货下架了，但提供了15美元1000GB的vps</title>
    <link href="https://wistbean.github.io/banwagong-15-1000G-vps.html"/>
    <id>https://wistbean.github.io/banwagong-15-1000G-vps.html</id>
    <published>2018-12-05T15:07:57.000Z</published>
    <updated>2019-03-01T07:33:12.895Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="搬瓦工19美元的服务器没货"><a href="#搬瓦工19美元的服务器没货" class="headerlink" title="搬瓦工19美元的服务器没货"></a>搬瓦工19美元的服务器没货</h1><p>搬瓦工 vps 的性价比高，很多人都购买了最便宜的配置，19美元/年，搬瓦工具体配置如下，可惜的是现在已经没有货，下架了。</p><table><thead><tr><th><a href="https://www.bwh88.net/aff.php?aff=32874" target="_blank" rel="noopener">搬瓦工配置</a></th><th>搬瓦工费用</th><th>优惠链接</th></tr></thead><tbody><tr><td><em>10G KVM – PROMO</em> <br>  SSD硬盘: 10 GB RAID-10 <br> RAM内存: 512 MB <br> CPU处理器: 1x Intel Xeon <br> Transfer流量: 500 GB/月 <br> 连接速度: 1 Gigabit <br> Multiple locations</td><td>$19.99/年</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=43" target="_blank" rel="noopener">点击进入</a></td></tr></tbody></table><p>点击<a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=43" target="_blank" rel="noopener">搬瓦工19美元/年</a>可以发现已经断货：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/bwg-out-of-stock.png" alt="搬瓦工断货" title="">                </div>                <div class="image-caption">搬瓦工断货</div>            </figure><h1 id="搬瓦工15美元1000G"><a href="#搬瓦工15美元1000G" class="headerlink" title="搬瓦工15美元1000G"></a>搬瓦工15美元1000G</h1><p>不过搬瓦工提供了另外两种优惠，分别是「网络星期一购物活动优惠」和「黑色星期五购物活动」。有点像双 11 了活动了。具体提供了如下的配置：</p><table><thead><tr><th>搬瓦工配置</th><th>搬瓦工费用</th><th>优惠链接</th></tr></thead><tbody><tr><td><em>2018 网络星期一 Special V3 </em> <br>  SSD硬盘: 40 GB RAID-10 <br> RAM内存: 1024 MB <br> CPU处理器: 2x Intel Xeon <br> Transfer流量: 1000 GB/月 <br> 连接速度: 1 Gigabit <br> Multiple locations</td><td>$15.99 /半年</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=84" target="_blank" rel="noopener">点击进入</a></td></tr><tr><td><em>2018 黑色星期五 Special V3 CN2 </em> <br>  SSD硬盘: 20 GB RAID-10 <br> RAM内存: 512 MB <br> CPU处理器: 1x Intel Xeon <br> Transfer流量: 1 TB/月 <br> 连接速度: 1 Gigabit <br> 洛杉矶，CN2路线，使用中国的直线路线，速度加快</td><td>$27.60 /年</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=82" target="_blank" rel="noopener">点击进入</a></td></tr></tbody></table><p>搬瓦工15美元1000G配置：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/bwg-2018.png" alt="搬瓦工优惠" title="">                </div>                <div class="image-caption">搬瓦工优惠</div>            </figure><blockquote><p>最新优惠更新</p></blockquote><table><thead><tr><th>搬瓦工配置</th><th>搬瓦工费用</th><th>优惠链接</th></tr></thead><tbody><tr><td><em>SPECIAL 40G KVM PROMO V3 - LOS ANGELES - CN2  </em> <br>  SSD硬盘: 40  GB RAID-10 <br> RAM内存: 2048   MB <br> CPU处理器: 1x Intel Xeon <br> Transfer流量: 2000  GB/月 <br> 连接速度: 1 Gigabit <br> 洛杉矶机房，CN2路线，使用中国的直线路线，速度加快</td><td>$27.99/季</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=58" target="_blank" rel="noopener">点击进入</a></td></tr><tr><td><em>SPECIAL 20G KVM PROMO V3 - LOS ANGELES - CN2 </em> <br>  SSD硬盘: 20 GB RAID-10 <br> RAM内存: 1024  MB <br> CPU处理器: 1x Intel Xeon <br> Transfer流量: 1000  GB/月 <br> 连接速度: 1 Gigabit <br> 洛杉矶机房，CN2路线，使用中国的直线路线，速度加快</td><td>$29.99 /半年</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=57" target="_blank" rel="noopener">点击进入</a></td></tr><tr><td><em>80G KVM – PROMO</em> <br> SSD硬盘: 80 GB RAID-10<br>RAM内存: 4 GB<br>CPU处理器: 4x Intel Xeon<br>Transfer流量: 3 TB/mo<br>连接速度: 1 Gigabit<br>Multiple locations</td><td>$19.99/月</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=46" target="_blank" rel="noopener">点击进入</a></td></tr><tr><td><em>20G KVM – PROMO</em> <br> SSD硬盘: 20 GB RAID-10 <br>RAM内存: 1024 MB <br>CPU处理器: 2x Intel Xeon <br>Transfer流量: 1 TB/mo <br>连接速度: 1 Gigabit <br>Multiple locations</td><td>$49.99/年</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=44" target="_blank" rel="noopener">点击进入</a></td></tr><tr><td><em>40G KVM – PROMO</em> <br> SSD硬盘: 40 GB RAID-10 <br>RAM内存: 2 GB <br>CPU处理器: 3x Intel Xeon <br>Transfer流量: 2 TB/mo <br>连接速度: 1 Gigabit <br>Multiple locations</td><td>$99.99/年</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=45" target="_blank" rel="noopener">点击进入</a></td></tr><tr><td><em>160G KVM – PROMO</em> <br> SSD硬盘: 160 GB RAID-10<br>RAM内存: 8 GB<br>CPU处理器: 5x Intel Xeon<br>Transfer流量: 4 TB/mo<br>连接速度: 1 Gigabit<br>Multiple locations</td><td>$39.99/月</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=47" target="_blank" rel="noopener">点击进入</a></td></tr><tr><td><em>3200G KVM – PROMO</em> <br> SSD硬盘: 320 GB RAID-10<br>RAM内存: 16 GB<br>CPU处理器: 6x Intel Xeon<br>Transfer流量: 5 TB/mo<br>连接速度: 1 Gigabit<br>Multiple locations</td><td>$79.99/月</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=48" target="_blank" rel="noopener">点击进入</a></td></tr></tbody></table><p>获取优惠码的方式：<a href="https://wistbean.github.io/banwagong-coupon.html">搬瓦工优惠码</a></p><h1 id="搬瓦工相关"><a href="#搬瓦工相关" class="headerlink" title="搬瓦工相关"></a>搬瓦工相关</h1><ul><li><a href="https://wistbean.github.io/banwagong-vpn.html">使用搬瓦工快速搭建自己的VPN</a></li><li><a href="https://wistbean.github.io/use-banwagong.html">优惠购买搬瓦工搭建自己的VPN并开启BBR加速访问</a></li><li><a href="https://wistbean.github.io/categories/vpn/%E6%90%AC%E7%93%A6%E5%B7%A5/">CentOS快速搭建一个属于自己的IPsec/L2TP VPN</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="搬瓦工" scheme="https://wistbean.github.io/categories/%E6%90%AC%E7%93%A6%E5%B7%A5/"/>
    
      <category term="vps" scheme="https://wistbean.github.io/categories/%E6%90%AC%E7%93%A6%E5%B7%A5/vps/"/>
    
    
      <category term="搬瓦工" scheme="https://wistbean.github.io/tags/%E6%90%AC%E7%93%A6%E5%B7%A5/"/>
    
      <category term="vps" scheme="https://wistbean.github.io/tags/vps/"/>
    
      <category term="搬瓦工优惠" scheme="https://wistbean.github.io/tags/%E6%90%AC%E7%93%A6%E5%B7%A5%E4%BC%98%E6%83%A0/"/>
    
  </entry>
  
  <entry>
    <title>「4-4」SpringMVC整合富文本编辑器百度UEditor的使用</title>
    <link href="https://wistbean.github.io/java-ssm-4-4.html"/>
    <id>https://wistbean.github.io/java-ssm-4-4.html</id>
    <published>2018-12-03T09:28:01.000Z</published>
    <updated>2019-02-23T17:53:55.842Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="SSM视频教程第4-4节：SpringMVC整合富文本编辑器百度UEditor的使用"><a href="#SSM视频教程第4-4节：SpringMVC整合富文本编辑器百度UEditor的使用" class="headerlink" title="SSM视频教程第4-4节：SpringMVC整合富文本编辑器百度UEditor的使用"></a>SSM视频教程第4-4节：SpringMVC整合富文本编辑器百度UEditor的使用</h1><iframe src="//player.bilibili.com/player.html?aid=37412776&cid=65056595&page=1" width="100%" height="436" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><h1 id="富文本编辑器UEditor介绍"><a href="#富文本编辑器UEditor介绍" class="headerlink" title="富文本编辑器UEditor介绍"></a>富文本编辑器UEditor介绍</h1><p><a href="https://ueditor.baidu.com/website/index.html" target="_blank" rel="noopener">百度UEditor</a>的介绍是：由百度web前端研发部开发所见即所得富文本web编辑器，具有轻量，可定制，注重用户体验等特点，开源基于MIT协议，允许自由使用和修改代码.</p><p>百度 UEditor 最新版的下载地址：<a href="https://ueditor.baidu.com/build/build_down.php?n=ueditor&amp;v=1_4_3_3-utf8-jsp" target="_blank" rel="noopener">1.4.3.3 Jsp 版本</a></p><p>下载之后解压可以看到一个demo，里面有js文件和一些所需要的lib：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/ueditor1.png" alt="UEditor" title="">                </div>                <div class="image-caption">UEditor</div>            </figure><p>打开 index.html 文件可以看到这个富文本编辑器还是挺丰富的，可以很方便获取到我们要的 HTML 源码：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/ueditor2.png" alt="UEditor demo" title="">                </div>                <div class="image-caption">UEditor demo</div>            </figure><p>那么接下来我们就在我们的 <a href="https://github.com/wistbean/manong-ssm" target="_blank" rel="noopener">manong</a> 项目中使用这个富文本编辑器吧。</p><h1 id="在项目中使用UEditor"><a href="#在项目中使用UEditor" class="headerlink" title="在项目中使用UEditor"></a>在项目中使用UEditor</h1><h2 id="将所需的-jar-包安装到-maven-仓库中"><a href="#将所需的-jar-包安装到-maven-仓库中" class="headerlink" title="将所需的 jar 包安装到 maven 仓库中"></a>将所需的 jar 包安装到 maven 仓库中</h2><p>安装json的jar包</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn install:install-file -Dfile=C:\Users\Administrator\Desktop\utf8-jsp\jsp\lib\json.jar -DgroupId=com.json -DartifactId=json -Dversion=1.1 -Dpackaging=jar</span><br></pre></td></tr></table></figure><p>安装 ueditor 的jar包<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn install:install-file -Dfile=C:\Users\Administrator\Desktop\utf8-jsp\jsp\lib\ueditor-1.1.2.jar -DgroupId=com.baidu -DartifactId=ueditor -Dversion=1.1.2 -Dpackaging=jar</span><br></pre></td></tr></table></figure></p><h2 id="将-ueditor-所需的文件复制到项目中"><a href="#将-ueditor-所需的文件复制到项目中" class="headerlink" title="将 ueditor 所需的文件复制到项目中"></a>将 ueditor 所需的文件复制到项目中</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/ueditor3.png" alt="UEditor demo" title="">                </div>                <div class="image-caption">UEditor demo</div>            </figure><h2 id="后端ueditor文件的上传"><a href="#后端ueditor文件的上传" class="headerlink" title="后端ueditor文件的上传"></a>后端ueditor文件的上传</h2><p>遇到上传问题：No mapping found for HTTP request with URI ，导致访问上传的图片和一些静态资源 404 。</p><p>解决方式，在SpringMVC配置文件中添加：<code>&lt;mvc:default-servlet-handler/&gt;</code></p><blockquote><p>default-servlet-handler简介：<br> 它会对进入 DispatcherServlet 的请求进行筛选，如果发现是没有经过映射处理的请求，将该请求交由 WEB 应用服务器默认的Servlet处理。 如果不是静态资源的请求， 才由 DispatcherServlet 继续处理 ，一般 WEB 应用服务器默认的 Servlet 的名称都是 default。</p></blockquote><h1 id="SSM视频教程目录"><a href="#SSM视频教程目录" class="headerlink" title="SSM视频教程目录"></a>SSM视频教程目录</h1><ul><li><a href="https://wistbean.github.io/java-ssm-video.html#SSM%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B%E7%9B%AE%E5%BD%95">SSM视频教程目录</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Java" scheme="https://wistbean.github.io/categories/Java/"/>
    
      <category term="Java SSM视频教程" scheme="https://wistbean.github.io/categories/Java/Java-SSM%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="教程" scheme="https://wistbean.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Nginx" scheme="https://wistbean.github.io/tags/Nginx/"/>
    
      <category term="Java" scheme="https://wistbean.github.io/tags/Java/"/>
    
      <category term="Intellij IDEA" scheme="https://wistbean.github.io/tags/Intellij-IDEA/"/>
    
      <category term="Java视频教程" scheme="https://wistbean.github.io/tags/Java%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/"/>
    
      <category term="项目实战" scheme="https://wistbean.github.io/tags/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/"/>
    
      <category term="分布式" scheme="https://wistbean.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
      <category term="SSM" scheme="https://wistbean.github.io/tags/SSM/"/>
    
      <category term="码农商城" scheme="https://wistbean.github.io/tags/%E7%A0%81%E5%86%9C%E5%95%86%E5%9F%8E/"/>
    
      <category term="EasyUI" scheme="https://wistbean.github.io/tags/EasyUI/"/>
    
      <category term="FastDFS" scheme="https://wistbean.github.io/tags/FastDFS/"/>
    
      <category term="UEditor" scheme="https://wistbean.github.io/tags/UEditor/"/>
    
      <category term="富文本编辑器" scheme="https://wistbean.github.io/tags/%E5%AF%8C%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>使用vultr(vps)搭建ss并开启BBR快速上网教程 超简单10分钟搞定</title>
    <link href="https://wistbean.github.io/vultr-vps-bbr-ss.html"/>
    <id>https://wistbean.github.io/vultr-vps-bbr-ss.html</id>
    <published>2018-11-30T18:40:36.000Z</published>
    <updated>2019-01-17T07:26:37.912Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>如果你想要查询一些权威的资料，上 Google 搜索有用的内容，超流畅 1080p 高清观看Youtube，畅游全网，而且完全拥有自己的服务器，那么本文将从购买vultr vps，到搭建属于你自己的 ss(Shadowrocks) 服务器，并且开启 BBR 加速上网，10分钟几个步骤轻松搞定。</p><p>首先我们需要购买一台境外的服务器，接着我们在这台云服务器里面安装代理服务，那么以后我们上网的时候就可以通过它来中转，轻松畅快的畅游全网了。</p><h1 id="优惠购买vultr"><a href="#优惠购买vultr" class="headerlink" title="优惠购买vultr"></a>优惠购买vultr</h1><p>在使用了<a href="https://wistbean.github.io/cloud-server.html">一些服务器之后</a>，我觉得 <a href="https://www.vultr.com/?ref=7772384-4F" target="_blank" rel="noopener">vultr</a> 的性价比超高，最低 $2.5/月 ，就可以拥有一台 1TB 月流量的服务器了，根本用不完。</p><p>而且现在 <a href="https://www.vultr.com/?ref=7772384-4F" target="_blank" rel="noopener">vultr</a> 优惠力度很大，<strong>充值 10 美元送 10 美元</strong>。</p><h2 id="注册vultr"><a href="#注册vultr" class="headerlink" title="注册vultr"></a>注册vultr</h2><p>点击 <a href="https://www.vultr.com/?ref=7772384-4F" target="_blank" rel="noopener">vultr官网</a> 进行注册：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/vultr-register.png" alt="注册vultr" title="">                </div>                <div class="image-caption">注册vultr</div>            </figure><p>在这里输入你的邮箱和密码，接着点击按钮「Create Account」创建账号，然后 vultr 会给你的注册邮箱发送一份验证邮件，激活就好了。</p><p>接着就可以登录 vultr 官网了：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/vultr-login.png" alt="登录vultr" title="">                </div>                <div class="image-caption">登录vultr</div>            </figure><h2 id="vultr-购买流程"><a href="#vultr-购买流程" class="headerlink" title="vultr 购买流程"></a>vultr 购买流程</h2><p>vultr 现在有 16 个境外节点，选择一个离你最近的就好了。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/vultr-location.png" alt="登录vultr" title="">                </div>                <div class="image-caption">登录vultr</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/vultr-buy.gif" alt="购买vultr" title="">                </div>                <div class="image-caption">购买vultr</div>            </figure><p>登录进去之后选择左边的 billing 的菜单进行充值，vultr提供的支付方式简直完美，支持信用卡，比特币，paypal，支付宝，微信支付，在这里可以进行充值支付。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/vultr00.png" alt="vultr充值" title="">                </div>                <div class="image-caption">vultr充值</div>            </figure><p>充值完成之后，就可以左侧的 Sevrers 菜单，接着可以点击 <code>deploy one</code> 或者右侧的 + 号来选购你要的服务器：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/vultr01.png" alt="vultr充值" title="">                </div>                <div class="image-caption">vultr充值</div>            </figure><h3 id="选择服务器的机房位置，一般来说离你越近越好，速度会快那么一丢丢："><a href="#选择服务器的机房位置，一般来说离你越近越好，速度会快那么一丢丢：" class="headerlink" title="选择服务器的机房位置，一般来说离你越近越好，速度会快那么一丢丢："></a>选择服务器的机房位置，一般来说离你越近越好，速度会快那么一丢丢：</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/vultr02.png" alt="vultr服务器位置" title="">                </div>                <div class="image-caption">vultr服务器位置</div>            </figure><h3 id="选择服务器的系统类型，选择-CentOS-版本："><a href="#选择服务器的系统类型，选择-CentOS-版本：" class="headerlink" title="选择服务器的系统类型，选择 CentOS 版本："></a>选择服务器的系统类型，选择 CentOS 版本：</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/vultr03.png" alt="vultr系统类型" title="">                </div>                <div class="image-caption">vultr系统类型</div>            </figure><h3 id="选择服务器的价格和具体配置，自己用的话选最低的就够用了："><a href="#选择服务器的价格和具体配置，自己用的话选最低的就够用了：" class="headerlink" title="选择服务器的价格和具体配置，自己用的话选最低的就够用了："></a>选择服务器的价格和具体配置，自己用的话选最低的就够用了：</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/vultr04.png" alt="vultr配置" title="">                </div>                <div class="image-caption">vultr配置</div>            </figure><h3 id="确认购买"><a href="#确认购买" class="headerlink" title="确认购买"></a>确认购买</h3><p>其它步骤可以忽略，然后点击右下角的 Deploy Now：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/vultr05.png" alt="vultr" title="">                </div>                <div class="image-caption">vultr</div>            </figure><h3 id="拥有一台服务器"><a href="#拥有一台服务器" class="headerlink" title="拥有一台服务器"></a>拥有一台服务器</h3><p>点击之后你就拥有一台属于你自己的服务器了：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/vultr06.png" alt="vultr" title="">                </div>                <div class="image-caption">vultr</div>            </figure><p>点击你的服务器，进去之后你就可以看到你的服务器的ip地址和账号密码了：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/vultr07.png" alt="vultr" title="">                </div>                <div class="image-caption">vultr</div>            </figure><p>以上信息等会用来从你的电脑连接到你的服务器上。</p><h1 id="使用vultr搭建ss服务器"><a href="#使用vultr搭建ss服务器" class="headerlink" title="使用vultr搭建ss服务器"></a>使用vultr搭建ss服务器</h1><h2 id="下载Linux连接工具"><a href="#下载Linux连接工具" class="headerlink" title="下载Linux连接工具"></a>下载Linux连接工具</h2><p>需要在你的电脑连接到你的服务器，那么就需要连接工具，连接工具有很多个，根据你的需要，以下随意下载一个连接工具即可：</p><ul><li><a href="https://www.ssh.com/a/putty-0.70-installer.msi" target="_blank" rel="noopener">PUTTY Windows版本下载</a></li><li><a href="https://www.ssh.com/ssh/putty/mac/" target="_blank" rel="noopener">PUTTY MAC版本下载</a></li><li><a href="https://pan.baidu.com/s/11W4WHjCjmiNw6einQNrcPg" target="_blank" rel="noopener">SecureCRT</a> ,提取码：tyux</li></ul><p>接着打开连接工具，然后输入你刚刚购买的服务器 ip 地址，账户名，和密码就可以连接了。接下来就可以操作你的服务器了。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/linux-panel.png" alt="服务器CentOS系统" title="">                </div>                <div class="image-caption">服务器CentOS系统</div>            </figure><h2 id="开始搭建ss"><a href="#开始搭建ss" class="headerlink" title="开始搭建ss"></a>开始搭建ss</h2><p>连接到你的 vultr 服务器之后，接下来就可以使用几个命令让你快速搭建一个属于自己的 ss 服务器：</p><h3 id="输入以下命令，然后回车："><a href="#输入以下命令，然后回车：" class="headerlink" title="输入以下命令，然后回车："></a>输入以下命令，然后回车：</h3><pre><code>yum install wget</code></pre><h3 id="接着执行安装shadowsocks："><a href="#接着执行安装shadowsocks：" class="headerlink" title="接着执行安装shadowsocks："></a>接着执行安装shadowsocks：</h3><pre><code>wget –no-check-certificate -O shadowsocks.sh https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks.sh</code></pre><h3 id="获取-shadowsocks-sh-读取权限："><a href="#获取-shadowsocks-sh-读取权限：" class="headerlink" title="获取 shadowsocks.sh 读取权限："></a>获取 shadowsocks.sh 读取权限：</h3><pre><code>chmod +x shadowsocks.sh</code></pre><h3 id="设置你的-ss-密码和端口号："><a href="#设置你的-ss-密码和端口号：" class="headerlink" title="设置你的 ss 密码和端口号："></a>设置你的 ss 密码和端口号：</h3><p>输入<code>./shadowsocks.sh 2&gt;&amp;1 | tee shadowsocks.log</code>后就可以设置密码和端口号了：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/ss1.png" alt="设置密码" title="">                </div>                <div class="image-caption">设置密码</div>            </figure><h3 id="选择加密方式"><a href="#选择加密方式" class="headerlink" title="选择加密方式"></a>选择加密方式</h3><p>设置完密码和端口号之后，我们选择加密方式，这里选择 7 ，使用<code>aes-256-cfb</code>的加密模式：<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/ss2.png" alt="vultr ss服务器" title="">                </div>                <div class="image-caption">vultr ss服务器</div>            </figure><br>接着按任意键进行安装。</p><h3 id="安装ss完成"><a href="#安装ss完成" class="headerlink" title="安装ss完成"></a>安装ss完成</h3><p>等一会之后，就安装完成了，它会给你显示你需要连接 vpn 的信息：<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/ss3.png" alt="vultr ss服务器" title="">                </div>                <div class="image-caption">vultr ss服务器</div>            </figure><br>可以看到需要连接 ss 的 ip地址，密码，端口，和加密方式。</p><p>搞定，将这些信息保存起来，那么这时候你就可以使用它们来科学上网啦。</p><h1 id="开始使用vultr的ss"><a href="#开始使用vultr的ss" class="headerlink" title="开始使用vultr的ss"></a>开始使用vultr的ss</h1><h2 id="windows使用Shadowsocks"><a href="#windows使用Shadowsocks" class="headerlink" title="windows使用Shadowsocks"></a>windows使用Shadowsocks</h2><p>windows点击下载：<a href="https://pan.baidu.com/s/19m0AfTkPDSRj0bfYrGpbIg" target="_blank" rel="noopener">Shadowsocks windows客户端</a></p><p>打开 Shadowsocks 客户端，输入ip地址，密码，端口，和加密方式。接着点击确定，<strong>右下角会有个小飞机按钮，右键–&gt;启动代理</strong>。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/ss4.png" alt="vultr的ss" title="">                </div>                <div class="image-caption">vultr的ss</div>            </figure><p>这时候就可以科学上网了。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/vpn18.png" alt="google" title="">                </div>                <div class="image-caption">google</div>            </figure><h2 id="Android使用Shadowsocks"><a href="#Android使用Shadowsocks" class="headerlink" title="Android使用Shadowsocks"></a>Android使用Shadowsocks</h2><p>Android点击下载：<a href="https://pan.baidu.com/s/1coAkZn-GuYHu5eIKaHECxA" target="_blank" rel="noopener">Shadowsocks Android客户端</a></p><p>打开apk安装，接着打开APP，输入ip地址，密码，端口，和加密方式。即可科学上网。</p><h2 id="iPhone使用Shadowsocks"><a href="#iPhone使用Shadowsocks" class="headerlink" title="iPhone使用Shadowsocks"></a>iPhone使用Shadowsocks</h2><p>iPhone要下载的app需要在appstore下载，但是需要用美区账号才能下载，而且这个APP需要钱。在这里提供一种解决方案，就是可以再搭建一个<a href="https://wistbean.github.io/ipsec,l2tp_vpn.html#%E4%BD%BF%E7%94%A8-IPsec-L2TP-%E8%84%9A%E6%9C%AC%E6%90%AD%E5%BB%BA">IPsec/L2TP VPN</a>,专门给你的iPhone使用。</p><p>接着就可以上外网了：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/pic8.png" alt="google" title="">                </div>                <div class="image-caption">google</div>            </figure><p>不过速度并不是快到飞起来，所以接下来就可以使用 BBR 加速了。也很简单，几个命令就搞定了。</p><h1 id="vultr使用BBR加速上网"><a href="#vultr使用BBR加速上网" class="headerlink" title="vultr使用BBR加速上网"></a>vultr使用BBR加速上网</h1><h2 id="安装-BBR"><a href="#安装-BBR" class="headerlink" title="安装 BBR"></a>安装 BBR</h2><pre><code>wget --no-check-certificate https://github.com/teddysun/across/raw/master/bbr.sh</code></pre><h2 id="获取读写权限"><a href="#获取读写权限" class="headerlink" title="获取读写权限"></a>获取读写权限</h2><pre><code>chmod +x bbr.sh</code></pre><h2 id="启动BBR安装"><a href="#启动BBR安装" class="headerlink" title="启动BBR安装"></a>启动BBR安装</h2><pre><code>./bbr.sh</code></pre><p>接着按任意键，开始安装，坐等一会。安装完成一会之后它会提示我们是否重新启动vps，我们输入 y 确定重启服务器。</p><p>重新启动之后，输入 <code>lsmod | grep bbr</code> 如果看到 tcp_bbr 就说明 BBR 已经启动了。</p><p>再访问一下 Youtube，1080p 超高清，秒开，很顺畅不卡顿，超爽！</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/ss7.png" alt="youtube" title="">                </div>                <div class="image-caption">youtube</div>            </figure><hr><h1 id="相关"><a href="#相关" class="headerlink" title="相关"></a>相关</h1><ul><li><a href="https://wistbean.github.io/banwagong-ss.html">搬瓦工快速手动搭建SS(Shadowsocks)服务器简明详细教程</a></li><li><a href="https://wistbean.github.io/cloud-server.html">我用了十几台云服务器VPS后，告诉你哪家云服务产商性价比高,性能稳定</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="vpn" scheme="https://wistbean.github.io/categories/vpn/"/>
    
      <category term="vultr" scheme="https://wistbean.github.io/categories/vpn/vultr/"/>
    
    
      <category term="互联网" scheme="https://wistbean.github.io/tags/%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
      <category term="vultr" scheme="https://wistbean.github.io/tags/vultr/"/>
    
      <category term="优惠码" scheme="https://wistbean.github.io/tags/%E4%BC%98%E6%83%A0%E7%A0%81/"/>
    
      <category term="vpn" scheme="https://wistbean.github.io/tags/vpn/"/>
    
      <category term="搭建ss" scheme="https://wistbean.github.io/tags/%E6%90%AD%E5%BB%BAss/"/>
    
  </entry>
  
  <entry>
    <title>2018最新12月vultr vps优惠送25美元</title>
    <link href="https://wistbean.github.io/vultr-25-December-vps-coupon.html"/>
    <id>https://wistbean.github.io/vultr-25-December-vps-coupon.html</id>
    <published>2018-11-30T16:40:36.000Z</published>
    <updated>2019-02-23T17:56:27.989Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="vultr优惠25美元"><a href="#vultr优惠25美元" class="headerlink" title="vultr优惠25美元"></a>vultr优惠25美元</h1><p>vultr vps的优惠力度算是最高的了吧，vultr最常使用的方式就是<a href="https://wistbean.github.io/vultr-vps-bbr-ss.html">搭建一个属于自己的梯子</a>,畅游全网，1080p观看Youtube无压力了。</p><p>本次12月的这次优惠活动参与条件如下：</p><ul><li>仅限最新的用户来参加。</li><li>充值$10，支持的充值方式有paypal，支付宝，微信，比特币，信用卡。</li><li>注册后使用一个月以上。</li></ul><p>点击注册<a href="https://www.vultr.com/?ref=7772384-4F" target="_blank" rel="noopener">vultr账户</a></p><p>教程：<a href="http://www.wistbean.com/vultr-vps-bbr-ss.html#vultr-%E8%B4%AD%E4%B9%B0%E6%B5%81%E7%A8%8B" target="_blank" rel="noopener">vultr购买教程</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/vultr-register.png" alt="vultr官网" title="">                </div>                <div class="image-caption">vultr官网</div>            </figure><h1 id="相关"><a href="#相关" class="headerlink" title="相关"></a>相关</h1><ul><li><a href="https://wistbean.github.io/cloud-server.html">推荐|我用了十几台云服务器VPS后，告诉你哪家云服务产商性价比高,性能稳定</a></li><li><a href="https://wistbean.github.io/vultr-vps-bbr-ss.html">使用vultr(vps)搭建ss并开启BBR快速上网教程 超简单10分钟搞定</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="vultr" scheme="https://wistbean.github.io/categories/vultr/"/>
    
      <category term="vpn" scheme="https://wistbean.github.io/categories/vultr/vpn/"/>
    
    
      <category term="互联网" scheme="https://wistbean.github.io/tags/%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
      <category term="vultr" scheme="https://wistbean.github.io/tags/vultr/"/>
    
      <category term="vpn" scheme="https://wistbean.github.io/tags/vpn/"/>
    
      <category term="搭建ss" scheme="https://wistbean.github.io/tags/%E6%90%AD%E5%BB%BAss/"/>
    
      <category term="vultr优惠码" scheme="https://wistbean.github.io/tags/vultr%E4%BC%98%E6%83%A0%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>到底怎样才算是学会知识了呢</title>
    <link href="https://wistbean.github.io/FEYNMAN-LEARNING.html"/>
    <id>https://wistbean.github.io/FEYNMAN-LEARNING.html</id>
    <published>2018-11-30T07:47:57.000Z</published>
    <updated>2018-12-27T13:46:51.408Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>        <div id="aplayer-FOlBjMBf" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-FOlBjMBf"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "到底怎样才算是学会知识了呢",              author: "wistbean",              url: "/podcast/53.mp3",              pic: "",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><p>在学校的时候，老师给我们传授知识，解释书本上那些晦涩难懂的概念。但很少有老师告诉我们书本之外的东西。例如：思维，认知，理财，学习方法。</p><p>不过这没什么好抱怨的，因为很多东西，都是需要靠自己的，对吗？</p><p>今天想跟你探讨的话题是：到底怎样才算是学会知识了呢？</p><p>我们在学习某一知识点的时候，一般有两个层面：</p><blockquote><p>1.表面层面学习<br>2.深度层面学习</p></blockquote><p>举个例子，我们在学习「面向对象」这个知识的时候，我们知道，对象是对问题描述的一种解决方案，我们可以将问题抽取成对象的集合，这样我们可以通过对象，来使用具体的方法。面向对象具有封装，继承，多态等特点。</p><p>我们知道了这些，只是表面。</p><p>如果你能够清楚的知道封装有什么好处？继承是为了什么？怎么用代码体现出来？对象的生命周期怎么样的？</p><p>这叫深度学习。</p><p>我们在面试的时候，其实也是在了解，你学习的深度，最直接的方式就是让你上机，让你实现一个关于某知识点的功能。</p><p>表面学习，更多的是为了吹牛逼，深度学习，才是利己。</p><p>那么现在我们要讨论的就是：<strong>怎样才算是深度学习到了知识了呢？</strong></p><p>在这里呢，给大家介绍我在使用，觉得有用的学习法，它的名字叫做费曼学习法。主要来说，有这么几个步骤：</p><blockquote><ol><li>认真的学习一个新的知识点</li><li>学完之后，将你学到的知识点用通俗易懂的语言讲给别人听，也可以写出来。</li><li>发现问题，别人听不懂的地方，自己卡壳的地方，这些都是自己的弱点，都记下来，重新回去学习这些弱点。直到自己能够清晰通俗的讲出来。</li><li>重复以上三个步骤</li></ol></blockquote><p>举个例子，比如我学习<a href="https://wistbean.github.io/java-ssm-4-1.html">文件服务器FastDFS这个开源项目</a>，那么一开始就认真学习，知道它是什么玩意，它的主要功能，工作原理。</p><p>学完之后我就会输出，其实输出的方式有很多种，跟别人讲，写博客都可以。</p><p>当我发现，我讲的好像不够易懂，或者卡壳了，那就说明，我对它还没有真正的理解。怎么办呢？只能滚回去继续研究。直到了然于胸。所以有时候有朋友觉得我讲的东西很容易理解，其实背后都是我在「重复以上三个步骤」。</p><p>这种学习方法的好处在于我们可以真正的了解自己学到的东西，而不至于停留在「好像懂了，又好像不懂的情况」，也锻炼了自己独立思考能力。当下次学习新的知识的时候，也会更加容易对知识加以应用。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="podcast" scheme="https://wistbean.github.io/categories/podcast/"/>
    
      <category term="肯定会电台" scheme="https://wistbean.github.io/categories/podcast/%E8%82%AF%E5%AE%9A%E4%BC%9A%E7%94%B5%E5%8F%B0/"/>
    
      <category term="个人提升" scheme="https://wistbean.github.io/categories/podcast/%E8%82%AF%E5%AE%9A%E4%BC%9A%E7%94%B5%E5%8F%B0/%E4%B8%AA%E4%BA%BA%E6%8F%90%E5%8D%87/"/>
    
    
      <category term="个人提升" scheme="https://wistbean.github.io/tags/%E4%B8%AA%E4%BA%BA%E6%8F%90%E5%8D%87/"/>
    
      <category term="学习方法" scheme="https://wistbean.github.io/tags/%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>「4-3」SpringMVC整合FastDFS实现文件上传下载</title>
    <link href="https://wistbean.github.io/java-ssm-4-3.html"/>
    <id>https://wistbean.github.io/java-ssm-4-3.html</id>
    <published>2018-11-28T13:31:40.000Z</published>
    <updated>2019-02-23T17:53:55.207Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="SSM视频教程第4-3节：SpringMVC整合FastDFS实现文件上传下载"><a href="#SSM视频教程第4-3节：SpringMVC整合FastDFS实现文件上传下载" class="headerlink" title="SSM视频教程第4-3节：SpringMVC整合FastDFS实现文件上传下载"></a>SSM视频教程第4-3节：SpringMVC整合FastDFS实现文件上传下载</h1><iframe src="//player.bilibili.com/player.html?aid=37024449&cid=65056595&page=1" width="100%" height="436" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><p>在<a href="/java-ssm-4-1.html">Java文件服务器 FastDFS 的搭建教程</a>和<a href="/java-ssm-4-1.html">使用 Nginx 访问 FastDSF 文件服务器</a>中我们已经在 <a href="https://wistbean.github.io/use-banwagong.html">搬瓦工Linux</a> 上安装部署了 fastdfs，并且可以用 Nginx 访问了。</p><p>那么接下来就在我们的项目中使用 fastdfs 吧。</p><h1 id="下载fastdfs-client-java"><a href="#下载fastdfs-client-java" class="headerlink" title="下载fastdfs-client-java"></a>下载fastdfs-client-java</h1><ul><li><p>fastdfs-client-java的项目地址：<a href="https://github.com/happyfish100/fastdfs-client-java" target="_blank" rel="noopener">https://github.com/happyfish100/fastdfs-client-java</a></p></li><li><p>fastdfs-client-java的Git地址：<a href="https://github.com/happyfish100/fastdfs-client-java.git" target="_blank" rel="noopener">https://github.com/happyfish100/fastdfs-client-java.git</a></p></li></ul><h1 id="安装依赖fastdfs-client-java"><a href="#安装依赖fastdfs-client-java" class="headerlink" title="安装依赖fastdfs-client-java"></a>安装依赖fastdfs-client-java</h1><p>使用 maven 将 <a href="https://github.com/happyfish100/fastdfs-client-java" target="_blank" rel="noopener">fastdfs-client-java</a> 安装到 maven 仓库之后进行依赖。</p><h1 id="创建-fastdfs-客户端"><a href="#创建-fastdfs-客户端" class="headerlink" title="创建 fastdfs 客户端"></a>创建 fastdfs 客户端</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FastDFSClient</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> StorageClient1 storageClient1 = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 获取配置文件</span></span><br><span class="line">            String classPath = <span class="keyword">new</span> File(FastDFSClient.class.getResource(<span class="string">"/"</span>).getFile()).getCanonicalPath();</span><br><span class="line">            String CONF_FILENAME = classPath + File.separator + <span class="string">"conf"</span> + File.separator + <span class="string">"fdfs_client.conf"</span>;</span><br><span class="line">            ClientGlobal.init(CONF_FILENAME);</span><br><span class="line">            <span class="comment">// 获取触发器</span></span><br><span class="line">            TrackerClient trackerClient = <span class="keyword">new</span> TrackerClient(ClientGlobal.g_tracker_group);</span><br><span class="line">            TrackerServer trackerServer = trackerClient.getConnection();</span><br><span class="line">            <span class="comment">// 获取存储服务器</span></span><br><span class="line">            StorageServer storageServer = trackerClient.getStoreStorage(trackerServer);</span><br><span class="line">            storageClient1 = <span class="keyword">new</span> StorageClient1(trackerServer, storageServer);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            System.out.println(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fis      文件输入流</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fileName 文件名称</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">uploadFile</span><span class="params">(InputStream fis, String fileName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            NameValuePair[] meta_list = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//将输入流写入file_buff数组</span></span><br><span class="line">            <span class="keyword">byte</span>[] file_buff = <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">if</span> (fis != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">int</span> len = fis.available();</span><br><span class="line">                file_buff = <span class="keyword">new</span> <span class="keyword">byte</span>[len];</span><br><span class="line">                fis.read(file_buff);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            String fileid = storageClient1.upload_file1(file_buff, getFileExt(fileName), meta_list);</span><br><span class="line">            <span class="keyword">return</span> fileid;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception ex) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (fis != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    fis.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    System.out.println(e);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">getFileExt</span><span class="params">(String fileName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isBlank(fileName) || !fileName.contains(<span class="string">"."</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> fileName.substring(fileName.lastIndexOf(<span class="string">"."</span>) + <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="SpringMVC添加文件上传的bean"><a href="#SpringMVC添加文件上传的bean" class="headerlink" title="SpringMVC添加文件上传的bean"></a>SpringMVC添加文件上传的bean</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 文件上传 --&gt;</span><br><span class="line">&lt;bean id=&quot;multipartResolver&quot; class=&quot;org.springframework.web.multipart.commons.CommonsMultipartResolver&quot; p:defaultEncoding=&quot;UTF-8&quot; &gt;</span><br><span class="line">&lt;/bean&gt;</span><br></pre></td></tr></table></figure><p>接着就可以使用Cotroller书写文件上传了。</p><h1 id="项目模块依赖补充"><a href="#项目模块依赖补充" class="headerlink" title="项目模块依赖补充"></a>项目模块依赖补充</h1><p>安装一些通用模块：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;commons-fileupload&gt;1.3.1&lt;/commons-fileupload&gt;</span><br><span class="line">&lt;commons-io&gt;2.2&lt;/commons-io&gt;</span><br><span class="line">&lt;commons-lang3&gt;3.1&lt;/commons-lang3&gt;</span><br><span class="line"></span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">              &lt;groupId&gt;commons-fileupload&lt;/groupId&gt;</span><br><span class="line">              &lt;artifactId&gt;commons-fileupload&lt;/artifactId&gt;</span><br><span class="line">              &lt;version&gt;$&#123;commons-fileupload&#125;&lt;/version&gt;</span><br><span class="line">          &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">          &lt;dependency&gt;</span><br><span class="line">              &lt;groupId&gt;commons-io&lt;/groupId&gt;</span><br><span class="line">              &lt;artifactId&gt;commons-io&lt;/artifactId&gt;</span><br><span class="line">              &lt;version&gt;$&#123;commons-io&#125;&lt;/version&gt;</span><br><span class="line">          &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">          &lt;dependency&gt;</span><br><span class="line">              &lt;groupId&gt;org.apache.commons&lt;/groupId&gt;</span><br><span class="line">              &lt;artifactId&gt;commons-lang3&lt;/artifactId&gt;</span><br><span class="line">              &lt;version&gt;$&#123;commons-lang3&#125;&lt;/version&gt;</span><br><span class="line">          &lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://github.com/happyfish100/fastdfs-client-java" target="_blank" rel="noopener">fastdfs-client-java</a></li><li>spring-fastdfs</li></ul><h1 id="相关"><a href="#相关" class="headerlink" title="相关"></a>相关</h1><p><a href="https://wistbean.github.io/java-ssm-4-1.html">Java文件服务器 FastDFS 的搭建教程</a><br><a href="https://wistbean.github.io/java-ssm-4-2.html">使用 Nginx 访问 FastDSF 文件服务器</a></p><h1 id="SSM视频教程目录"><a href="#SSM视频教程目录" class="headerlink" title="SSM视频教程目录"></a>SSM视频教程目录</h1><ul><li><a href="https://wistbean.github.io/java-ssm-video.html#SSM%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B%E7%9B%AE%E5%BD%95">SSM视频教程目录</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Java" scheme="https://wistbean.github.io/categories/Java/"/>
    
      <category term="Java SSM视频教程" scheme="https://wistbean.github.io/categories/Java/Java-SSM%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="教程" scheme="https://wistbean.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Nginx" scheme="https://wistbean.github.io/tags/Nginx/"/>
    
      <category term="Java" scheme="https://wistbean.github.io/tags/Java/"/>
    
      <category term="Intellij IDEA" scheme="https://wistbean.github.io/tags/Intellij-IDEA/"/>
    
      <category term="Java视频教程" scheme="https://wistbean.github.io/tags/Java%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/"/>
    
      <category term="项目实战" scheme="https://wistbean.github.io/tags/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/"/>
    
      <category term="分布式" scheme="https://wistbean.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
      <category term="SSM" scheme="https://wistbean.github.io/tags/SSM/"/>
    
      <category term="码农商城" scheme="https://wistbean.github.io/tags/%E7%A0%81%E5%86%9C%E5%95%86%E5%9F%8E/"/>
    
      <category term="EasyUI" scheme="https://wistbean.github.io/tags/EasyUI/"/>
    
      <category term="商品分类管理" scheme="https://wistbean.github.io/tags/%E5%95%86%E5%93%81%E5%88%86%E7%B1%BB%E7%AE%A1%E7%90%86/"/>
    
      <category term="FastDFS" scheme="https://wistbean.github.io/tags/FastDFS/"/>
    
      <category term="SecureCRT" scheme="https://wistbean.github.io/tags/SecureCRT/"/>
    
      <category term="文件服务器" scheme="https://wistbean.github.io/tags/%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
      <category term="上传下载" scheme="https://wistbean.github.io/tags/%E4%B8%8A%E4%BC%A0%E4%B8%8B%E8%BD%BD/"/>
    
      <category term="postman" scheme="https://wistbean.github.io/tags/postman/"/>
    
  </entry>
  
  <entry>
    <title>这些非常有价值的学习网站，你知道几个？</title>
    <link href="https://wistbean.github.io/valuable-place.html"/>
    <id>https://wistbean.github.io/valuable-place.html</id>
    <published>2018-11-22T13:02:08.000Z</published>
    <updated>2018-12-27T13:46:49.474Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>        <div id="aplayer-TbtjOWpf" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-TbtjOWpf"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "推荐几个有价值的地方",              author: "wistbean|肯定会",              url: "/podcast/52.mp3",              pic: "",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><p>前不久掘金 CEO 发布了一篇叫做 <a href="https://juejin.im/post/5bedaad5e51d45728f1074d8" target="_blank" rel="noopener">《不如我们从头来过》</a> 的文章，卖了波情怀，主要还是说明了掘金团队要裁员的情况，看的出来，他们挺不容易的，掘金这个技术社区相对来说还是很纯粹的。</p><p>整个网站使用起来算是挺舒服的，没有像 CSDN 那样满屏的广告，简单的风格，可惜「掘金小册子」搞不起来。</p><p>看完后在朋友圈发了下自己的看法，有朋友留言问我有没有什么好的技术社区和学习的地方推荐一下。</p><p>翻看了一下自己收藏和付费加入的一些技术社区以及学习的地方，有几个对我来说很有价值，所以分享一下。</p><h1 id="TED"><a href="#TED" class="headerlink" title="TED"></a>TED</h1><p>相信不少人都知道 TED 这个演讲平台了，TED 指 Technology, Entertainment, Design 在英语中的缩写，也就是技术、娱乐、设计。但其实 TED 上面不仅仅局限这几个领域，科学、教育、发展、文化、商业、艺术、环保等话题都有涉及到。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/valuable1.png" alt="TED" title="">                </div>                <div class="image-caption">TED</div>            </figure><blockquote><p>TED大会希望传达这样一个的信息，即优秀的思想可以改变人们对这个世界的看法，使人们反思自己的行为。TED大会只是TED社区的一部分，任何人，只要他认同某个TED演讲所传递的观点，都是TED社区的一员，他们都可以为实现某个伟大的理想而共同努力。</p></blockquote><p>TED 地址： <a href="https://www.ted.com/" target="_blank" rel="noopener">https://www.ted.com/</a></p><p>我主要会在上面看一些科技和教育的演讲，当然了，我们国内也有类似的平台，叫做<a href="https://www.yixi.tv" target="_blank" rel="noopener">「一席」</a>，这个演讲平台也很不错，也会邀请很多各个领域的牛人来分享他们的见解，我有时候睡前会找一席的演讲音频来听，了解到不少以前不知道的东西。</p><p>有一个演讲我看了不下 30 篇了，就是方励的<a href="https://www.yixi.tv/speech/114" target="_blank" rel="noopener">感谢你让我上场</a>，里面说的很多观点我都很认同，推荐你去看看。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/valuable1.png" alt="一席" title="">                </div>                <div class="image-caption">一席</div>            </figure><h1 id="大学公开课"><a href="#大学公开课" class="headerlink" title="大学公开课"></a>大学公开课</h1><p>有很多名牌大学的教师们都在网上分享他们的课程，很多还是不用钱的，有些课程的质量相当高。</p><p>有一个叫做 <a href="https://www.coursera.org/" target="_blank" rel="noopener">Coursera</a> 的教育平台，许多名校都和 Coursera 合作，学渣也能学习到名校老师讲的课了，想象是不是很爽。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/valuable3.png" alt="Coursera" title="">                </div>                <div class="image-caption">Coursera</div>            </figure><p>国内的也有大学公开课的平台，主要是和国内的名校合作，在这里学完如果完成考核还可以申请获得证书。我觉得比较好的有<a href="https://www.icourse163.org/" target="_blank" rel="noopener">中国大学MOOC</a>，<a href="http://www.xuetangx.com/" target="_blank" rel="noopener">学堂在线</a>。</p><blockquote><p>中国大学MOOC是由网易与高教社携手推出的在线教育平台，承接教育部国家精品开放课程任务，向大众提供中国知名高校的MOOC课程。在这里，每一个有意愿提升自己的人都可以免费获得更优质的高等教育。</p></blockquote><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/valuable4.png" alt="中国大学MOOC" title="">                </div>                <div class="image-caption">中国大学MOOC</div>            </figure><p>学堂在线是由清华大学推出的全球首个中文大规模开放在线课堂平台。以清华大学计算机科学与技术系为主体的开发团队基于OpenEdX平台开发了学堂在线。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/valuable5.png" alt="学堂在线" title="">                </div>                <div class="image-caption">学堂在线</div>            </figure><h1 id="BBC-learningenglish"><a href="#BBC-learningenglish" class="headerlink" title="BBC learningenglish"></a>BBC learningenglish</h1><p><a href="http://www.bbc.co.uk/learningenglish" target="_blank" rel="noopener">BBC</a>一个不错的英语学习平台，里面很多都是外国人在教，可以说是很纯粹的了，不会被带歪。比如说有教怎么发音，还有很多用英语交流的场景，视频教程很精美。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/valuable6.png" alt="BBC" title="">                </div>                <div class="image-caption">BBC</div>            </figure><h1 id="GitHub"><a href="#GitHub" class="headerlink" title="GitHub"></a>GitHub</h1><p>这个应该不用我说了，上面大牛云集，有很多优秀的开源项目值得跪舔，自己也可以在上面托管一些项目，和小伙伴一起合作开发。</p><p><a href="http://github.com" target="_blank" rel="noopener">GitHub</a>是什么以及怎么用可以看看我之前写的教程：<a href="https://wistbean.github.io/github.html">GitHub是什么？如何使用？</a></p><h1 id="LeetCode"><a href="#LeetCode" class="headerlink" title="LeetCode"></a>LeetCode</h1><p><a href="https://leetcode.com/" target="_blank" rel="noopener">LeetCode</a> 收录了很多编程相关的问题，如算法，数据库，很多人都在上面刷题，题目也分了不同的等级，LeetCode 也几乎支持所有主流编程语言，可以刷到你酸爽。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/valuable7.png" alt="LeetCode" title="">                </div>                <div class="image-caption">LeetCode</div>            </figure><h1 id="stackoverflow"><a href="#stackoverflow" class="headerlink" title="stackoverflow"></a>stackoverflow</h1><p><a href="https://stackoverflow.com/questions" target="_blank" rel="noopener">stackoverflow</a> 是一个技术问答社区，我们在编程的时候遇到的问题或者Bug，在这里也许可以看到别人曾经也遇到过，可以在这里找到一些参考，stackoverflow很纯粹，所以下次遇到技术问题别去百度了，在这里搜寻吧。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/valuable8.png" alt="stackoverflow" title="">                </div>                <div class="image-caption">stackoverflow</div>            </figure><h1 id="b站、Youtube"><a href="#b站、Youtube" class="headerlink" title="b站、Youtube"></a>b站、Youtube</h1><p>之前说过了，<a href="https://bilibili.com" target="_blank" rel="noopener">b站</a>不仅仅是个二次元的视频资源网站，里面的学习干货简直超乎想象。国外的 <a href="https://www.youtube.com/" target="_blank" rel="noopener">Youtube</a> 也是干货满满，基本上你想学的领域都有，下次找资源可以在上面搜搜试试。</p><p>具体可以看这里：<a href="https://wistbean.github.io/tutorial-resources.html">其实，你要的教程资源大多都在这两个地方，而且不用钱</a></p><h1 id="付费产品"><a href="#付费产品" class="headerlink" title="付费产品"></a>付费产品</h1><p>说了一些免费的产品之后，现在有一些付费的产品也是很不错的，比如「得到」、「极客时间」、「知识星球」。</p><p>有点付费学习的意识还是挺好的，加入一些付费的社群可以跟着大佬一起学习，还可以直接跟大佬一起交流。</p><p>为知识付费，节省一些时间，是一件很划算的事情。</p><p>以上。就是我觉得有价值的地方，当然，如果你也觉得有不错的网站，不妨留言一起分享。你分享一点，我分享一点，大家就会开心多一点。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="podcast" scheme="https://wistbean.github.io/categories/podcast/"/>
    
      <category term="肯定会电台" scheme="https://wistbean.github.io/categories/podcast/%E8%82%AF%E5%AE%9A%E4%BC%9A%E7%94%B5%E5%8F%B0/"/>
    
      <category term="资源推荐" scheme="https://wistbean.github.io/categories/podcast/%E8%82%AF%E5%AE%9A%E4%BC%9A%E7%94%B5%E5%8F%B0/%E8%B5%84%E6%BA%90%E6%8E%A8%E8%8D%90/"/>
    
      <category term="互联网" scheme="https://wistbean.github.io/categories/podcast/%E8%82%AF%E5%AE%9A%E4%BC%9A%E7%94%B5%E5%8F%B0/%E8%B5%84%E6%BA%90%E6%8E%A8%E8%8D%90/%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
    
      <category term="肯定会电台" scheme="https://wistbean.github.io/tags/%E8%82%AF%E5%AE%9A%E4%BC%9A%E7%94%B5%E5%8F%B0/"/>
    
      <category term="互联网" scheme="https://wistbean.github.io/tags/%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
      <category term="资源推荐" scheme="https://wistbean.github.io/tags/%E8%B5%84%E6%BA%90%E6%8E%A8%E8%8D%90/"/>
    
  </entry>
  
  <entry>
    <title>使用 Python 爬取帅哥到自己的电脑</title>
    <link href="https://wistbean.github.io/python-spider-shuaige.html"/>
    <id>https://wistbean.github.io/python-spider-shuaige.html</id>
    <published>2018-11-17T17:03:22.000Z</published>
    <updated>2018-12-27T13:46:46.647Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>前不久，公众号后台有妹子不高兴了，私信我说，我为什么会觉得我公众号的人都是喜欢看<a href="https://wistbean.github.io/python-spider-meizi.html">性感女人</a>呢？什么时候发发性感男人啊。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/shuaige1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>想想也是，毕竟关注这个公众号有 15.6% 是妹纸呢。怎么能没有性感男人呢？</p><p>那么接下来就把你想要的帅哥，用 Python 把它们装进自己的电脑。</p><p>刚好看到这个地址：<a href="http://www.shuaige5.com/tag/xinggannanren/" target="_blank" rel="noopener">http://www.shuaige5.com/tag/xinggannanren/</a> ,发现里面的性感男人真的很性感。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/shuaige2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>答应我，先别激动好么？</p><h1 id="分析帅哥图片地址"><a href="#分析帅哥图片地址" class="headerlink" title="分析帅哥图片地址"></a>分析帅哥图片地址</h1><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/shuaige3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>首先来分析一下我们要爬取的这些图片地址，通过 Chrome 的开发者工具可以看到这些图片的地址在 img 标签中，但是这个地址有点奇怪，在 src 里面还有一个 src 指向图片的地址，我们要的图片地址就是在第二个 src 指向的地址，所以我们的正则应该是这样：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&apos;&lt;div class=&quot;inner_wrapper_img inner_wrapper_img1&quot;&gt;.*?&lt;img.*?src=&quot;/e/ext.*?src=(.*?)&amp;amp;h=240&amp;amp;w=190&amp;amp;zc=1&quot;.*?&lt;/div&gt;&apos;</span><br></pre></td></tr></table></figure><p>当我们要点击下一页的时候呢，可以发现请求地址携带了一个参数 <code>/index_2.html</code> ,所以我们可以通过这个变量来获取多页的图片数据。</p><h1 id="爬取性感男人图片"><a href="#爬取性感男人图片" class="headerlink" title="爬取性感男人图片"></a>爬取性感男人图片</h1><p>那么分析完之后我们就开始下手吧，我们可以创建一个叫做 shuaige 的图片文件夹，专门来放这些帅哥的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">os.mkdir(dirName)</span><br><span class="line">os.chdir(dirName)</span><br></pre></td></tr></table></figure><p>接着我们可以定义几个变量：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pageNumber = 2 #用于获取不同页数的图片</span><br><span class="line">x = 0 #用于图片名称</span><br><span class="line">img_address = [] #存放爬取到的图片地址</span><br></pre></td></tr></table></figure><p>比如我们想要获取第 2 到第 4 张图片，那么我们就可以写一个循环来获取数据：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> pageNumber &lt; <span class="number">5</span> :</span><br><span class="line">    page_url = url + <span class="string">'/index_'</span>+str(pageNumber)+<span class="string">'.html'</span> <span class="comment">#获取不同页数的图片</span></span><br><span class="line">    addrs = find_imgs(page_url) <span class="comment">#获取地址</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> addrs:</span><br><span class="line">        <span class="keyword">if</span> i <span class="keyword">in</span> img_address :</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            img_address.append(i) <span class="comment"># 降低至存追加到img_address这个变量里面</span></span><br><span class="line"></span><br><span class="line">     pageNumber += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> each <span class="keyword">in</span> img_address:</span><br><span class="line">    filename = str(x) + <span class="string">".jpg"</span></span><br><span class="line">    x+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">with</span> open(filename,<span class="string">'wb'</span>) <span class="keyword">as</span> f: <span class="comment"># 将图片写入文件夹</span></span><br><span class="line">        img = url_open(each).content</span><br><span class="line">        f.write(img)</span><br></pre></td></tr></table></figure><p>ok，我们来运行一下，可以看到在我们的项目目录中创建了一个叫做 shuaige 的文件夹，python 正在下载我们要爬取的图片：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/shuaige4.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>打开文件夹一看，一堆性感男人都有了：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/shuaige6.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/shuaige5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>友情提示：小爬怡情，大爬伤身！</p><p>完整代码：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">url_open</span><span class="params">(url)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 以字典的形式添加请求头</span></span><br><span class="line">    header = &#123;</span><br><span class="line">        <span class="string">'User-Agent'</span>: <span class="string">"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.221 Safari/537.36 SE 2.X MetaSr 1.0"</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"># 使用get方法发送请求获取网页源码</span></span><br><span class="line">    response = requests.get(url, headers=header)</span><br><span class="line">    <span class="keyword">return</span> response</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">find_imgs</span><span class="params">(url)</span>:</span></span><br><span class="line">    html = url_open(url).text</span><br><span class="line">    pattern = re.compile(<span class="string">'&lt;div class="inner_wrapper_img inner_wrapper_img1"&gt;.*?&lt;img.*?src="/e/ext.*?src=(.*?)&amp;amp;h=240&amp;amp;w=190&amp;amp;zc=1".*?&lt;/div&gt;'</span>,re.S)</span><br><span class="line">    img_addrs = re.findall(pattern, html)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> img_addrs</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">download_shuaige</span><span class="params">(dirName=<span class="string">"shuaige"</span>)</span>:</span></span><br><span class="line">    os.mkdir(dirName)</span><br><span class="line">    os.chdir(dirName)</span><br><span class="line"></span><br><span class="line">    pageNumber = <span class="number">2</span></span><br><span class="line">    x = <span class="number">0</span></span><br><span class="line">    img_address = []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> pageNumber &lt; <span class="number">5</span> :</span><br><span class="line">        page_url = url + <span class="string">'/index_'</span>+str(pageNumber)+<span class="string">'.html'</span></span><br><span class="line">        addrs = find_imgs(page_url)</span><br><span class="line">        print(len(addrs))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> addrs:</span><br><span class="line">            <span class="keyword">if</span> i <span class="keyword">in</span> img_address :</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                img_address.append(i)</span><br><span class="line">            print(len(img_address))</span><br><span class="line">        <span class="keyword">for</span> each <span class="keyword">in</span> img_address:</span><br><span class="line">            print(each)</span><br><span class="line"></span><br><span class="line">        pageNumber += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> each <span class="keyword">in</span> img_address:</span><br><span class="line">        filename = str(x) + <span class="string">".jpg"</span></span><br><span class="line">        x+=<span class="number">1</span></span><br><span class="line">        <span class="keyword">with</span> open(filename,<span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">            img = url_open(each).content</span><br><span class="line">            f.write(img)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    url = <span class="string">"http://www.shuaige5.com/tag/xinggannanren"</span></span><br><span class="line">    download_shuaige()</span><br></pre></td></tr></table></figure></p><h1 id="相关"><a href="#相关" class="headerlink" title="相关"></a>相关</h1><ul><li><a href="https://wistbean.github.io/python-spider-dangdang.html">Python爬取当当网最受欢迎的 500 本书</a></li><li><a href="https://wistbean.github.io/python-spider-wechat.html">python爬取微信好友数据，分析后我好像知道了些什么</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="python" scheme="https://wistbean.github.io/categories/python/"/>
    
    
      <category term="教程" scheme="https://wistbean.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="python" scheme="https://wistbean.github.io/tags/python/"/>
    
      <category term="python爬虫" scheme="https://wistbean.github.io/tags/python%E7%88%AC%E8%99%AB/"/>
    
      <category term="python基础" scheme="https://wistbean.github.io/tags/python%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>体面的&quot;大数据&quot;</title>
    <link href="https://wistbean.github.io/big-data.html"/>
    <id>https://wistbean.github.io/big-data.html</id>
    <published>2018-11-16T09:58:44.000Z</published>
    <updated>2018-12-27T13:46:50.043Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>2018英雄联盟总决赛，中国战队 IG 获得了冠军。一时间我身边的朋友们都做出同样的感慨：IG牛逼！</p><p>身为 IG 团队 BOSS 的王思聪当然是心情大好，在微博上搞了波冠军之月抽奖活动，在第一波抽奖中抽取 113 人每人一万元。</p><p>哎~ 有钱真好！</p>        <div id="aplayer-iGtCVeGY" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-iGtCVeGY"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "双十一剁手之前，先了解这些骚操作能让你省很多钱",              author: "wistbean|肯定会",              url: "/podcast/51.mp3",              pic: "",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><p>然而到了开奖当天，抽奖结果让人很是无语。因为这次 113 人的中奖名单里面，只有一个男的中奖了，其它 112 人都是女性。这比例也太夸张了吧。据统计中奖里面的人没有一个是 IG 粉，甚至大多都不知道电竞是个什么玩意。</p><p>于是很多人吐槽渣浪。</p><p>后来微博的 CEO 解释说男性有很多操作行为像机器人，会被微博降权，所以抽不到。</p><p>这就有点冤枉了，男性可能潜水比较多，相对于女性而言，发微博较少，更多的是围观，所以被微博认为垃圾用户，甚至是机器人。</p><p>所以下次要抽奖最好把性别改成女的，多发点微博，表现出自己是个很有购买欲望的人，让渣浪觉得你是个有价值的用户，中奖概率会高很多。</p><p>其实对于渣浪来说，出此下策也是没办法，试想一下，假如从 1w 人中抽一个锦鲤出来，那么如果有人就搞 1w 个微博号，直接参与抽奖，不就必中了么？不公平哇。</p><p>其实微博上的机器人随处可见，有些明星，随便发一条微博，转发就上亿，比点赞还多。真敢刷啊，咋不上天呢？</p><p>不仅仅是微博，看看互联网上的那些平台，有多少机器人，多少假数据，恐怕机器人比真实用户还多个一两倍还不止。</p><p>真的，对他们来说，中国人早就不够用了！</p><p>前不久，吴亦凡的新专辑，上线不到一天，他的粉丝们不知道花了多少钱，搞了多少个VPN，居然把吴亦凡刷到了美区 iTunes 榜单第一。前 10 首歌中有 8 首是他的歌。居然把 Lady Gaga 远远甩在身后。</p><p>美国人民先是一阵懵逼，然后都看不下去了， Kris Wu 他妈的是谁？表示不认识。很是令人反感。在推特上被很多人吐槽，中国机器人也让外国人们觉得很可耻。</p><p>chines robot，丢脸不?</p><p>相信不少人都有被身边做电商的朋友们请求刷单吧，因为数据要做的体面，才能被客户搜索得到商品。现在去淘宝购买东西，真正的好评有多少，伪好评又有多少？现在的好评写的越好，我就觉得越假。</p><p>这些刷数据的早就在国内成了产业链，刚开始亚马逊，eBay 这些电商平台的卖家一片和谐，后来中国卖家开始进军境外电商了，开始疯狂刷单，刷数据。那些外国的卖家都特么傻眼了。挖槽，还有这种操作？</p><p>亚马逊，eBay不知道因为中国这些卖家改了多少次规则。</p><p>你说现在真正有实力的中国音乐人，真正良心的中国卖家，他们怎么办？还上得了榜么？就算上榜了，国外的那些人怎么看？</p><p>刚过去不久的双十一，销量突破多少千亿，但是背后刷了多少单，多少退货，会显示给我们看么？不会，那样就不体面了。</p><p>一个体面的数据，可以让一个流量的小鲜肉，抠图参演电影，从而获得可观的票房，反正有人帮忙刷数据，然而那些真正有演技派的人总是在想，演员的春天何时到来？</p><p>一个体面的数据，可以让一个平台做数据报告的时候沾沾自喜，投资人看了成就感爆棚，竞争者看了嗤之以鼻。</p><p>…</p><p>人们都更喜欢虚幻的东西，我们更愿意用谎言来装饰现实，你说，一个美丽的公主，看起来那么动人，那么梦幻，但是她把长裙撩起来，不小心看到她脚上那些茂密的脚毛，不太好吧。</p><p>有些朋友觉得我的公号有些文章写的不错，为什么阅读量没有很高？</p><p>其实我的公众号，时不时就有人在后台私信我，问我要不要刷粉丝，刷阅读量，20块钱就可以刷多少千的阅读量，粉丝就几毛钱一个。</p><p>不过我都拒绝了，不好意思，我是想要有一个体面的数据，但不想弄虚作假。</p><p>我的一点坚持能够影响到一些读者就不错了，其它交给时间。真的永远是真的，假的一眼就看出来，只是不说而已。keep real。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="podcast" scheme="https://wistbean.github.io/categories/podcast/"/>
    
      <category term="肯定会电台" scheme="https://wistbean.github.io/categories/podcast/%E8%82%AF%E5%AE%9A%E4%BC%9A%E7%94%B5%E5%8F%B0/"/>
    
    
      <category term="肯定会电台" scheme="https://wistbean.github.io/tags/%E8%82%AF%E5%AE%9A%E4%BC%9A%E7%94%B5%E5%8F%B0/"/>
    
      <category term="互联网" scheme="https://wistbean.github.io/tags/%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
  </entry>
  
  <entry>
    <title>双十一剁手之前，先了解这些骚操作能让你省很多钱</title>
    <link href="https://wistbean.github.io/shuangshiyi.html"/>
    <id>https://wistbean.github.io/shuangshiyi.html</id>
    <published>2018-11-09T06:26:46.000Z</published>
    <updated>2019-02-23T17:56:28.113Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>马上双十一了，你准备好剁手了么？购物车添加满了吗？那就先把购物车清空吧，购物车全选，一键删除。</p><p>因为接下来我想跟你讲点骚操作，让你花更少的钱，买更多的东西。当然，土豪就随意了。</p><p>双十一京东<br>宝的优惠规则挺繁琐的，有些商家需要你先收藏关注他们，然后才能领券，还要分享，缴定金等一系列操作，最后买完你发现，好像和打个 8 折没什么区别。这就是他们的套路！</p><p>还有一些商家，在双十一前先偷偷摸摸的涨价，然后到双十一的时候搞个极大的优惠来诱惑你。</p>        <div id="aplayer-qUJmCzjC" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-qUJmCzjC"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "双十一剁手之前，先了解这些骚操作能让你省很多钱",              author: "wistbean|肯定会",              url: "/podcast/50.mp3",              pic: "",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><h1 id="查看历史低价"><a href="#查看历史低价" class="headerlink" title="查看历史低价"></a>查看历史低价</h1><p>这里推荐一个比价，追踪历史价格的网站：<a href="http://www.manmanbuy.com/" target="_blank" rel="noopener">http://www.manmanbuy.com/</a></p><p>通过这里你就可以商家是否在套路你了，比如我就看到某个商家的 iPhone 7 ，价格频繁涨跌：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/shaungshiyi1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>看到了吗？11月9号这里先来个猛涨，然后降价，区间都快 1k 了 - -</p><h1 id="货比三家"><a href="#货比三家" class="headerlink" title="货比三家"></a>货比三家</h1><p>现在的商家那么多，京东，淘宝，天猫，亚马逊等等，你要买的东西，这些平台肯定有人在卖的，那么价格就会有差异，我们可以通过商品名称或者型号，查询所有商家的价格对比，从而找到最便宜的商家入手。</p><p>比如我比价了一下 MacBook Air，在天猫需要 5698 ，而在京东要 6488…</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/shaungshiyi2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h1 id="还可以再省钱"><a href="#还可以再省钱" class="headerlink" title="还可以再省钱"></a>还可以再省钱</h1><p>还记得我之前说的<a href="https://wistbean.github.io/make-money-on-the-internet.html">通过互联网赚钱的 9 种渠道</a>么，就有说到淘宝客，推广联盟，你可以通过 阿里妈妈 这个平台注册成为一个淘宝客，当然其它平台也有，例如京东联盟，亚马逊的 affiliate 等，然后你就可以从里面推荐一些商品给别人，如果别人购买了你推荐的商品，相当于帮别人卖产品。那么你就可以从中获取一定的佣金。</p><p>那么这时候你不妨自己注册一个推广联盟账号，把你和你朋友通过比价得到最低价格的商品，再通过他们的联盟平台里面搜索，获取推广链接，然后你再从这个链接购买，把佣金给赚了，是不是很爽？</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/WeChat%20Screenshot_20180805222236.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p>有些东西可能需要到双十一晚上12点抢购，这种拼手速的玩意你可以写一个脚本，比如用 Python 定时下单你购物车的东西，一般情况下，海外的商品会便宜很多，贵倒是贵在运费上，如果跟朋友团购海外商品也是不错的选择。其实掌握点小技巧每天都是在过双十一。</p><h1 id="相关"><a href="#相关" class="headerlink" title="相关"></a>相关</h1><ul><li><a href="https://wistbean.github.io/make-money-on-the-internet.html">通过互联网赚钱的 9 种渠道</a></li><li><a href="https://wistbean.github.io/jiucai.html">怎么才能让自己不要成为韭菜</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="podcast" scheme="https://wistbean.github.io/categories/podcast/"/>
    
      <category term="肯定会电台" scheme="https://wistbean.github.io/categories/podcast/%E8%82%AF%E5%AE%9A%E4%BC%9A%E7%94%B5%E5%8F%B0/"/>
    
      <category term="教程" scheme="https://wistbean.github.io/categories/podcast/%E8%82%AF%E5%AE%9A%E4%BC%9A%E7%94%B5%E5%8F%B0/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="肯定会电台" scheme="https://wistbean.github.io/tags/%E8%82%AF%E5%AE%9A%E4%BC%9A%E7%94%B5%E5%8F%B0/"/>
    
      <category term="互联网" scheme="https://wistbean.github.io/tags/%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
      <category term="教程" scheme="https://wistbean.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="双十一" scheme="https://wistbean.github.io/tags/%E5%8F%8C%E5%8D%81%E4%B8%80/"/>
    
  </entry>
  
  <entry>
    <title>python爬取微信好友数据，分析后我好像知道了些什么</title>
    <link href="https://wistbean.github.io/python-spider-wechat.html"/>
    <id>https://wistbean.github.io/python-spider-wechat.html</id>
    <published>2018-11-07T14:43:43.000Z</published>
    <updated>2019-02-05T08:15:27.045Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>每天都在使用微信，在移动互联网到来之时，腾讯内部组建了三支团队，同时开发同样的产品————微信，最后是广州做邮箱出身的团队赢了，杀入了移动互联网这片红海。</p><p>微信第一次出现在我们面前的时候，是在 2011 年，那时候更多人是使用 QQ ,对微信没什么好感，直到<code>附近的人</code>，<code>摇一摇</code>这些约炮功能的出现，让人们爱不释手，如果说这是资本原罪，那么<code>朋友圈</code>这个功能的出现，着实满足了用户内心深处的窥探欲望，再到公众号的出现，微信已经牛的一批了。</p><p>我的微信好友中，有些朋友是熟悉的，有些朋友是不太熟悉的，比如看了我的文章或 blog 添加的我，不过没关系，在茫茫人海中相遇便是缘。那么我在想，把我的微信好友的数据用 Python 爬取下来，分析一下，应该会很有趣。</p><p>微信有个网页版的登录，那么可以从这里入手，有个牛逼的<a href="https://pypi.org/project/itchat/" target="_blank" rel="noopener">itchat</a>模块，两行代码，就能让我们登录并且获取好友信息了：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 微信登录</span></span><br><span class="line">    itchat.auto_login(hotReload=<span class="keyword">True</span>)</span><br><span class="line">    friends = itchat.get_friends(update=<span class="keyword">True</span>)</span><br></pre></td></tr></table></figure><p>当我扫码登录完之后呢，就可以获取到我的好友数据了：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/sp-wechat1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h1 id="我微信好友中的性别比例"><a href="#我微信好友中的性别比例" class="headerlink" title="我微信好友中的性别比例"></a>我微信好友中的性别比例</h1><p>在返回的数据中，有一个叫做 Sex 的字段，就是性别，简单的分析可以知道 <code>0未知 1男 2女</code> ,将所有好友中的性别数据提取出来，接着使用 matplotlib 画个饼图:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">sexs = list(map(<span class="keyword">lambda</span> x:x[<span class="string">'Sex'</span>],friends[<span class="number">1</span>:]))</span><br><span class="line">counts = Counter(sexs).items()</span><br><span class="line">counts = sorted(counts, key=<span class="keyword">lambda</span> x:x[<span class="number">0</span>], reverse=<span class="keyword">False</span>)</span><br><span class="line">counts = list(map(<span class="keyword">lambda</span> x:x[<span class="number">1</span>],counts))</span><br><span class="line"><span class="comment"># 0未知 1男 2女</span></span><br><span class="line">labels = [<span class="string">'未知'</span>,<span class="string">'小哥哥'</span>,<span class="string">'小姐姐'</span>]</span><br><span class="line">colors = [<span class="string">'yellowgreen'</span>,<span class="string">'darkslateblue'</span>,<span class="string">'orangered'</span>]</span><br><span class="line">plt.figure(figsize=(<span class="number">8</span>,<span class="number">5</span>), dpi=<span class="number">80</span>)</span><br><span class="line">plt.axes(aspect=<span class="number">1</span>)</span><br><span class="line">plt.pie(counts,</span><br><span class="line">        labels=labels,</span><br><span class="line">        colors=colors,</span><br><span class="line">        labeldistance = <span class="number">1.1</span>,</span><br><span class="line">        autopct = <span class="string">'%3.1f%%'</span>,</span><br><span class="line">        shadow = <span class="keyword">False</span>,</span><br><span class="line">        startangle = <span class="number">90</span>,</span><br><span class="line">        pctdistance = <span class="number">0.6</span></span><br><span class="line">)</span><br><span class="line">plt.legend(loc=<span class="string">'upper right'</span>,)</span><br><span class="line">plt.title(<span class="string">u'%s的微信好友性别比例'</span> % friends[<span class="number">0</span>][<span class="string">'NickName'</span>])</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>得出结果：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py-wechat02.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>挖槽，小哥哥那么多，我的妹纸们呢？女神呢？</p><p>不过想想，我的微信好友大多是程序员/破涕为笑，也就平复下心情了，妹纸快加我微信啊，让我的饼图好看一些 - -</p><h1 id="我微信好友中的态度"><a href="#我微信好友中的态度" class="headerlink" title="我微信好友中的态度"></a>我微信好友中的态度</h1><p>微信有个<code>个性签名</code>的东西,每个人会把自己的座右铭，或者喜欢的话语写上，试着来分析一下我的好友中用到最多的词是什么，把语句进行结巴分词，然后搞一张云词出来，应该不错。</p><p>在获取到好友的数据中，有个 <code>signature</code> 的字段，就是好友的个签了，有些朋友会加上一些表情什么的，先把它们过滤掉，然后再使用 SnowNLP 分析，通过结巴分词分析完就可以用 wordcloud 生成云图了：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">analyseSignature</span><span class="params">(friends)</span>:</span></span><br><span class="line">    signatures = <span class="string">''</span></span><br><span class="line">    emotions = []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> friend <span class="keyword">in</span> friends:</span><br><span class="line">        <span class="comment"># 获取好友的签名</span></span><br><span class="line">        signature = friend[<span class="string">'Signature'</span>]</span><br><span class="line">        <span class="keyword">if</span> (signature != <span class="keyword">None</span>):</span><br><span class="line">            <span class="comment"># 过滤掉标签和表情</span></span><br><span class="line">            signature = signature.strip().replace(<span class="string">'span'</span>, <span class="string">''</span>).replace(<span class="string">'class'</span>, <span class="string">''</span>).replace(<span class="string">'emoji'</span>, <span class="string">''</span>)</span><br><span class="line">            signature = re.sub(<span class="string">r'1f(\d.+)'</span>, <span class="string">''</span>, signature)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (len(signature) &gt; <span class="number">0</span>):</span><br><span class="line">                <span class="comment"># 分析标签</span></span><br><span class="line">                nlp = SnowNLP(signature)</span><br><span class="line">                <span class="comment"># 获取情绪值</span></span><br><span class="line">                emotions.append(nlp.sentiments)</span><br><span class="line">                <span class="comment"># 结巴分析</span></span><br><span class="line">                signatures += <span class="string">' '</span>.join(jieba.analyse.extract_tags(signature, <span class="number">5</span>))</span><br><span class="line"></span><br><span class="line">    back_coloring = np.array(Image.open(<span class="string">'baseketball.jpg'</span>))</span><br><span class="line">    wordcloud = WordCloud(</span><br><span class="line">        ...</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 生成云词</span></span><br><span class="line">    wordcloud.generate(signatures)</span><br><span class="line">    plt.imshow(wordcloud)</span><br><span class="line">    plt.axis(<span class="string">"off"</span>)</span><br><span class="line">    plt.show()</span><br><span class="line">    wordcloud.to_file(<span class="string">'signatures.jpg'</span>)</span><br></pre></td></tr></table></figure><p>生成结果：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py-wechat03.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>可以看得出来，我的朋友们还是挺正能量，努力，坚持，生活，人生是出现的比较多的词。多跟正能量的人在一起，互相传递能量，挺好。</p><h1 id="我微信好友中的情感"><a href="#我微信好友中的情感" class="headerlink" title="我微信好友中的情感"></a>我微信好友中的情感</h1><p>SnowNLP 可以获取 sentiments，我理解为情绪值，从0到1，值越高说明越正能量，可以通过这个值，画一个图，看看我微信好友们的情感是怎么样的：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">count_good = len(list(filter(<span class="keyword">lambda</span> x: x &gt; <span class="number">0.66</span>, emotions)))</span><br><span class="line">count_normal = len(list(filter(<span class="keyword">lambda</span> x: x &gt;= <span class="number">0.33</span> <span class="keyword">and</span> x &lt;= <span class="number">0.66</span>, emotions)))</span><br><span class="line">count_bad = len(list(filter(<span class="keyword">lambda</span> x: x &lt; <span class="number">0.33</span>, emotions)))</span><br><span class="line">labels = [<span class="string">u'负能量'</span>, <span class="string">u'中性'</span>, <span class="string">u'正能量满满'</span>]</span><br><span class="line">values = (count_bad, count_normal, count_good)</span><br><span class="line">plt.rcParams[<span class="string">'font.sans-serif'</span>] = [<span class="string">'simHei'</span>]</span><br><span class="line">plt.rcParams[<span class="string">'axes.unicode_minus'</span>] = <span class="keyword">False</span></span><br><span class="line">plt.xlabel(<span class="string">u'情感判断'</span>)</span><br><span class="line">plt.ylabel(<span class="string">u'频数'</span>)</span><br><span class="line">plt.xticks(range(<span class="number">3</span>), labels)</span><br><span class="line">plt.legend(loc=<span class="string">'upper right'</span>, )</span><br><span class="line">plt.bar(range(<span class="number">3</span>), values, color=<span class="string">'rgb'</span>)</span><br><span class="line">plt.title(<span class="string">u'%s的微信好友签名信息情感分析'</span> % friends[<span class="number">0</span>][<span class="string">'NickName'</span>])</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>结果：<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py-wechat04.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></p><p>可以看到，负能量的人还是少数的，大多都正能量满满，我喜欢。</p><h1 id="我微信好友都住在哪里"><a href="#我微信好友都住在哪里" class="headerlink" title="我微信好友都住在哪里"></a>我微信好友都住在哪里</h1><p>在返回的微信好友数据中，有一个 Province 字段，用来说明用户所处的省份，那么用这个字段，就可以统计出，我的微信好友在哪里，把这些数据统计出来，然后显示在中国地图上，应该会很直观，这里我使用到了 pyecharts 模块来进行地图可视化：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">analyseLocation</span><span class="params">(friends)</span>:</span></span><br><span class="line">    keys = []</span><br><span class="line">    values = []</span><br><span class="line">    province = list(map(<span class="keyword">lambda</span> x: x[<span class="string">'Province'</span>], friends[<span class="number">1</span>:]))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> set(province):</span><br><span class="line">        keys.append(i)</span><br><span class="line">        values.append(province.count(i))</span><br><span class="line"></span><br><span class="line">    maps = Map(<span class="string">"中国地图"</span>, <span class="string">'中国地图'</span>, width=<span class="number">1200</span>, height=<span class="number">600</span>)</span><br><span class="line">    maps.add(<span class="string">""</span>, keys, values, visual_range=[<span class="number">0</span>, <span class="number">50</span>], maptype=<span class="string">'china'</span>, is_visualmap=<span class="keyword">True</span>,</span><br><span class="line">            visual_text_color=<span class="string">'#000'</span>)</span><br><span class="line">    maps.show_config()</span><br><span class="line">    maps.render(path=<span class="string">"localtion.html"</span>)</span><br></pre></td></tr></table></figure><p>结果如下：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py-wechat05.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>哇塞！我的好友快要遍布整个中国了，就差新疆，青海，宁夏，天津和宝岛台湾了，以后我是不是就不用学习数理化也可以走遍中国都不怕了哈哈哈！</p><p>ok~ 我主要从微信好友的性别，态度，情感和位置进行了分析，除了觉得我的微信好友中女生比较少之外，其它都挺不错的，继续努力，希望以后我的朋友们越来越牛逼！</p><p>ps：如果你也想分析下你的微信好友，想要获取源码的话可以在公众号后台发送「微信」获取。</p><h1 id="相关"><a href="#相关" class="headerlink" title="相关"></a>相关</h1><ol><li><a href="https://wistbean.github.io/python-tutorial.html">python3入门基础有趣的教程</a></li><li><a href="https://wistbean.github.io/python-spider-meizi.html">Python爬虫基础：爬取妹子图片并保存到本地</a></li><li><a href="https://wistbean.github.io/how-to-learn-python-spider.html">python 爬虫应该学习什么知识点？</a></li><li><a href="https://wistbean.github.io/how-to-learn-python-dangdang.html">python 爬取当当网最受欢迎的500本书</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="python" scheme="https://wistbean.github.io/categories/python/"/>
    
      <category term="python爬虫" scheme="https://wistbean.github.io/categories/python/python%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="教程" scheme="https://wistbean.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="python" scheme="https://wistbean.github.io/tags/python/"/>
    
      <category term="python爬虫" scheme="https://wistbean.github.io/tags/python%E7%88%AC%E8%99%AB/"/>
    
      <category term="python基础" scheme="https://wistbean.github.io/tags/python%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>七牛云要回收了我的测试域名，只能把我的博客图片爬下来了</title>
    <link href="https://wistbean.github.io/spider-qiniu.html"/>
    <id>https://wistbean.github.io/spider-qiniu.html</id>
    <published>2018-11-03T08:04:02.000Z</published>
    <updated>2018-12-27T13:46:49.829Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>前两天收到一份邮件，<a href="https://portal.qiniu.com/signup?code=3lnwl72inn3v6" target="_blank" rel="noopener">七牛云</a>发来的，说是要回收我的测试域名，之前也不知道有测试域名这一说，可能怕有人干坏事吧。总之也就是说，我之前上传在<a href="https://portal.qiniu.com/signup?code=3lnwl72inn3v6" target="_blank" rel="noopener">七牛云</a>上的博客图片可能都要挂掉了。想想自己博客的文章图片都 404 就悲催。<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/qiniu1.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><br>有两个解决方法：</p><blockquote><p>1.在七牛云上提交自己的域名，不过需要备案<br>2.把自己上传在七牛云上的图片爬取下来，转移阵地</p></blockquote><p>对于第一种方式是最简单的，换自己的域名就可以了，但是得备案，最烦就是备案了，一堆恶心的认证操作，而且总感觉背后有人在盯着你 - -</p><p>所以果断选择第二种解决方式，使用 Python 把图片爬取下来，转移阵地。</p><h1 id="分析七牛云存储空间"><a href="#分析七牛云存储空间" class="headerlink" title="分析七牛云存储空间"></a>分析七牛云存储空间</h1><p>通过这个存储的链接中 <a href="https://portal.qiniu.com/bucket/blog/resource" target="_blank" rel="noopener">https://portal.qiniu.com/bucket/blog/resource</a> 抓包可以看到，这个URL <a href="https://portal.qiniu.com/api/kodo/bucket/files?bucket=blog&amp;delimiter=&amp;limit=50&amp;marker=" target="_blank" rel="noopener">https://portal.qiniu.com/api/kodo/bucket/files?bucket=blog&amp;delimiter=&amp;limit=50&amp;marker=</a> 会返回存储数据，也就是图片地址和名称，正是我想爬取的东东。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/qiniu2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>一次请求可以获取到 50 条数据，那么想要获取全部怎么办呢？</p><p>简单分析一下，每次返回的 Json 字段中有 <code>marker=eyJjIjowLCJrIjoiMi5wbmcifQ==</code> ,当点击<code>加载更多</code>的时候，这个marker字段的值会作为下一次请求的 marker 参数值（携带在URL上），直到请求到最后 marker 为 “” ,也就是说当 marker 值为 “” 的时候，就是请求到最后的数据了。没有更多了。</p><p>大概了解了之后，就废话不多说了，开抓…</p><h1 id="开始抓取七牛云图片"><a href="#开始抓取七牛云图片" class="headerlink" title="开始抓取七牛云图片"></a>开始抓取七牛云图片</h1><p>定义属性 header 和 urls，假装自己是浏览器和有cookie信息。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">header = &#123;</span><br><span class="line">       <span class="string">"User - Agent"</span>: <span class="string">"Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36"</span>,</span><br><span class="line">       <span class="string">"Accept"</span>: <span class="string">"* / *"</span>,</span><br><span class="line">       <span class="string">"authority"</span>: <span class="string">"portal.qiniu.com"</span>,</span><br><span class="line">       <span class="string">"Accept - Encoding"</span>: <span class="string">"gzip, deflate"</span>,</span><br><span class="line">       <span class="string">"cookie"</span>: <span class="string">"PORTAL_VERSION=v4; _ga=GA1.2.2072818546.1540316980; SSID=VkI4TTMzWE1GUlgzUVRENTZVNTNGQlVQQkVDREZISUpaSDlOWiwxNTQwOTc3OTMzMzk4NDY1MTg3LDViYWVkODRhMWNjZDcyZTJiY2IxMDY2YTlhYWJkOWE2OTliODRkN2EyOGQ2YTUxNWZkYjA5YzZmMTFjZGViMzAyM2JhOGU4NzcyYzU3YTI1ZDIxOWIxMDA4M2UzNGNhNTI3MDhlMmRmOGYxZDdkMDY5YzhkMzU1MzZiM2JlMzUy; PORTAL_UID=1381258456; _gid=GA1.2.1455782183.1540980965; gr_user_id=0dac03ae-d047-4009-8c28-af324447f4b1; qiniu_seo_refer=https://mail.qq.com/; Hm_lvt_204fcf6777f8efa834fe7c45a2336bf1=1540977888,1540980965,1540981082,1540996618; LXB_REFER=mail.qq.com; PORTAL_SESSION=OENCMTBURFVNMjEzV1VaRUdIRk4wTVJFODlMV0QxOEUsMTU0MDk5NjY0NjQwNjIzMzQzMiw5OWFhN2IxNDgwNzhjNDQ5MjRkYTU2ODk1ZDQ4ODQ4ODkxZTQ4Mjgw; _gat=1; __lfcc=1; Hm_lpvt_204fcf6777f8efa834fe7c45a2336bf1=1541004539"</span></span><br><span class="line">   &#125;</span><br><span class="line">   urls = <span class="string">"https://portal.qiniu.com/api/kodo/bucket/files?bucket=blog&amp;delimiter=&amp;limit=50&amp;marker="</span></span><br></pre></td></tr></table></figure><p>因为第一次请求不需要 marker ，所以我们可以给 marker 定义一个默认值，每次请求就更新这个marker，当发现 marker 为空的时候就不再请求了。</p><p>请求到的数据只需要图片名称和图片地址就行了，可以用到 json 模块来解析 json 数据，然后将图片下载到blog文件夹：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">marker = <span class="string">"&amp;"</span></span><br><span class="line">os.mkdir(<span class="string">"blog"</span>)</span><br><span class="line">os.chdir(<span class="string">"blog"</span>)</span><br><span class="line">sum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> str(marker).strip()!= <span class="string">''</span>:</span><br><span class="line"></span><br><span class="line">    url = urls + marker</span><br><span class="line">    res = request_qiniu(url, header)</span><br><span class="line">    jsondata = json.loads(res.text)</span><br><span class="line">    marker = jsondata[<span class="string">'data'</span>][<span class="string">'marker'</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(jsondata[<span class="string">'data'</span>][<span class="string">'entries'</span>])):</span><br><span class="line">        fileurl = jsondata[<span class="string">'data'</span>][<span class="string">'entries'</span>][i][<span class="string">'dl_remove_attname_url'</span>]</span><br><span class="line">        filename = jsondata[<span class="string">'data'</span>][<span class="string">'entries'</span>][i][<span class="string">'key'</span>]</span><br><span class="line">        <span class="keyword">with</span> open(filename, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">            img = url_open(fileurl).content</span><br><span class="line">            f.write(img)</span><br><span class="line">            sum += <span class="number">1</span></span><br><span class="line">            print(<span class="string">"写入数据，第"</span>+str(sum)+<span class="string">"条："</span> + filename)</span><br></pre></td></tr></table></figure><p>这是请求七牛云数据的方法，用到了 requests 模块：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">request_qiniu</span><span class="params">(url,header)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        response = requests.get(url,headers=header)</span><br><span class="line">        <span class="keyword">if</span> response.status_code == <span class="number">200</span>:</span><br><span class="line">            <span class="keyword">return</span> response</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">None</span></span><br><span class="line">    <span class="keyword">except</span> RequestException:</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">None</span></span><br></pre></td></tr></table></figure><p>运行代码开始爬取图片：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/qiniu3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>可以看到，创建了文件夹，并且把图片都下载下来了：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/qiniu4.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>ok，搞定！</p><h1 id="相关"><a href="#相关" class="headerlink" title="相关"></a>相关</h1><ul><li><p><a href="https://wistbean.github.io/python-spider-meizi.html">Python爬虫基础：爬取妹子图片并保存到本地</a></p></li><li><p><a href="https://wistbean.github.io/python-spider-dangdang.html">Python爬取当当网最受欢迎的 500 本书</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="python" scheme="https://wistbean.github.io/categories/python/"/>
    
    
      <category term="python" scheme="https://wistbean.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>「4-2」 使用 Nginx 访问 FastDSF 文件服务器</title>
    <link href="https://wistbean.github.io/java-ssm-4-2.html"/>
    <id>https://wistbean.github.io/java-ssm-4-2.html</id>
    <published>2018-11-02T13:17:53.000Z</published>
    <updated>2019-02-23T17:53:56.337Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="SSM视频教程第4-2节：使用-Nginx-访问-FastDSF-文件服务器"><a href="#SSM视频教程第4-2节：使用-Nginx-访问-FastDSF-文件服务器" class="headerlink" title="SSM视频教程第4-2节：使用 Nginx 访问 FastDSF 文件服务器"></a>SSM视频教程第4-2节：使用 Nginx 访问 FastDSF 文件服务器</h1><iframe src="//player.bilibili.com/player.html?aid=35159487&cid=61603656&page=1" width="100%" height="436" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><h1 id="Nginx可以做什么呢？"><a href="#Nginx可以做什么呢？" class="headerlink" title="Nginx可以做什么呢？"></a>Nginx可以做什么呢？</h1><h2 id="Nginx可以做HTTP服务器"><a href="#Nginx可以做HTTP服务器" class="headerlink" title="Nginx可以做HTTP服务器"></a>Nginx可以做HTTP服务器</h2><p>可以利用它来做一些静态资源的访问服务器，例如我们系统用到的图片，可以用Nginx服务器来专门访问我们的图片系统。</p><p>例如，有一个电商的网站，当有商品在系统中上架时，可以将上架的商品图片存放到我们的图片服务器，当我们需要这个商品的详情的时候，就可以通过Nginx去访问相应的图片。nginx比apache占用的cpu资源少，在高并发的情况下能保持低资源低消耗高性能。</p><h2 id="Nginx可以做虚拟主机"><a href="#Nginx可以做虚拟主机" class="headerlink" title="Nginx可以做虚拟主机"></a>Nginx可以做虚拟主机</h2><p>可以在同一台服务器上运行多个网站，而且呢，这些不同网站是不会互相干扰的，在区分不同的网站我们可以通过不同的<code>IP</code>，不同的<code>端口</code>和不同的<code>域名</code>三种方式区分，但是一般使用的最多的就是使用域名来区分。例如通过<a href="http://www.a.com" target="_blank" rel="noopener">www.a.com</a> 来访问a网站，通过<a href="http://www.b.com" target="_blank" rel="noopener">www.b.com</a> 来访问b网站，并且a.com和b.com是基于同一个ip地址的。</p><p>虚拟主机的配置可以在nginx的conf文件中进行配置，在配置文件中每个server节点就代表一个虚拟主机。例如我想要配置<a href="http://www.a.com" target="_blank" rel="noopener">www.a.com</a> 来访问a网站，通过 <a href="http://www.b.com" target="_blank" rel="noopener">www.b.com</a> 来访问b网站就可以这样子：</p><pre><code>server {       listen       80;       server_name  www.a.com;       #charset koi8-r;       #access_log  logs/host.access.log  main;       location / {           root   a/html; //指向a.com的网站           index  index.html index.htm;       }       error_page   500 502 503 504  /50x.html;       location = /50x.html {           root   html;       }   }server {           listen       80;           server_name  www.b.com;           #charset koi8-r;           #access_log  logs/host.access.log  main;           location / {               root   b/html; //指向b.com的网站               index  index.html index.htm;           }           error_page   500 502 503 504  /50x.html;           location = /50x.html {               root   html;           }       }</code></pre><p>配置好文件我们保存然后将Nginx reload一下之后，我们这时候访问 <a href="http://www.a.com" target="_blank" rel="noopener">www.a.com</a> 时Nginx就会去请求a网站给我们，同样访问 <a href="http://www.b.com" target="_blank" rel="noopener">www.b.com</a> 就会去请求b的网站，他们之间互不影响，且又绑定在同一个ip上。这种对于一些多个小的网站，绑定在同一个ip上是很好的实现方式。</p><h2 id="Nginx可以进行负载均衡的反向代理"><a href="#Nginx可以进行负载均衡的反向代理" class="headerlink" title="Nginx可以进行负载均衡的反向代理"></a>Nginx可以进行负载均衡的反向代理</h2><p>反向代理就是当你的网站因为并发量太大，部署在了多个服务器上，那么当用户去访问你的网站的时候，不知道去访问哪个服务器，这时候Nginx就是来帮忙进行反向代理请求的，也就是用户访问Nginx，然后Nginx帮用户去请求某一个Nginx认为该访问的服务器。</p><p>负载均衡反向代理的使用也是通过Nginx的文件进行配置的：</p><p>在conf中通过upstream来配置要代理的服务器：</p><pre><code>upstream tomcatserver1{    server 192.168.88.61;    server 192.168.88.62;}</code></pre><p>其中还可以定义这些服务器的负载权重，是否参与负载等，可以在ip地址后面添加定义：</p><blockquote><p>down 表示单前的server暂时不参与负载</p></blockquote><blockquote><p>weight 默认为1,weight越大，负载的权重就越大</p></blockquote><blockquote><p>backup 其它所有的非backup机器down或者忙的时候，就会请求backup机器。所以这台机器压力会是最轻的。</p></blockquote><blockquote><p>max_fails 允许请求失败的次数默认为1.当超过最大次时，返回proxy_next_upstream 模块定义的错误</p></blockquote><blockquote><p>fail_timeout: max_fails次失败后，暂停的时间。</p></blockquote><p>比如 server 192.168.88.61 weight=2; 就代表192.168.88.61这个服务器会被访问的权重更多。</p><p>在server中配置域名和端口号，然后用proxy_pass去访问我们刚刚定义的upstream：</p><pre><code>    server {    listen       80;    server_name  wistbean.server1.com;    location / {       proxy_pass http://tomcatserver1;        index  index.html index.htm;    }    error_page   500 502 503 504  /50x.html;    location = /50x.html {        root   html;    }}</code></pre><h1 id="Nginx在Linux上安装"><a href="#Nginx在Linux上安装" class="headerlink" title="Nginx在Linux上安装"></a>Nginx在Linux上安装</h1><h2 id="首先需要安装Nginx的依赖环境："><a href="#首先需要安装Nginx的依赖环境：" class="headerlink" title="首先需要安装Nginx的依赖环境："></a>首先需要安装Nginx的依赖环境：</h2><p>yum install -y openssl openssl-devel</p><blockquote><p>OpenSSL 是一个强大的安全套接字层密码库，囊括主要的密码算法、常用的密钥和证书封装管理功能及SSL协议，并提供丰富的应用程序供测试或其它目的使用。<br>nginx不仅支持http协议，还支持https（即在ssl协议上传输http），所以需要在linux安装openssl库。</p></blockquote><p>yum install -y zlib zlib-devel</p><blockquote><p>多种压缩和解压缩的方式，nginx使用zlib对http包的内容进行gzip</p></blockquote><p>yum install -y pcre pcre-devel</p><blockquote><p>nginx的http模块使用pcre来解析正则表达式</p></blockquote><p>yum install gcc-c++</p><blockquote><p>安装nginx需要先将官网下载的源码进行编译，编译依赖gcc环境</p></blockquote><h2 id="下载Nginx"><a href="#下载Nginx" class="headerlink" title="下载Nginx"></a>下载Nginx</h2><p><a href="http://nginx.org/en/download.html" target="_blank" rel="noopener">http://nginx.org/en/download.html</a> ，例如下载1.8.1版本可以</p><pre><code>wget http://nginx.org/download/nginx-1.8.1.tar.gz</code></pre><h2 id="解压Nginx"><a href="#解压Nginx" class="headerlink" title="解压Nginx"></a>解压Nginx</h2><pre><code>tar -zxvf nginx-1.8.0.tar.gz</code></pre><h2 id="参数配置"><a href="#参数配置" class="headerlink" title="参数配置"></a>参数配置</h2><pre><code>./configure \--prefix=/usr/local/nginx \--pid-path=/var/run/nginx/nginx.pid \--lock-path=/var/lock/nginx.lock \--error-log-path=/var/log/nginx/error.log \--http-log-path=/var/log/nginx/access.log \--with-http_gzip_static_module \--http-client-body-temp-path=/var/temp/nginx/client \--http-proxy-temp-path=/var/temp/nginx/proxy \--http-fastcgi-temp-path=/var/temp/nginx/fastcgi \--http-uwsgi-temp-path=/var/temp/nginx/uwsgi \--http-scgi-temp-path=/var/temp/nginx/scgi \--add-module=/usr/local/src/fastdfs-nginx-module/src/  \--with-http_ssl_module</code></pre><p>将以上复制到Linux执行一遍。然后需要到<strong>/var/temp/</strong>中创建nginx目录。</p><pre><code>mkdir nginx</code></pre><h2 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h2><pre><code>makemake install</code></pre><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><p>进入nginx的sbin目录：</p><pre><code>cd /usr/local/nginx/sbin./nginx</code></pre><p>开始启动了…</p><h2 id="关闭"><a href="#关闭" class="headerlink" title="关闭"></a>关闭</h2><pre><code>./nginx -s stop</code></pre><h2 id="重新加载配置文件"><a href="#重新加载配置文件" class="headerlink" title="重新加载配置文件"></a>重新加载配置文件</h2><pre><code>./nginx -s reload</code></pre><h1 id="相关"><a href="#相关" class="headerlink" title="相关"></a>相关</h1><p><a href="https://wistbean.github.io/java-ssm-4-1.html">Java文件服务器 FastDFS 的搭建教程</a></p><h1 id="SSM视频教程目录"><a href="#SSM视频教程目录" class="headerlink" title="SSM视频教程目录"></a>SSM视频教程目录</h1><ul><li><a href="https://wistbean.github.io/java-ssm-video.html#SSM%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B%E7%9B%AE%E5%BD%95">SSM视频教程目录</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Java" scheme="https://wistbean.github.io/categories/Java/"/>
    
      <category term="Java SSM视频教程" scheme="https://wistbean.github.io/categories/Java/Java-SSM%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="教程" scheme="https://wistbean.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Nginx" scheme="https://wistbean.github.io/tags/Nginx/"/>
    
      <category term="Java" scheme="https://wistbean.github.io/tags/Java/"/>
    
      <category term="Intellij IDEA" scheme="https://wistbean.github.io/tags/Intellij-IDEA/"/>
    
      <category term="Java视频教程" scheme="https://wistbean.github.io/tags/Java%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/"/>
    
      <category term="项目实战" scheme="https://wistbean.github.io/tags/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/"/>
    
      <category term="分布式" scheme="https://wistbean.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
      <category term="SSM" scheme="https://wistbean.github.io/tags/SSM/"/>
    
      <category term="码农商城" scheme="https://wistbean.github.io/tags/%E7%A0%81%E5%86%9C%E5%95%86%E5%9F%8E/"/>
    
      <category term="EasyUI" scheme="https://wistbean.github.io/tags/EasyUI/"/>
    
      <category term="商品分类管理" scheme="https://wistbean.github.io/tags/%E5%95%86%E5%93%81%E5%88%86%E7%B1%BB%E7%AE%A1%E7%90%86/"/>
    
      <category term="FastDFS" scheme="https://wistbean.github.io/tags/FastDFS/"/>
    
      <category term="SecureCRT" scheme="https://wistbean.github.io/tags/SecureCRT/"/>
    
  </entry>
  
  <entry>
    <title>当一个斜杆青年怎么样</title>
    <link href="https://wistbean.github.io/slash.html"/>
    <id>https://wistbean.github.io/slash.html</id>
    <published>2018-11-01T10:30:26.000Z</published>
    <updated>2018-12-27T13:46:47.244Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>        <div id="aplayer-IUtGCBbK" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-IUtGCBbK"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "当一个斜杆青年怎么样",              author: "wistbean|肯定会",              url: "/podcast/49.mp3",              pic: "",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><p>你是不是常常听到这样的话：</p><p>你想实现财富自由么？你想活出自己，遵从自己内心去做自己喜欢的事情么？你想拥有一切你想要的东西么？</p><blockquote><p>那就去做梦吧！</p></blockquote><p>但今天，我想说，不用去做梦，也许也可以做到，你信么？今天跟你谈谈斜杆青年。</p><h1 id="什么是斜杆青年"><a href="#什么是斜杆青年" class="headerlink" title="什么是斜杆青年"></a>什么是斜杆青年</h1><p>斜杆青年,说的是拥有多重职业和身份的多元生活人群。</p><p>斜杆，就是 / ，如果有人在做文字版的自我介绍，诸如：「职位：作者/开发者/摄影师」 ，那么就说明他是一个斜杆人士。他们在自己喜欢的领域，开启自己的斜杆人生。</p><h1 id="为什么要当一名斜杆青年"><a href="#为什么要当一名斜杆青年" class="headerlink" title="为什么要当一名斜杆青年"></a>为什么要当一名斜杆青年</h1><p>很久以来，人们都觉得你的经验价值在于你是否长期的，单一的在你熟悉的领域做一件事，这样才能成为专家。话说的没错，但是如果能够「一专多能」，是不是更好呢？毕竟人就活一次，可以多发掘自己身上更多的可能性嘛。</p><p>有很多人想要当一个斜杆青年，但是又觉得好像违背了什么，害怕些什么，感觉自己内心想要的和现实不一致。</p><p>但其实自己的生命意义并不是要按照别人的规定来，<em>生命的意义本身就没有绝对的标准，没有好坏，没有对错</em>。能让自己的生命更加的完整，为什么不做呢？</p><p>看过一句很触动我的话：<em>人可以不成功，但是不能不听从自己的内心。</em></p><h1 id="斜杆青年好当么？"><a href="#斜杆青年好当么？" class="headerlink" title="斜杆青年好当么？"></a>斜杆青年好当么？</h1><p>如果放在以前，斜杆青年确实不太实际，但是现在网络科技突飞猛进的发展着，就没有什么不可能的事，斜杆已经是全新的价值观，是一个新时代的产物了。</p><p>斜杆青年有两个显著的特点：</p><blockquote><ol><li>多重职业</li><li>多重收入</li></ol></blockquote><p>一个程序员除了敲代码外，他也可以帮人摄影，他也可以写作。一个医生除了帮人看病外，他也可以讲课，科普知识。他们不给自己设限，不断学习，锻炼自个儿，成为斜杆，拥有更多的收入。这本身就是一件很酷的事。</p><p>看起来好像不错啊，但是你愿意打破现状，勇敢的走出第一步，给自己加上一条斜杆么？</p><p>斜杆青年在追求尽早的实现财富自由，但是重点不在财富上，而是「自由」两字，能够有更多自己的时间分配自由，有拒绝别人的自由，做自己想做的事情。</p><p>在斜杆这条路上，需要很强的自制力，不断的学习，自我知识积累，有多元的兴趣和专长，还要不停的试错，不停的实践。在斜杆的人群里，成功的对立面不是失败，而是学习。</p><p>对于我自己而言，我自己有着开放的心态，我觉得以后将会越来越少人朝九晚五按部就班的工作，远程办公，数字游民的生活方式会越来越流行，我不会给自己的人生设限，前两天主持人李咏和大侠金庸相继逝世，都在惋惜和心痛，但不得不承认，再牛逼的人，也有一天会走到终点，所以我觉得人就活一次，人生长度有限，但是生活的维度可以多重。</p><p>假如你在自己的领域中还额外会别的技能，这不就加分了吗?我经常会鼓励身边的朋友在业余的时间学习点自己感兴趣的东西，说不定以后这技能会给自己带来惊喜呢。</p><p>比如说你会技术，但是你又会写作，还会产品，还长得好看等，那么你会发现，你接下来要走的路比其他「单一」的人会宽的多。</p><p>像我现在是一名技术人，但是也在写作，做视频，做podcast，做产品等，这都是我，我会花更多的时间去学习，去执行，一步一步的去完善我的斜杆人生。</p><p>因为我想成长到配得上「自由」的生活，毕竟，人只有在为自己努力的时候，才会拥有最强大的动力。</p><p>当然，活法有很多种，这只是其中的一种生活方式，做到骨灰级的专家和多元发展，都没有绝对的标准，也没有好坏之分，不同的人，想法不同罢了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="podcast" scheme="https://wistbean.github.io/categories/podcast/"/>
    
      <category term="肯定会电台" scheme="https://wistbean.github.io/categories/podcast/%E8%82%AF%E5%AE%9A%E4%BC%9A%E7%94%B5%E5%8F%B0/"/>
    
      <category term="个人提升" scheme="https://wistbean.github.io/categories/podcast/%E8%82%AF%E5%AE%9A%E4%BC%9A%E7%94%B5%E5%8F%B0/%E4%B8%AA%E4%BA%BA%E6%8F%90%E5%8D%87/"/>
    
    
      <category term="个人提升" scheme="https://wistbean.github.io/tags/%E4%B8%AA%E4%BA%BA%E6%8F%90%E5%8D%87/"/>
    
      <category term="肯定会电台" scheme="https://wistbean.github.io/tags/%E8%82%AF%E5%AE%9A%E4%BC%9A%E7%94%B5%E5%8F%B0/"/>
    
  </entry>
  
  <entry>
    <title>Python爬取当当网最受欢迎的 500 本书</title>
    <link href="https://wistbean.github.io/python-spider-dangdang.html"/>
    <id>https://wistbean.github.io/python-spider-dangdang.html</id>
    <published>2018-10-28T08:03:48.000Z</published>
    <updated>2018-12-27T13:46:47.543Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>想看好书？想知道哪些书比较多人推荐，最好的方式就是看数据，接下来用 Python 爬取当当网五星图书榜 TOP500 的书籍，或许能给我们参考参考！</p><h1 id="Python爬取目标"><a href="#Python爬取目标" class="headerlink" title="Python爬取目标"></a>Python爬取目标</h1><blockquote><ol><li>爬取当当网前500本受欢迎的书籍</li><li>解析书籍名称，作者，排名，推荐程度和五星评分次数数据。</li><li>将数据存写入到本地文件</li></ol></blockquote><h1 id="分析网页"><a href="#分析网页" class="headerlink" title="分析网页"></a>分析网页</h1><p>在<a href="http://bang.dangdang.com/books/fivestars/01.00.00.00.00.00-recent30-0-0-1-1" target="_blank" rel="noopener">当当网五星图书榜</a>这个网址中,我们可以看到这里列出来了五星图书榜：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/book-1.png" alt="当当网五星图书榜" title="">                </div>                <div class="image-caption">当当网五星图书榜</div>            </figure><p>通过源码可以看到，我们想要的信息被包裹在<code>&lt;li&gt;</code>标签中：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/book0.png" alt="当当网源码" title="">                </div>                <div class="image-caption">当当网源码</div>            </figure><p>可以看到我们要的这些数据都在这：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/book1.png" alt="关键数据" title="">                </div>                <div class="image-caption">关键数据</div>            </figure><p>当我们点击下一页的时候，url 地址会发生改变（最后的数字会加1）：<br>第一页的 url 是：<a href="http://bang.dangdang.com/books/fivestars/01.00.00.00.00.00-recent30-0-0-1-1" target="_blank" rel="noopener">http://bang.dangdang.com/books/fivestars/01.00.00.00.00.00-recent30-0-0-1-1</a><br>第二页的 url 是：<a href="http://bang.dangdang.com/books/fivestars/01.00.00.00.00.00-recent30-0-0-1-2" target="_blank" rel="noopener">http://bang.dangdang.com/books/fivestars/01.00.00.00.00.00-recent30-0-0-1-2</a><br>…<br>我们等会可以通过这个变量来实现多页加载数据。</p><h1 id="Python请求网页"><a href="#Python请求网页" class="headerlink" title="Python请求网页"></a>Python请求网页</h1><p>我们使用 requests 来请求当当网的地址,定义一个<code>get_one_page</code>，将会返回 HTML 源代码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_one_page</span><span class="params">(url)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        response = requests.get(url)</span><br><span class="line">        <span class="keyword">if</span> response.status_code == <span class="number">200</span>:</span><br><span class="line">            <span class="keyword">return</span> response.text</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">None</span></span><br><span class="line">    <span class="keyword">except</span> RequestException:</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">None</span></span><br></pre></td></tr></table></figure><p>打印出来就是这样，部分截图如下：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/book2.png" alt="源代码" title="">                </div>                <div class="image-caption">源代码</div>            </figure><h1 id="正则解析"><a href="#正则解析" class="headerlink" title="正则解析"></a>正则解析</h1><p>源代码那么多数据，但是对我们来说只需要籍名称，作者，排名，推荐程度和五星评分次数数据，所以我们要用正则表达式来过滤一下，使用 re 模块，定义匹配规则：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;li&gt;.*?list_num.*?&gt;(.*?)&lt;/div&gt;.*?pic.*?src="(.*?)".*?/&gt;&lt;/a&gt;.*?name"&gt;&lt;a.*?title="(.*?)"&gt;.*?tuijian"&gt;(.*?)&lt;/span&gt;.*?publisher_info.*?title="(.*?)".*?biaosheng.*?&lt;span&gt;(.*?)&lt;/span&gt;.*?&lt;/li&gt;</span><br></pre></td></tr></table></figure><p>定义 <code>parse_one_page</code> ,返回每次匹配到的数据，解析成字典形式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parse_one_page</span><span class="params">(html)</span>:</span></span><br><span class="line">    pattern = re.compile(<span class="string">'&lt;li&gt;.*?list_num.*?&gt;(.*?)&lt;/div&gt;.*?pic.*?src="(.*?)".*?/&gt;&lt;/a&gt;.*?name"&gt;&lt;a.*?title="(.*?)"&gt;.*?tuijian"&gt;(.*?)&lt;/span&gt;.*?publisher_info.*?title="(.*?)".*?biaosheng.*?&lt;span&gt;(.*?)&lt;/span&gt;.*?&lt;/li&gt;'</span>,re.S)</span><br><span class="line">    items = re.findall(pattern,html)</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> items:</span><br><span class="line">        <span class="keyword">yield</span> &#123;</span><br><span class="line">            <span class="string">'index'</span>:item[<span class="number">0</span>],</span><br><span class="line">            <span class="string">'iamge'</span>:item[<span class="number">1</span>],</span><br><span class="line">            <span class="string">'title'</span>:item[<span class="number">2</span>],</span><br><span class="line">            <span class="string">'tuijian'</span>:item[<span class="number">3</span>],</span><br><span class="line">            <span class="string">'author'</span>:item[<span class="number">4</span>],</span><br><span class="line">            <span class="string">'times'</span>:item[<span class="number">5</span>],</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h1 id="将数据写入文件"><a href="#将数据写入文件" class="headerlink" title="将数据写入文件"></a>将数据写入文件</h1><p>我们已经拿到了每次请求的数据，并且解析匹配好了，那么将每次得到的数据写入<code>book.txt</code>文件中去：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">write_content_to_file</span><span class="params">(content)</span>:</span></span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'book.txt'</span>,<span class="string">'a'</span>,encoding=<span class="string">'UTF-8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(json.dumps(content,ensure_ascii=<span class="keyword">False</span>) + <span class="string">'\n'</span>)</span><br><span class="line">        f.close()</span><br></pre></td></tr></table></figure><h1 id="多页请求"><a href="#多页请求" class="headerlink" title="多页请求"></a>多页请求</h1><p>我们要获取 TOP500 ，当当网每页给出 20 条数据，我们需要 25 页的数据，一开始我们在分析网页的时候知道 URL 会选择页数改变最后的参数，所以我们可以用循环来请求所有的数据：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">(page)</span>:</span></span><br><span class="line">    url = <span class="string">"http://bang.dangdang.com/books/fivestars/01.00.00.00.00.00-recent30-0-0-1-"</span> + str(page)</span><br><span class="line">    html = get_one_page(url)</span><br><span class="line">    parse_one_page(html)</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> parse_one_page(html):</span><br><span class="line">        print(item)</span><br><span class="line">        write_content_to_file(item)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">26</span>):</span><br><span class="line">        main(i)</span><br></pre></td></tr></table></figure><h1 id="运行爬取"><a href="#运行爬取" class="headerlink" title="运行爬取"></a>运行爬取</h1><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/book3.gif" alt="抓取过程" title="">                </div>                <div class="image-caption">抓取过程</div>            </figure><p>可以看到我们将五百条数据抓取下来了，并且在项目中多了一个<code>book.txt</code>文件，打开看看有没将数据写入：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/book04.png" alt="抓取结果" title="">                </div>                <div class="image-caption">抓取结果</div>            </figure><p>ok，以上我们就把当当网最受欢迎的 500 本书爬取下来了！</p><h1 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h1><ol><li><a href="https://wistbean.github.io/python-tutorial.html">python3入门基础有趣的教程</a></li><li><a href="https://wistbean.github.io/python-spider-meizi.html">Python爬虫基础：爬取妹子图片并保存到本地</a></li><li><a href="https://wistbean.github.io/how-to-learn-python-spider.html">python 爬虫应该学习什么知识点？</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="python" scheme="https://wistbean.github.io/categories/python/"/>
    
    
      <category term="教程" scheme="https://wistbean.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="python" scheme="https://wistbean.github.io/tags/python/"/>
    
      <category term="python爬虫" scheme="https://wistbean.github.io/tags/python%E7%88%AC%E8%99%AB/"/>
    
      <category term="python基础" scheme="https://wistbean.github.io/tags/python%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>改变了生活的 5 秒法则</title>
    <link href="https://wistbean.github.io/5s-can-change-your-life.html"/>
    <id>https://wistbean.github.io/5s-can-change-your-life.html</id>
    <published>2018-10-26T08:50:19.000Z</published>
    <updated>2019-02-23T17:48:41.623Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>        <div id="aplayer-yIFoVIdw" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-yIFoVIdw"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "改变了生活的 5 秒钟",              author: "wistbean|肯定会",              url: "/podcast/48.mp3",              pic: "",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><p>5秒钟的时间很短，5秒钟可以运行一段时间复杂度不是很高的代码，5秒钟也可以看一个段子，5秒钟可以发一条朋友圈。掉在地上的食物，在 5 秒之内捡起来依然可以吃。有人下了一部一个多小时的片，在开头 5s 的 FBI Warning 就完事了。</p><p>不过今天，要说的不是在 5 秒钟之内可以完成什么事，谁做的事多。而是要来谈谈这能够改变生活的 5 秒法则。</p><p>不知道你有没有遇到这种情况，就是你在地铁上或者在电梯里，遇到了一个让你眼前一亮的人，你很想跟他说句话，甚至想加个微信，但是犹豫了半天，到站了，人家下车，你还没开口。</p><p>你在公司开会的时候，你有一个非常好的想法，你犹豫着要不要发言，你知道这是好事，但是到散会了你还是没有说出来。</p><p>你想着我要多看点书，提升自己，多学习，但是好像都只是想想，很少付诸行动。</p><p>你想减肥，想<a href="https://wistbean.github.io/fitness">健身</a>…</p><p>类似这样的事情还有很多，我们都知道，成长的机会就在于我们要走出舒适圈，去挑战和学习，但是我们都不去做。这是为什么呢？</p><p>是因为：</p><blockquote><ol><li>知道做什么是永远不够的。</li><li>知道为什么需要这样做是永远不够的。</li></ol></blockquote><p>并不是一句简单的一句 「就是干」 就完事了，要是这么简单的话，我们可以拥有在这个世界上所有我们想要拥有的东西。</p><p>我们在做一件事情之前，我们的「思想」和「感觉」都会进行斗争，在我们知道应该要去做什么和我们想做什么之间，往往我们会选择后者。</p><p>也就是我们<code>「思想」vs「感觉」</code> 中，「感觉」不需要费太多力气就赢了。</p><p>所以我们在行动之前，必须要有一个非常基础的事情发生，让它来辅助我们的思想来攻克自己的感觉。</p><p>5秒法则是<a href="https://melrobbins.com/about/" target="_blank" rel="noopener">梅尔﹒罗宾斯 （Mel Robbins）</a>提出来的。也是她在生活中最糟糕的时刻发现的这一法则。</p><p>那个时候她的人生和工作都遇到了非常大的瓶颈，她的丈夫的餐馆生意也因为金融危机失败了，家里几乎破产。</p><p>遇到了人生的低谷总是让人不安，她的起床变成了一件非常困难的事情，每天早上闹钟响起的时候，她都知道得起床了，可是就是一次又一次的打瞌睡，起不来。</p><p>她也知道需要去找一份工作来增加家庭的收入，要对自己的丈夫好一点，不要因为这样的危机影响了她们之间的关系等等，但是，她就是做不到啊，听了很多道理，却过不好她的一生！</p><p>有一天早上，闹钟依旧响起了，她在心中给自己这样一个信念，倒数 5 秒后就起床，于是她在心中开始倒数起来： 5-4-3-2-1，起床！</p><p>她真的起床了，她突然发现这 5 秒钟给她带来了改变，于是开始在她的生活中运用 5 秒钟法则，她发现自己的生活得到了很大的改善，每当她知道需要做什么的时候，就会在心中默默的倒数 5 秒钟，然后行动！</p><blockquote><p>5-4-3-2-1. action!!!</p></blockquote><p>可能有朋友会有疑问，就这么简单？ 倒数 5 秒钟真的能够改变？</p><p>我们知道要做什么事情真的是远远不够的，我们需要有某种力量带我们进入行动的状态，而不是坐等动力的到来，<code>动力又不是你娘亲！</code>说来就来？</p><p>5秒法则的定义是这样的：</p><blockquote><p>如果你有一个冲动去做一个目标，你必须在 5 秒内移动你的身体去做，要不然的话你的大脑就会抹杀这个想法。</p></blockquote><p>当我们真的迈出那一步的时候，开始行动的时候，我们的大脑就会重建习惯，然后抹去以前已有的习惯。</p><p>不管你想健身，学英语，创业，提升自己，无论行动看起来是多么的微不足道，没关系，你已经知道应该做什么事情了，给自己 5 秒钟时间，现在就行动起来。 RIGHT NOW!!</p><p>在写着篇文章之前，我知道看完书要总结，要记录，要分享，但是我的感觉告诉我，晚点再写吧，要不躺床上，玩手机先。我知道我的思想又跟我的感觉在battle了，我闭上眼睛，倒数 5 个数， 5-4-3-2-1 ，将自己的身体移动到电脑前，打开IDEA,写了起来…这不，行动起来之后真是开心。</p><p>请允许我再说一遍：<code>如果你有一个冲动去做一个目标，你必须在 5 秒内移动你的身体去做，要不然的话你的大脑就会抹杀这个想法。</code></p><p>事实上，你花了时间完了这篇文章，你就已经在花时间投资自己了，这就是你和别人不一样的地方。</p><blockquote><p>参考文献 ： 《5 SECOND RULE》 ,梅尔·罗宾斯（Mel Robbins）</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="podcast" scheme="https://wistbean.github.io/categories/podcast/"/>
    
      <category term="肯定会电台" scheme="https://wistbean.github.io/categories/podcast/%E8%82%AF%E5%AE%9A%E4%BC%9A%E7%94%B5%E5%8F%B0/"/>
    
      <category term="个人提升" scheme="https://wistbean.github.io/categories/podcast/%E8%82%AF%E5%AE%9A%E4%BC%9A%E7%94%B5%E5%8F%B0/%E4%B8%AA%E4%BA%BA%E6%8F%90%E5%8D%87/"/>
    
    
      <category term="个人提升" scheme="https://wistbean.github.io/tags/%E4%B8%AA%E4%BA%BA%E6%8F%90%E5%8D%87/"/>
    
      <category term="肯定会电台" scheme="https://wistbean.github.io/tags/%E8%82%AF%E5%AE%9A%E4%BC%9A%E7%94%B5%E5%8F%B0/"/>
    
      <category term="精华分享" scheme="https://wistbean.github.io/tags/%E7%B2%BE%E5%8D%8E%E5%88%86%E4%BA%AB/"/>
    
      <category term="5 秒法则" scheme="https://wistbean.github.io/tags/5-%E7%A7%92%E6%B3%95%E5%88%99/"/>
    
      <category term="拖延的解决" scheme="https://wistbean.github.io/tags/%E6%8B%96%E5%BB%B6%E7%9A%84%E8%A7%A3%E5%86%B3/"/>
    
  </entry>
  
  <entry>
    <title>「4-1」 Java文件服务器 FastDFS 的搭建教程</title>
    <link href="https://wistbean.github.io/java-ssm-4-1.html"/>
    <id>https://wistbean.github.io/java-ssm-4-1.html</id>
    <published>2018-10-23T15:23:00.000Z</published>
    <updated>2019-02-23T17:53:55.658Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="SSM视频教程第4-1节：文件服务器搭建"><a href="#SSM视频教程第4-1节：文件服务器搭建" class="headerlink" title="SSM视频教程第4-1节：文件服务器搭建"></a>SSM视频教程第4-1节：文件服务器搭建</h1><iframe src="//player.bilibili.com/player.html?aid=34587529&cid=60592542&page=1" width="100%" height="436" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><h1 id="什么是-FastDFS"><a href="#什么是-FastDFS" class="headerlink" title="什么是 FastDFS"></a>什么是 FastDFS</h1><p>开源项目地址：<a href="https://github.com/happyfish100/fastdfs" target="_blank" rel="noopener">fastdfs</a></p><h2 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h2><ol><li>文件存储</li><li>文件同步和文件的访问</li><li>解决高并发和负载均衡的问题</li></ol><h2 id="工作方式"><a href="#工作方式" class="headerlink" title="工作方式"></a>工作方式</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/fastdfs.png" alt="FastDFS工作原理" title="">                </div>                <div class="image-caption">FastDFS工作原理</div>            </figure><h1 id="搭建FastDFS"><a href="#搭建FastDFS" class="headerlink" title="搭建FastDFS"></a>搭建FastDFS</h1><h2 id="优惠购买搬瓦工方式"><a href="#优惠购买搬瓦工方式" class="headerlink" title="优惠购买搬瓦工方式"></a>优惠购买搬瓦工方式</h2><p><a href="https://wistbean.github.io/banwagong-coupon.html">购买搬瓦工VPS省钱攻略：获取搬瓦工优惠码</a></p><h2 id="FastDFS搭建文档"><a href="#FastDFS搭建文档" class="headerlink" title="FastDFS搭建文档"></a>FastDFS搭建文档</h2><p><a href="https://github.com/happyfish100/fastdfs/wiki" target="_blank" rel="noopener">fastdfs/wiki</a></p><h1 id="相关教程"><a href="#相关教程" class="headerlink" title="相关教程"></a>相关教程</h1><ul><li><a href="https://www.cnblogs.com/chiangchou/p/fastdfs.html#_label1_1" target="_blank" rel="noopener">用FastDFS一步步搭建文件管理系统</a></li><li><a href="https://blog.csdn.net/XY_2017ChaseDream/article/details/80076932" target="_blank" rel="noopener">FastDFS分布式文件系统搭建教程</a></li></ul><h1 id="SSM视频教程目录"><a href="#SSM视频教程目录" class="headerlink" title="SSM视频教程目录"></a>SSM视频教程目录</h1><ul><li><a href="https://wistbean.github.io/java-ssm-video.html#SSM%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B%E7%9B%AE%E5%BD%95">SSM视频教程目录</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Java" scheme="https://wistbean.github.io/categories/Java/"/>
    
      <category term="Java SSM视频教程" scheme="https://wistbean.github.io/categories/Java/Java-SSM%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="教程" scheme="https://wistbean.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Java" scheme="https://wistbean.github.io/tags/Java/"/>
    
      <category term="Intellij IDEA" scheme="https://wistbean.github.io/tags/Intellij-IDEA/"/>
    
      <category term="Java视频教程" scheme="https://wistbean.github.io/tags/Java%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/"/>
    
      <category term="项目实战" scheme="https://wistbean.github.io/tags/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/"/>
    
      <category term="分布式" scheme="https://wistbean.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
      <category term="SSM" scheme="https://wistbean.github.io/tags/SSM/"/>
    
      <category term="码农商城" scheme="https://wistbean.github.io/tags/%E7%A0%81%E5%86%9C%E5%95%86%E5%9F%8E/"/>
    
      <category term="EasyUI" scheme="https://wistbean.github.io/tags/EasyUI/"/>
    
      <category term="商品分类管理" scheme="https://wistbean.github.io/tags/%E5%95%86%E5%93%81%E5%88%86%E7%B1%BB%E7%AE%A1%E7%90%86/"/>
    
      <category term="FastDFS" scheme="https://wistbean.github.io/tags/FastDFS/"/>
    
      <category term="SecureCRT" scheme="https://wistbean.github.io/tags/SecureCRT/"/>
    
  </entry>
  
  <entry>
    <title>优惠购买搬瓦工搭建自己的VPN并开启BBR加速访问</title>
    <link href="https://wistbean.github.io/use-banwagong.html"/>
    <id>https://wistbean.github.io/use-banwagong.html</id>
    <published>2018-10-21T20:23:59.000Z</published>
    <updated>2019-03-01T07:33:58.448Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="为什么选择搬瓦工VPS"><a href="#为什么选择搬瓦工VPS" class="headerlink" title="为什么选择搬瓦工VPS"></a>为什么选择搬瓦工VPS</h1><p>之前购买了不同商家的云服务器，有阿里云的VPS，也有腾讯云VPS，还有亚马逊的VPS，最后觉得最好用的还是搬瓦工VPS。</p><p>相比较而言性价比高，而且搬瓦工是国外的，你懂的，没有什么审核限制，一般来说，使用搬瓦工搭建一个自己的 VPN 来访问 Google 查询资料，看看文献什么的速度还是很快的。</p><h1 id="搬瓦工优惠码"><a href="#搬瓦工优惠码" class="headerlink" title="搬瓦工优惠码"></a>搬瓦工优惠码</h1><p>很多人不知道，搬<a href="https://www.bwh88.net/aff.php?aff=32874" target="_blank" rel="noopener">搬瓦工官网</a>隐藏了一个彩蛋，就是隐藏了优惠码，这个优惠码可以省掉一些费用，比如一年 19 刀的VPS，使用优惠码的时候只需 18 刀多一点，简直不能再划算了。</p><p>点击进入<a href="https://www.bwh88.net/aff.php?aff=32874" target="_blank" rel="noopener">搬瓦工官网</a>进行注册就可以了，注册完之后可以选择以下可以获取优惠码的服务器，如果是个人使用的话，我觉得最便宜的已经很够用了，每个月500G的流量基本用不完的。</p><table><thead><tr><th>搬瓦工配置</th><th>搬瓦工费用</th><th>优惠链接</th></tr></thead><tbody><tr><td><em>SPECIAL 40G KVM PROMO V3 - LOS ANGELES - CN2  </em> <br>  SSD硬盘: 40  GB RAID-10 <br> RAM内存: 2048   MB <br> CPU处理器: 1x Intel Xeon <br> Transfer流量: 2000  GB/月 <br> 连接速度: 1 Gigabit <br> 洛杉矶机房，CN2路线，使用中国的直线路线，速度加快</td><td>$27.99/季</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=58" target="_blank" rel="noopener">点击进入</a></td></tr><tr><td><em>SPECIAL 20G KVM PROMO V3 - LOS ANGELES - CN2 </em> <br>  SSD硬盘: 20 GB RAID-10 <br> RAM内存: 1024  MB <br> CPU处理器: 1x Intel Xeon <br> Transfer流量: 1000  GB/月 <br> 连接速度: 1 Gigabit <br> 洛杉矶机房，CN2路线，使用中国的直线路线，速度加快</td><td>$29.99 /半年</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=57" target="_blank" rel="noopener">点击进入</a></td></tr><tr><td><em>80G KVM – PROMO</em> <br> SSD硬盘: 80 GB RAID-10<br>RAM内存: 4 GB<br>CPU处理器: 4x Intel Xeon<br>Transfer流量: 3 TB/mo<br>连接速度: 1 Gigabit<br>Multiple locations</td><td>$19.99/月</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=46" target="_blank" rel="noopener">点击进入</a></td></tr><tr><td><em>20G KVM – PROMO</em> <br> SSD硬盘: 20 GB RAID-10 <br>RAM内存: 1024 MB <br>CPU处理器: 2x Intel Xeon <br>Transfer流量: 1 TB/mo <br>连接速度: 1 Gigabit <br>Multiple locations</td><td>$49.99/年</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=44" target="_blank" rel="noopener">点击进入</a></td></tr><tr><td><em>40G KVM – PROMO</em> <br> SSD硬盘: 40 GB RAID-10 <br>RAM内存: 2 GB <br>CPU处理器: 3x Intel Xeon <br>Transfer流量: 2 TB/mo <br>连接速度: 1 Gigabit <br>Multiple locations</td><td>$99.99/年</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=45" target="_blank" rel="noopener">点击进入</a></td></tr><tr><td><em>160G KVM – PROMO</em> <br> SSD硬盘: 160 GB RAID-10<br>RAM内存: 8 GB<br>CPU处理器: 5x Intel Xeon<br>Transfer流量: 4 TB/mo<br>连接速度: 1 Gigabit<br>Multiple locations</td><td>$39.99/月</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=47" target="_blank" rel="noopener">点击进入</a></td></tr><tr><td><em>3200G KVM – PROMO</em> <br> SSD硬盘: 320 GB RAID-10<br>RAM内存: 16 GB<br>CPU处理器: 6x Intel Xeon<br>Transfer流量: 5 TB/mo<br>连接速度: 1 Gigabit<br>Multiple locations</td><td>$79.99/月</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=48" target="_blank" rel="noopener">点击进入</a></td></tr></tbody></table><p>当你进到这个页面的时候呢，别急着点击「Add to Cart」添加到购物车，这里面暗藏着一个优惠码，很多人不知道，使用浏览器查看源代码，<br>chrome浏览器的话按F12，然后搜索「code」，你会发现有一个 「Try this promo code: xxxx 」，这个xxxx就是优惠码，你把他复制下来，待会有用。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/vpn4.png" alt="使用搬瓦工搭建VPN" title="">                </div>                <div class="image-caption">使用搬瓦工搭建VPN</div>            </figure><p>页面的 Location 就是选择服务器的地址，到时访问谷歌的时候会显示你当前访问的地址。好了，我们点击「Add to Cart」。</p><p>接下来，进入结算页面，我们刚才复制的优惠码就派上用场了，将你刚刚复制的优惠码复制进去然后点击 「Validate Code」，看！是不是优惠了！一般人不知道这种操作:</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/vpn5.png" alt="使用搬瓦工搭建VPN" title="">                </div>                <div class="image-caption">使用搬瓦工搭建VPN</div>            </figure><p>接着点击「CheckOut」完成付款即可。付款的时候选择 Alipay 就可以使用支付宝付款。</p><h1 id="连接到搬瓦工"><a href="#连接到搬瓦工" class="headerlink" title="连接到搬瓦工"></a>连接到搬瓦工</h1><p>购买完毕后你就拥有一台你自己的服务器了，接着点击Services下的MyServices，可以看到你的服务器：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/vpn6.png" alt="使用搬瓦工搭建VPN" title="">                </div>                <div class="image-caption">使用搬瓦工搭建VPN</div>            </figure><p>我们点击「KiwiVM Control Panel」进入管理界面：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/vpn7.png" alt="使用搬瓦工搭建VPN" title="">                </div>                <div class="image-caption">使用搬瓦工搭建VPN</div>            </figure><p>可以看到你服务器的信息:</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/vpn9.png" alt="使用搬瓦工搭建VPN" title="">                </div>                <div class="image-caption">使用搬瓦工搭建VPN</div>            </figure><p>一般来说，菜单下方有一个 openvpn 的快速安装方式，但是据说很容易被强，所以现在不推荐使用这种方式搭建自己的VPN。</p><h1 id="使用搬瓦工搭建shadowsocks"><a href="#使用搬瓦工搭建shadowsocks" class="headerlink" title="使用搬瓦工搭建shadowsocks"></a>使用搬瓦工搭建shadowsocks</h1><p>有了<a href="https://bwh88.net/aff.php?aff=32874" target="_blank">搬瓦工</a>服务器的IP地址和端口,我们就可以连接了：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/pic1.png" alt="搬瓦工搭建ss" title="">                </div>                <div class="image-caption">搬瓦工搭建ss</div>            </figure><p>账号是root，密码可以在这里获取：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/pic2.png" alt="搬瓦工搭建ss" title="">                </div>                <div class="image-caption">搬瓦工搭建ss</div>            </figure><p>远程连接工具我一直用的是 <a href="https://www.vandyke.com/products/securecrt/" target="_blank" rel="noopener">SecureCRT</a> , 当然你也可以使用其它的 SSH 工具。<br>破解版的SecureCRT可以在百度网盘这里获取：</p><ul><li>链接: <a href="https://pan.baidu.com/s/11W4WHjCjmiNw6einQNrcPg" target="_blank" rel="noopener">https://pan.baidu.com/s/11W4WHjCjmiNw6einQNrcPg</a></li><li>提取码: tyux</li></ul><p>连接到你的搬瓦工服务器之后，接下来几个命令让你快速搭建一个属于自己的ss服务器：</p><ol><li><p>搬瓦工安装 wget</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install wget</span><br></pre></td></tr></table></figure></li><li><p>搬瓦工执行安装shadowsocks</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget –no-check-certificate -O shadowsocks.sh https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks.sh</span><br></pre></td></tr></table></figure></li><li><p>搬瓦工获取shadowsocks.sh读取权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x shadowsocks.sh</span><br></pre></td></tr></table></figure></li><li><p>设置密码和端口号<br>当你输入<code>./shadowsocks.sh 2&gt;&amp;1 | tee shadowsocks.log</code>后就可以设置密码和端口号了：</p></li></ol><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/ss1.png" alt="搬瓦工搭建ss" title="">                </div>                <div class="image-caption">搬瓦工搭建ss</div>            </figure><ol start="5"><li>选择加密方式<br>设置完密码和端口号之后，我们选择加密方式，这里选择 7：<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/ss2.png" alt="搬瓦工搭建ss" title="">                </div>                <div class="image-caption">搬瓦工搭建ss</div>            </figure>接着按任意键进行安装。</li><li>安装完成<br>等一会之后，就安装完成了，它会给你显示你需要连接vpn的信息：<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/ss3.png" alt="搬瓦工搭建ss" title="">                </div>                <div class="image-caption">搬瓦工搭建ss</div>            </figure>可以看到需要连接ss的ip地址，密码，端口，和加密方式。</li></ol><p>将这些信息保存起来，那么这时候你就可以使用它们来科学上网啦。</p><h1 id="开始使用搬瓦工VPN"><a href="#开始使用搬瓦工VPN" class="headerlink" title="开始使用搬瓦工VPN"></a>开始使用搬瓦工VPN</h1><p>打开 Shadowsocks 客户端，输入ip地址，密码，端口，和加密方式。接着点击确定，右下角会有个小飞机按钮，右键–&gt;启动代理。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/ss4.png" alt="搬瓦工搭建ss" title="">                </div>                <div class="image-caption">搬瓦工搭建ss</div>            </figure><p>这时候就可以科学上网了。</p><p>不过速度并不是快到飞起来，所以接下来就可以使用 BBR 加速了。</p><h1 id="搬瓦工开启BBR加速"><a href="#搬瓦工开启BBR加速" class="headerlink" title="搬瓦工开启BBR加速"></a>搬瓦工开启BBR加速</h1><h1 id="使用BBR加速器"><a href="#使用BBR加速器" class="headerlink" title="使用BBR加速器"></a>使用BBR加速器</h1><p>让访问速度加速，飞起来！使用 BBR 加速工具。</p><h2 id="安装-BBR"><a href="#安装-BBR" class="headerlink" title="安装 BBR"></a>安装 BBR</h2><pre><code>wget --no-check-certificate https://github.com/teddysun/across/raw/master/bbr.sh</code></pre><h2 id="获取读写权限"><a href="#获取读写权限" class="headerlink" title="获取读写权限"></a>获取读写权限</h2><pre><code>chmod +x bbr.sh</code></pre><h2 id="启动BBR安装"><a href="#启动BBR安装" class="headerlink" title="启动BBR安装"></a>启动BBR安装</h2><pre><code>./bbr.sh</code></pre><p>接着按任意键，开始安装，坐等一会。安装完成一会之后它会提示我们是否重新启动vps，我们输入 y 确定重启服务器。</p><p>重新启动之后，输入 <code>lsmod | grep bbr</code> 如果看到 tcp_bbr 就说明 BBR 已经启动了。</p><p>再访问一下 Youtube，1080p 超高清，很顺畅不卡顿！</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/ss7.png" alt="搬瓦工搭建ss" title="">                </div>                <div class="image-caption">搬瓦工搭建ss</div>            </figure><h1 id="关于搬瓦工VPN的使用"><a href="#关于搬瓦工VPN的使用" class="headerlink" title="关于搬瓦工VPN的使用"></a>关于搬瓦工VPN的使用</h1><p>下载 Shadowsocks 软件，填上信息就可以访问了，不过iPhone的客户端需要收费的，这时候可以再搭建一个VPN专门用来手机使用连接，具体搭建和使用教程也很简单，可以看这篇文章：<a href="https://wistbean.github.io/ipsec,l2tp_vpn.html">快速搭建一个属于自己的IPsec/L2TP VPN</a></p><h1 id="搬瓦工被墙了怎么办？"><a href="#搬瓦工被墙了怎么办？" class="headerlink" title="搬瓦工被墙了怎么办？"></a>搬瓦工被墙了怎么办？</h1><p>时不时有朋友问我搬瓦工被墙了的事，其实按照以上的教程搭建是稳如狗的，只不过不用太高调使用，搭建VPN是用来查询资料，学习的。</p><h2 id="可能的解决方案"><a href="#可能的解决方案" class="headerlink" title="可能的解决方案"></a>可能的解决方案</h2><p>在禁令的情况下，最好的解决方案是彻底清除可能触发禁令的所有服务，并等待一段时间取消禁令。</p><p>另外可以换ip，如果您需要用干净的IP替换禁用的IP，有两种选择：</p><h3 id="选项1"><a href="#选项1" class="headerlink" title="选项1"></a>选项1</h3><p>免费IP替换。允许您每隔10周免费更换一个带有干净IP的黑名单IP。要访问此功能，首先像往常一样登录KiwiVM，然后访问以下隐藏页面（复制+粘贴链接到浏览器的地址栏）：</p><p><a href="https://kiwivm.64clouds.com/main-exec.php?mode=blacklistcheck" target="_blank" rel="noopener">https://kiwivm.64clouds.com/main-exec.php?mode=blacklistcheck</a></p><h3 id="选项2"><a href="#选项2" class="headerlink" title="选项2"></a>选项2</h3><p>手动IP替换（收费）可从以下链接获得：<br><a href="https://bwh88.net/ipchange.php" target="_blank" rel="noopener">https://bwh88.net/ipchange.php</a></p><p>换完ip重新安装即可。</p><h1 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h1><p><a href="https://wistbean.github.io/categories/%E6%90%AC%E7%93%A6%E5%B7%A5/">搬瓦工搭建VPN</a><br><a href="https://zhuanlan.zhihu.com/p/42683791" target="_blank" rel="noopener">搬瓦工选购指南</a><br><a href="https://segmentfault.com/a/1190000016143959" target="_blank" rel="noopener">使用搬瓦工快速搭建自己的VPN</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="vpn" scheme="https://wistbean.github.io/categories/vpn/"/>
    
      <category term="搬瓦工" scheme="https://wistbean.github.io/categories/vpn/%E6%90%AC%E7%93%A6%E5%B7%A5/"/>
    
    
      <category term="搬瓦工" scheme="https://wistbean.github.io/tags/%E6%90%AC%E7%93%A6%E5%B7%A5/"/>
    
      <category term="vpn" scheme="https://wistbean.github.io/tags/vpn/"/>
    
  </entry>
  
  <entry>
    <title>python 爬虫应该学习什么知识点？</title>
    <link href="https://wistbean.github.io/how-to-learn-python-spider.html"/>
    <id>https://wistbean.github.io/how-to-learn-python-spider.html</id>
    <published>2018-10-18T17:51:03.000Z</published>
    <updated>2018-12-27T13:46:51.203Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>        <div id="aplayer-UvuLJNWR" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-UvuLJNWR"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "python 爬虫应该学习什么知识点？",              author: "wistbean|肯定会电台",              url: "/images/47.mp3",              pic: "",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><h1 id="什么是爬虫"><a href="#什么是爬虫" class="headerlink" title="什么是爬虫"></a>什么是爬虫</h1><p>如果说把互联网比喻成蜘蛛网，那么<a href="https://zh.wikipedia.org/zh-hans/%E7%B6%B2%E8%B7%AF%E7%88%AC%E8%9F%B2" target="_blank" rel="noopener">爬虫</a>就是在这张网上的蜘蛛，它可以在上面爬来爬去。在互联网中，爬虫就是机器人，你应该对百度和 Google 很熟悉吧，为什么我们可以很快的从它们的搜索引擎中获取到资料呢？</p><p>原因就是它们都有自己的爬虫，在整个互联网上，24小时不间断的爬取那些愿意让它们爬取的网站内容，爬虫将这些内容的索引保存下来，放到百度自己的数据库里面，所以用户搜索的时候，就能很快的搜到你要的网站。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/spider-3658386_960_720.jpg" alt="爬虫" title="">                </div>                <div class="image-caption">爬虫</div>            </figure><p>永远对这个世界充满好奇心，也许会让我们更愿意学习，我觉得最好的学习动力来源于好奇，好奇产生兴趣，兴趣促进学习，学习使人快乐。</p><p>那么 python 爬虫应该学习什么知识点呢？</p><h1 id="学习-python-爬虫的路线"><a href="#学习-python-爬虫的路线" class="headerlink" title="学习 python 爬虫的路线"></a>学习 python 爬虫的路线</h1><p>除了好奇心之外，有个学习方向能够少走点弯路，就像在实习的时候，能够遇到一个好老大，给你稍微指一下方向，比你自己瞎jb琢磨的结果肯定结果相差很大。毕竟人家认知比你高上一截。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/spider-2.jpg" alt="方向" title="">                </div>                <div class="image-caption">方向</div>            </figure><h2 id="基本的-Python-语法"><a href="#基本的-Python-语法" class="headerlink" title="基本的 Python 语法"></a>基本的 Python 语法</h2><p>要用 Python 来写爬虫，当然是需要 Python 的基本语法了。Python的基本语法不难，之前我就写了一个小教程，讲的是 Python3 的一些基本使用，可以看看这里：<a href="https://wistbean.github.io/python-tutorial.html">python3入门基础有趣的教程</a></p><h2 id="抓包工具"><a href="#抓包工具" class="headerlink" title="抓包工具"></a>抓包工具</h2><p>爬虫要去抓取网页上的内容，一些请求参数和返回数据信息，需要去分析和抓取，熟悉一下抓包工具的使用还是很有必要的，这不，我也写了一个关于 Fiddler 的使用：<a href="https://wistbean.github.io/use-Fiddler.html">Fiddler抓包工具完全使用教程</a>，还顺便装了个逼！</p><h2 id="爬虫常用到的模块"><a href="#爬虫常用到的模块" class="headerlink" title="爬虫常用到的模块"></a>爬虫常用到的模块</h2><p>Python 有一些内置的库，专门对一些网页数据的请求和解析使用的，比如urllib，http。</p><h2 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h2><p>抓包获取到的数据，有很多数据是你不想要的，我们只需要拿到我们想要的数据就可以了，那么这个时候呢，正则表达式就派上用场了，常用的有：re，Xpath，BeautifulSoup。</p><h2 id="反爬机制"><a href="#反爬机制" class="headerlink" title="反爬机制"></a>反爬机制</h2><p>有些网站被爬取怕了，做了一些爬虫的限制，要学点反爬机制才行，header，robot，时间间隔，ip代理，UA限制，Cookie限制等。</p><h2 id="数据存储"><a href="#数据存储" class="headerlink" title="数据存储"></a>数据存储</h2><p>爬取到的数据要存储下来吧，那么就要会数据库的操作，比如mysql。还要会数据去重操作。</p><h2 id="爬虫效率"><a href="#爬虫效率" class="headerlink" title="爬虫效率"></a>爬虫效率</h2><p>提高爬取数据的效率，就需要使用多线程，分布式。</p><h2 id="爬虫的框架"><a href="#爬虫的框架" class="headerlink" title="爬虫的框架"></a>爬虫的框架</h2><p>站在巨人的肩膀上尿尿，那么就需要知道框架怎么使用，比如Scrapy，PySpider，简直牛逼。</p><h1 id="为什么学习-Python-爬虫"><a href="#为什么学习-Python-爬虫" class="headerlink" title="为什么学习 Python 爬虫"></a>为什么学习 Python 爬虫</h1><p>对于每个人来说可能都有自己的想法，有些人想要自己的工资涨点，无可厚非，有些人就是感兴趣，想玩玩，有些人单纯为了泡妞，有些人喜欢走出自己舒适圈，多学点。</p><p>但是有一点肯定的是，技多不压身，牛逼的人总是在学习，傻逼的人总是在抬杠和叫人别学。</p><p>如果你具备了 Python 的基础知识了，那就可以根据以上的知识点进行 Python 爬虫的学习。最主要是多动手，多练，熟能生巧是亘古不变的道理。</p><p>Python之禅说过这样的话：</p><blockquote><p>爬虫涉及的技术包括但不限于熟练一门编程语言（这里以 Python 为例） HTML 知识、HTTP 协议的基本知识、正则表达式、数据库知识，常用抓包工具的使用、爬虫框架的使用、涉及到大规模爬虫，还需要了解分布式的概念、消息队列、常用的数据结构和算法、缓存，甚至还包括机器学习的应用，大规模的系统背后都是靠很多技术来支撑的。数据分析、挖掘、甚至是机器学习都离不开数据，而数据很多时候需要通过爬虫来获取，因此，作为一门专业爬虫工程师都是有很大的前途的。</p></blockquote><p>说的真好，共勉！</p><h1 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h1><ul><li><a href="https://wistbean.github.io/python-spider-meizi.html">Python爬虫基础：爬取妹子图片并保存到本地</a></li><li><a href="https://wistbean.github.io/categories/python/PyCharm/">PyCharm编辑器的使用</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="podcast" scheme="https://wistbean.github.io/categories/podcast/"/>
    
      <category term="肯定会电台" scheme="https://wistbean.github.io/categories/podcast/%E8%82%AF%E5%AE%9A%E4%BC%9A%E7%94%B5%E5%8F%B0/"/>
    
      <category term="python" scheme="https://wistbean.github.io/categories/podcast/%E8%82%AF%E5%AE%9A%E4%BC%9A%E7%94%B5%E5%8F%B0/python/"/>
    
    
      <category term="肯定会电台" scheme="https://wistbean.github.io/tags/%E8%82%AF%E5%AE%9A%E4%BC%9A%E7%94%B5%E5%8F%B0/"/>
    
      <category term="互联网" scheme="https://wistbean.github.io/tags/%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
      <category term="python" scheme="https://wistbean.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python爬虫基础：爬取妹子图片并保存到本地</title>
    <link href="https://wistbean.github.io/python-spider-meizi.html"/>
    <id>https://wistbean.github.io/python-spider-meizi.html</id>
    <published>2018-10-13T17:27:16.000Z</published>
    <updated>2018-12-27T13:46:47.602Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>作为 Python 爬虫的入门教程，我想有必要来个爬虫程序压压惊，爬取性感美女的图片，然后保存到自己的电脑里面。爽歪歪~</p><p>先看下效果吧，这是我把爬取的图片自动存储到的文件夹里边：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/pp1.gif" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>爬虫三步骤：<strong>抓取</strong>，<strong>分析</strong>，<strong>存储</strong>。</p><h1 id="抓取"><a href="#抓取" class="headerlink" title="抓取"></a>抓取</h1><p>首先我们要有个目标对吧，我们想要抓取美女照片，就去找找看哪里的网站妹纸多，那咱们就从哪里下手呗。</p><p>我发现这网站 <a href="http://www.meizitu.com" target="_blank" rel="noopener">http://www.meizitu.com</a> 的妹纸图不错啊，那还等什么，抓取呗。</p><p>在 python 中有个叫做 requests 模块，直接 pip install 就可以了，然后访问这个网址获取相应的源码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">response = requests.get(url)</span><br><span class="line">return response</span><br></pre></td></tr></table></figure><p>比如我想获取性感美女的源码，那么我的 url 就是 <a href="http://www.meizitu.com/a/sexy_1.html" target="_blank" rel="noopener">http://www.meizitu.com/a/sexy_1.html</a> 通过get请求我们就可以获取返回的响应体了，我们通过response.text就可以或源码。部分源码截图如下：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/pp2.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><p>抓取完了之后，我们对我们感兴趣的内容要进行分析了，这时候就涉及到「正则表达式」，根据我们定义的一些规则，来获取我们想要的内容。</p><p>我们现在当然是对返回源码中的美女图片感兴趣啦，从返回的源码中就可以看到，美女的图片都是包裹在 img 标签中的：</p><p><img src="https://wistbean.github.io/images/pp3.webp" alt=""></p><p>那么我们就可以用 re 模块来匹配获取我们想要的图片链接了：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">p = r&apos;&lt;img src=&quot;([^&quot;]+\.jpg)&quot;&apos;</span><br><span class="line"></span><br><span class="line">img_addrs = re.findall(p, html)</span><br></pre></td></tr></table></figure><p>获取到的部分图片链接截图：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/pp4.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h1 id="存储"><a href="#存储" class="headerlink" title="存储"></a>存储</h1><p>既然获取到图片链接了，那么接下来就可以存储了，这里暂时存储到自己本地电脑上吧：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">with open(filename,&apos;wb&apos;) as f:</span><br><span class="line">    img = url_open(each).content</span><br><span class="line">    f.write(img)</span><br></pre></td></tr></table></figure><p>ok，这样就完成了，是不是很简单？当然爬虫说简单也简单，说复杂也复杂，关键是要看自己想做什么事情，如果你从这个例子中发现自己对 python 又多了些许兴趣，那不妨多关注我，我往后给你写一些 python爬虫 所需要的知识点，例如其它的爬虫模块如Scrapy ，一些表单的请求参数，反爬虫，cookie，多进程抓取等等。</p><p>专门为 Python 开了个公众号：<strong>学习python的正确姿势</strong> ，在里面发送 「meizi」获取抓美女的源代码吧。</p><p>不说了，我再去抓取多一点美女的图片了。</p><h1 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h1><ul><li><a href="https://wistbean.github.io/python-tutorial.html">python3入门基础有趣的教程</a></li><li><a href="https://wistbean.github.io/categories/python/">Categories: python</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="python" scheme="https://wistbean.github.io/categories/python/"/>
    
    
      <category term="教程" scheme="https://wistbean.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="python" scheme="https://wistbean.github.io/tags/python/"/>
    
      <category term="python爬虫" scheme="https://wistbean.github.io/tags/python%E7%88%AC%E8%99%AB/"/>
    
      <category term="python基础" scheme="https://wistbean.github.io/tags/python%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>终身成长:别让思维毁了自己</title>
    <link href="https://wistbean.github.io/diffrent-thinking.html"/>
    <id>https://wistbean.github.io/diffrent-thinking.html</id>
    <published>2018-10-12T11:25:30.000Z</published>
    <updated>2018-12-27T13:46:51.769Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>        <div id="aplayer-bHeunXTl" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-bHeunXTl"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "怎么才能让自己不要成为韭菜",              author: "wistbean",              url: "/images/46.mp3",              pic: "",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><p>在<a href="https://read.douban.com/ebook/41854672/" target="_blank" rel="noopener">《终身成长》</a>一书中，作者卡罗尔·德韦克提到了「成长型思维」这一概念。她发现了思维模式的力量，有两种不同的思维模式：</p><blockquote><p>固定型思维<br>成长型思维</p></blockquote><h1 id="固定思维和成长思维的区别"><a href="#固定思维和成长思维的区别" class="headerlink" title="固定思维和成长思维的区别"></a>固定思维和成长思维的区别</h1><p>固定型思维的人觉得人的才智是天生的，是我们后天没有办法改变的。更愿意相信有些东西是靠天赋的。他们觉得成功的来源是事情的结果。</p><p>而成长型思维的人觉得不管什么技能，无论什么领域，只要通过努力就可以获得，他们比较乐于接受挑战，积极的拓展自己的能力。他们觉得成功的来源是尽自己最大的努力做事情，学习，和提高自己。</p><p>固定型思维的模式认为智力是固定不变的，会产生一种让自己表现得聪明的欲望，因此他们：</p><blockquote><p>遇到挑战时 –&gt; 避免，逃避<br>遇到阻碍时 –&gt; 自我保护或轻易放弃<br>认为努力 –&gt; 不会有结果的或者会带来更坏的结果 - -<br>被批评时 –&gt; 忽视<br>他人成功 –&gt; 感到他人的成功对自己造成了威胁</p></blockquote><p>结果他们很早就停滞不前，无法获取自己本来有潜力取得的成功。</p><p>成长型思维的模式认为智力是可以提高的，会产生一种学习的欲望，因此他们：</p><blockquote><p>遇到挑战时 –&gt; 迎接挑战<br>遇到阻碍时 –&gt; 坚持不懈<br>认为努力 –&gt; 熟能生巧<br>被批评时 –&gt; 从批评中学习<br>他人成功 –&gt; 从他人的成功中学到新知识，获得灵感</p></blockquote><p>结果他们取得很高的成就。</p><h1 id="为什么我们需要成长型思维"><a href="#为什么我们需要成长型思维" class="headerlink" title="为什么我们需要成长型思维"></a>为什么我们需要成长型思维</h1><p>其实我们都同时拥有这两种思维，只是我们在不同的时期使用了不同的思维模式。</p><p>为什么有些程序员做了很久还是一个普通的程序员，而有一些程序员慢慢的变成了管理者？佼佼者？我想他们应该是有更高的思维程度，他们愿意提升自己的思维，更多的选择用成长型思维来提升自己，从而获得更多不同的视角。<br>使用成长型思维的人往往能够坚持，坚信能力是可以通过自己的努力获得，从而改变自己。</p><p>而使用固定型思维的人拒绝改变，他们更愿意使用自己熟悉的东西，拒绝挑战新事物，认为有些东西就是靠天赋的，自己不是那块料。</p><p>前两天微信之父张小龙获得了高尔夫欧巡赛的冠军，一个把产品做到极致的人，也把高尔夫打到了极致。说张小龙是成长型思维的人一点也不为过。</p><p>所以，我们需要成长型思维，别让固定型思维毁了自己。</p><h1 id="怎么发展成长型思维"><a href="#怎么发展成长型思维" class="headerlink" title="怎么发展成长型思维"></a>怎么发展成长型思维</h1><h2 id="大脑可塑性"><a href="#大脑可塑性" class="headerlink" title="大脑可塑性"></a>大脑可塑性</h2><p>有个可喜的消息就是我们的成长型思维是可以通过锻炼得到的，我们的大脑和肌肉一样有着很强的可塑性。我们高中时期生物课就有讲到，大脑中的神经元之间，负责传递信号的突触会根据环境和学习不断的改变。当我们获取新知识，就会产生新的突触，当我们复习已有的知识，突触就会连接的更加巩固。</p><h2 id="关注过程"><a href="#关注过程" class="headerlink" title="关注过程"></a>关注过程</h2><p>我们对事情的本身应该更多的关注与过程，而不是只关注结果。往往我们能从过程中获取经验。比如说小明考试考了 100 分，那么此时作为家长最好的夸奖方式是夸奖他的过程，而不是说：</p><blockquote><p>哇~你好棒，考了 100 分，今晚给你加鸡腿！</p></blockquote><p>而应该关注于过程，可以这么说：</p><blockquote><p>哇，你真棒，想必你的学习方法很棒，平常学习过程中应该很认真仔细，得到这样的结果，是你应得的。</p></blockquote><p>关注于过程，我们的成长型思维会让我们思考在过程中遇到的问题，怎么去解决，在过程中获取到的经验，下次怎么去应用等等。</p><h2 id="突破自己的舒适圈"><a href="#突破自己的舒适圈" class="headerlink" title="突破自己的舒适圈"></a>突破自己的舒适圈</h2><p>尝试做一些有挑战的事情，跳出自己的舒适圈，就拿编程来说，可能我们一开始学习的是某门编程语言，有些人会使用这门语言了，就一直使用它，如果我们能跳出自己的舒适区，去学习更深层次的东西，比如算法，又或者去学习另一门语言。也许在这一过程中我们会发现更多的视角，看到问题的本质。</p><p>那些原本我们认为做不到的事情，当我们下定决心去做的时候，就是跳出舒适圈，从而我们把焦点放在过程，想方设法让我们去做到，不断完善自己的成长型思维。不要掉入「就这样了」，「无能为力」，「我就不是这块料」等固定型思维的陷阱中去。</p><p>终身成长，终身学习。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="podcast" scheme="https://wistbean.github.io/categories/podcast/"/>
    
      <category term="肯定会电台" scheme="https://wistbean.github.io/categories/podcast/%E8%82%AF%E5%AE%9A%E4%BC%9A%E7%94%B5%E5%8F%B0/"/>
    
      <category term="个人提升" scheme="https://wistbean.github.io/categories/podcast/%E8%82%AF%E5%AE%9A%E4%BC%9A%E7%94%B5%E5%8F%B0/%E4%B8%AA%E4%BA%BA%E6%8F%90%E5%8D%87/"/>
    
    
      <category term="个人提升" scheme="https://wistbean.github.io/tags/%E4%B8%AA%E4%BA%BA%E6%8F%90%E5%8D%87/"/>
    
      <category term="互联网" scheme="https://wistbean.github.io/tags/%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
  </entry>
  
  <entry>
    <title>Fiddler 抓包工具完全使用教程</title>
    <link href="https://wistbean.github.io/use-Fiddler.html"/>
    <id>https://wistbean.github.io/use-Fiddler.html</id>
    <published>2018-10-11T11:49:27.000Z</published>
    <updated>2018-11-02T08:52:37.413Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="什么是-Fiddler-？"><a href="#什么是-Fiddler-？" class="headerlink" title="什么是 Fiddler ？"></a>什么是 Fiddler ？</h1><p><a href="https://www.telerik.com/fiddler" target="_blank" rel="noopener">Fiddler</a>是一款免费强大的抓包工具，有了它可以抓取我们在网上的一些请求数据，除了PC端之外，手机也可以使用它来抓包。</p><p>原理就是它能够代理我们一些数据的访问和返回，它以web代理服务器的形式工作：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/fiddler1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>那么我们有了这个 Fiddler 工具之后，就可以对一些数据进行拦截，拿到我们想要的数据，还可以对请求数据进行篡改，有一些游戏不是根据你玩了多少分然后排名的么？如果我们能够使用它来拦截请求数据，把分数改高一点，再请求给服务器，是不是很爽？当然了，Fiddler 的用处还有很多。比如Python爬虫前的数据解析等骚操作。</p><h1 id="配置Chrome使用Fiddler"><a href="#配置Chrome使用Fiddler" class="headerlink" title="配置Chrome使用Fiddler"></a>配置Chrome使用Fiddler</h1><p>点击<a href="https://www.telerik.com/download/fiddler" target="_blank" rel="noopener">fiddler官网</a>下载，安装之后自动打开。点击<code>File-&gt;Capture Traffic</code>就可以来抓包了。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/fiddler4.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>Fiddler使用的代理地址：127.0.0.1，端口是：8888。我比较喜欢使用 Chrome 浏览器，简单说下配置 Chrome 使用 Fiddler ，也就是让 Fiddler 来抓取我们在 Chrome 浏览器请求和返回数据。</p><p>Chrome 默认会使用系统的代理，你可以在 Chrome 浏览器中的<code>设置--&gt;高级--&gt;打开代理设置</code>来设置你的代理地址和端口号。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/fiddler2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>接着点击<code>局域网设置</code>，勾选<code>为 LAN 使用代理服务器</code> ，把地址：127.0.0.1，端口：8888 填进去就可以了。</p><h1 id="抓取-HTTPS-请求数据"><a href="#抓取-HTTPS-请求数据" class="headerlink" title="抓取 HTTPS 请求数据"></a>抓取 HTTPS 请求数据</h1><p>现在已经很多请求都是用 https 了，那么我们得给 Fiddler 安装证书才可以使用，有些 Windows 系统在使用的时候会发现这样的错误：</p><blockquote><p>1.Tunnel to 443<br>2.!ERROR: Failed to generate Certificate using CertEnroll. System.Reflection.TargetInvocationException…</p></blockquote><p>需要设置抓取 HTTPS 请求，点击菜单 <code>Tools-&gt;Options</code> , 接着选择 HTTPS ,选择 <code>Decrypt HTTPS traffic</code>。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/fiddler3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>接着点击右上角的 <code>Action</code> 按钮，然后选择 <code>Reset All Certificates</code>。</p><p>然后在 Chrome 中输入 localhost:8888,下载证书进行安装。</p><p>如果还是发现 <code>Tunnel to 443</code> 错误的话，可以下载<a href="/images/fiddlercertmaker.exe">fiddlercertmaker.exe</a> ，双击运行安装。再打开Fiddler。</p><p>最后在 菜单 <code>Tools-&gt;Options</code> 右上角的 <code>Action</code> 按钮选择 <code>Trust Root Certificate</code>。</p><p>那么接下来就可以进行抓包了，在 Chrome 中输入百度的网址之后，可以看到如下的样子：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/fiddler5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>简单介绍一下每一栏都代表啥吧，其实很简单：</p><blockquote><p>Result : 请求的 HTTP(s) 状态吗<br>Protocol : 请求协议<br>HOST :  请求的主机名<br>URL : 请求的资源目录位置<br>Body : 请求大小<br>Caching : 请求的缓存<br>Content-Type : 服务器响应的实体类型<br>Process : 是谁（进程）发送的<br>Comments : 备注<br>Custom : 自定义</p></blockquote><p>当我们点击某一条请求后，在右边的 Insepector 中就可以看到具体的请求和返回信息内容了：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/fiddler6.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>那么这时候就可以分析某个你想要抓取的接口的返回数据，对其进行正则分析，做你想做的事情。</p><h1 id="配置手机使用Fiddler"><a href="#配置手机使用Fiddler" class="headerlink" title="配置手机使用Fiddler"></a>配置手机使用Fiddler</h1><p>移动互联网时代，人手一部手机，移动 web 网站，手机 APP 等都需要数据交互，我们想从中抓取数据，怎么办呢？</p><p>那么就需要来配置一下手机使用 Fiddler。</p><p>步骤如下：</p><ol><li>Fiddler的Connection像以下这样设置：</li></ol><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/fiddler7.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><ol start="2"><li><p>把你的手机和电脑连接同一个 WIFI。</p></li><li><p>获取你电脑的 ip 地址。打开终端，输入ipconfig。找到你的 IPv4 地址，复制下来。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/fiddler8.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></li><li><p>手机打开你连接的 wifi ，设置代理服务器和端口，这里的服务器地址就是你刚找到的 IPv4 地址，端口8888：</p></li></ol><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/fiddler9.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><ol start="5"><li>手机打开浏览器输入你的 IPv4 地址和端口，下载安装证书：</li></ol><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/fiddler10.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>Android手机这样就配置好了，iPhone的话还要授权一下，在你手机的 <code>设置--&gt;通用--&gt;关于--&gt;证书信任--&gt;把刚刚下载的证书打上勾</code>。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/fiddler11.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>那么这个时候，你手机的所有访问都可以用Fiddler来抓包了。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/fiddler12.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>可以看到，我手机打开了微信，网易云音乐。</p><h1 id="Fiddler怎么修改请求和返回数据"><a href="#Fiddler怎么修改请求和返回数据" class="headerlink" title="Fiddler怎么修改请求和返回数据"></a>Fiddler怎么修改请求和返回数据</h1><p>我们已经 Fiddler 是干嘛的了，也设置了 PC 端和手机端都可以抓取数据和分析数据了。那么怎么做点坏事呢？哦不是，怎么去修改我们的请求和返回数据呢？</p><p>接下来就来说说，怎么在请求前修改请求数据和怎么在返回的时候把数据给改了。</p><h2 id="请求前修改请求数据"><a href="#请求前修改请求数据" class="headerlink" title="请求前修改请求数据"></a>请求前修改请求数据</h2><p>按住 F11 打个断点，那么这时候的请求，就还没到服务器之前就被我们阻断下来，也就是在这个时候我们可以进行数据修改操作了。</p><p>首先在Fiddler<strong>按一下 F11 ，在请求前打断点</strong>，这样的话，你的请求就会被拦截下来。</p><p>这里以注册「逼乎」为例，哈哈真特么什么网站都有。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/fiddler16.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>随便填点信息，然后点击注册按钮，这时候请求就被我们拦截下来了。我们可以使用 Filter 过滤我们想看的请求信息。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/fiddler17.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>这时候我们点击左边的请求数据，看到右边，我们的请求表单数据就显示出来了，哇靠！！密码都不加密的么？</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/fiddler18.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>我们 user_name 这个参数的名称给改了，改成「wistbean真特么帅」，然后点击 <code>Run to Completion</code>,也就是这个时候才真正的把数据传到他们的服务器去。<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/fiddler19.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><br>这就算注册完了，然后我们点击菜单下面的 「Go」 可以把剩下的拦截的所有请求直接运行，再看下我们看注册完的网页，可以发现，我们的账户名变成「wistbean真特么帅」了。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/fiddler20.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>说明修改数据有效。</p><h2 id="请求后修改返回数据"><a href="#请求后修改返回数据" class="headerlink" title="请求后修改返回数据"></a>请求后修改返回数据</h2><p>知道怎么在请求前修改数据了，那么修改返回数据也是一个道理的，这时候要打的断点快捷键是<code>ALT+F11</code>，然后操作还是和刚刚一样，只不过是在服务器返回数据的时候被拦截，我们修改数据之后再返回客户端。</p><p>无聊的时候可以装下逼或者整蛊一些朋友，比如就有朋友给我推网易的歌，我把数据拦截了一下，把信息给改了，然后我朋友一脸懵逼：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/fiddler1.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/fiddler21.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>ok，以上，主要是想说一下这个 Fiddler 怎么使用，好玩。</p><h1 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h1><p><a href="https://www.jianshu.com/p/99b6b4cd273c" target="_blank" rel="noopener">Fiddler教程</a><br><a href="https://www.jianshu.com/p/32c99f94881f" target="_blank" rel="noopener">Fiddler使用教程</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="教程" scheme="https://wistbean.github.io/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="python" scheme="https://wistbean.github.io/tags/python/"/>
    
      <category term="工具使用" scheme="https://wistbean.github.io/tags/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/"/>
    
      <category term="Fiddler" scheme="https://wistbean.github.io/tags/Fiddler/"/>
    
  </entry>
  
  <entry>
    <title>「3-4」 对商品分类进行增删改查的操作(下)</title>
    <link href="https://wistbean.github.io/java-ssm-3-4.html"/>
    <id>https://wistbean.github.io/java-ssm-3-4.html</id>
    <published>2018-10-09T15:00:55.000Z</published>
    <updated>2019-02-23T17:53:55.381Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="SSM视频教程第3-4节：商品分类数据交互操作"><a href="#SSM视频教程第3-4节：商品分类数据交互操作" class="headerlink" title="SSM视频教程第3-4节：商品分类数据交互操作"></a>SSM视频教程第3-4节：商品分类数据交互操作</h1><iframe src="//player.bilibili.com/player.html?aid=33964895&cid=59484350&page=1" width="100%" height="436" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><h1 id="SSM视频教程第-3-4-节课程概要"><a href="#SSM视频教程第-3-4-节课程概要" class="headerlink" title="SSM视频教程第 3-4 节课程概要"></a>SSM视频教程第 3-4 节课程概要</h1><ul><li>商品分类表的数据交互</li><li>EasyUI Tree 的使用</li><li>MyBatis 添加返回主键id</li><li>MyBatis 多条件语句操作</li><li>Json 对象数据封装</li><li>Jquery的post请求、回调函数等使用</li><li>Intellij IDEA 工具的打断点，调试使用</li></ul><h1 id="留两小作业"><a href="#留两小作业" class="headerlink" title="留两小作业"></a>留两小作业</h1><ul><li>添加父级菜单</li><li>修改操作</li></ul><h1 id="相关教程"><a href="#相关教程" class="headerlink" title="相关教程"></a>相关教程</h1><ul><li><a href="https://wistbean.github.io/java-ssm-3-1.html">1.后台管理系统 EasyUI 的使用</a></li><li><a href="https://wistbean.github.io/java-ssm-3-2.html">2.使用 PowerDesigner 逆向生成 MySQL 数据库</a></li><li><a href="https://wistbean.github.io/java-ssm-3-3.html">3.对商品分类进行增删改查的操作(上)</a></li></ul><h1 id="SSM视频教程目录"><a href="#SSM视频教程目录" class="headerlink" title="SSM视频教程目录"></a>SSM视频教程目录</h1><ul><li><a href="https://wistbean.github.io/java-ssm-video.html#SSM%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B%E7%9B%AE%E5%BD%95">SSM视频教程目录</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Java" scheme="https://wistbean.github.io/categories/Java/"/>
    
      <category term="Java SSM视频教程" scheme="https://wistbean.github.io/categories/Java/Java-SSM%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="教程" scheme="https://wistbean.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Java" scheme="https://wistbean.github.io/tags/Java/"/>
    
      <category term="Intellij IDEA" scheme="https://wistbean.github.io/tags/Intellij-IDEA/"/>
    
      <category term="Java视频教程" scheme="https://wistbean.github.io/tags/Java%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/"/>
    
      <category term="项目实战" scheme="https://wistbean.github.io/tags/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/"/>
    
      <category term="分布式" scheme="https://wistbean.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
      <category term="SSM" scheme="https://wistbean.github.io/tags/SSM/"/>
    
      <category term="码农商城" scheme="https://wistbean.github.io/tags/%E7%A0%81%E5%86%9C%E5%95%86%E5%9F%8E/"/>
    
      <category term="EasyUI" scheme="https://wistbean.github.io/tags/EasyUI/"/>
    
      <category term="商品分类管理" scheme="https://wistbean.github.io/tags/%E5%95%86%E5%93%81%E5%88%86%E7%B1%BB%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>PyCharm 使用教程：03 PyCharm常用技巧指南</title>
    <link href="https://wistbean.github.io/pycharm-03.html"/>
    <id>https://wistbean.github.io/pycharm-03.html</id>
    <published>2018-10-08T08:21:17.000Z</published>
    <updated>2018-12-27T13:46:47.922Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="打开项目"><a href="#打开项目" class="headerlink" title="打开项目"></a>打开项目</h1><p>在 PyCharm 中，打开已有的项目有 3 种方式。</p><blockquote><ol><li>欢迎界面中选择<code>open</code></li><li>菜单栏中选择 File-&gt;open</li><li>打开远程 Git 的项目</li></ol></blockquote><ol><li>在 PyCharm 中，打开已有的项目可以在第一次打开的欢迎界面中选择<code>open</code>来打开你电脑中已经创建过的项目：</li></ol><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://www.jetbrains.com/help/img/idea/2018.2/py_QST_WelcomeScreen.png" alt="PyCharm" title="">                </div>                <div class="image-caption">PyCharm</div>            </figure><ol start="2"><li>菜单栏中选择 File-&gt;open</li></ol><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/pycharm3-1.png" alt="PyCharm" title="">                </div>                <div class="image-caption">PyCharm</div>            </figure><p>选择已有的项目</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://www.jetbrains.com/help/img/idea/2018.2/py_QST_openProject.png" alt="PyCharm" title="">                </div>                <div class="image-caption">PyCharm</div>            </figure><ol start="3"><li>获取仓库地址中的项目并克隆下来到本地</li></ol><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://www.jetbrains.com/help/img/idea/2018.2/py_QST_cloneRepGithub.png" alt="PyCharm" title="">                </div>                <div class="image-caption">PyCharm</div>            </figure><h1 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h1><p>当你第一次打开PyCharm的时候，你可以点击 <code>Create New Project</code>来创建项目，也可以通过菜单栏<code>File-&gt;new Project</code>创建</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/pycharm3-2.png" alt="PyCharm" title="">                </div>                <div class="image-caption">PyCharm</div>            </figure><h1 id="Pycharm-界面"><a href="#Pycharm-界面" class="headerlink" title="Pycharm 界面"></a>Pycharm 界面</h1><p>当你打开或者创建完一个项目之后，你就可以看到你的界面张这个样子：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://www.jetbrains.com/help/img/idea/2018.2/py_QST_lookAroundThumb.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>我们逐一来了解一下这些窗口都代表啥意思吧。</p><ol><li><p><a href="https://www.jetbrains.com/help/pycharm/project-tool-window.html" target="_blank" rel="noopener">Project view </a>:项目视图窗口，在这里列出了你的项目文件。</p></li><li><p><a href="https://www.jetbrains.com/help/pycharm/editor-guided-tour.html" target="_blank" rel="noopener">Editor</a>:这里就是敲代码的地方啦。上面有个 Tab 标签，主要是让你清楚的知道你在哪个文件里面敲代码。</p></li><li><p><a href="https://www.jetbrains.com/help/pycharm/navigation-bar.html" target="_blank" rel="noopener">Navigation bar </a>:这里是导航栏，你可以点击左键快速定位到文件相应的位置，点击右键对其进行操作，比如运行，debug操作等。</p></li><li><p>Left gutter：代码左边的东东，你可以在这里打断点，显示代码行号，隐藏显示代码块等操作。</p></li><li><p>Right gutter：代码右边的东东，可以看到又不同的颜色块，它们分别表示代码的提示，例如错误，警告等信息。点击它可以快速定位到代码指定地方。</p></li></ol><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/pycharm3-3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><ol start="6"><li><p><a href="https://www.jetbrains.com/help/pycharm/tool-windows.html" target="_blank" rel="noopener">Tool windows</a>:在底下的工具窗口，你可以在这里打开终端，项目管理，代码搜索等。</p></li><li><p><a href="https://www.jetbrains.com/help/pycharm/status-bar.html" target="_blank" rel="noopener">The status bar</a>:显示你文件项目的信息，比如文件编码，当前的行数等。</p></li></ol><p>在左下角有一个<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://www.jetbrains.com/help/img/idea/2018.2/show_hide_tool_window_bars.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure>按钮，你可以点击它会展示出一些窗口选项，你可以在这里快速的选择要打开的窗口：<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://www.jetbrains.com/help/img/idea/2018.2/py_ToolWindowQuickAccess.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></p><h1 id="代码补全"><a href="#代码补全" class="headerlink" title="代码补全"></a>代码补全</h1><p>当你在敲代码的时候，PyCharm可能会知道你接下来你先要操作什么，会给你提供一些建议，你可以直接选择它们来补全你的代码。会节省你很多时间。<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://www.jetbrains.com/help/img/idea/2018.2/py_QST_smartCodeCompletion.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><br>有时候你代码写错了或者有什么需要进行额外的操作，你可以使用快捷键 <code>Alt+Enter</code> 来选择你要的操作：<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://www.jetbrains.com/help/img/idea/2018.2/py_QST_intentionAction.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></p><h1 id="生成一些代码"><a href="#生成一些代码" class="headerlink" title="生成一些代码"></a>生成一些代码</h1><p>你可以通过快捷键<code>Alt+Insert</code>来快速创建一些方法：<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://www.jetbrains.com/help/img/idea/2018.2/py_QST_impl_over.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></p><p>还可以使用快捷键<code>Ctrl+Alt+T</code>来对已有的代码进行操作，比如添加if语句，异常等。<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://www.jetbrains.com/help/img/idea/2018.2/py_QST_surround_with_1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://www.jetbrains.com/help/img/idea/2018.2/py_QST_surround_with_2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></p><h1 id="常用的搜索"><a href="#常用的搜索" class="headerlink" title="常用的搜索"></a>常用的搜索</h1><p>PyCharm有个非常强大的功能之一就是搜索，假如你的项目很大，或者你接手别人的项目，想要快速找到你需要的代码，那么PyCharm的搜索功能可以帮到你。</p><h2 id="基本搜索"><a href="#基本搜索" class="headerlink" title="基本搜索"></a>基本搜索</h2><p>你可以在当前文件中搜索相关内容，可以使用快捷键<code>Ctrl+F</code>,想在整个项目搜索相关内容可以使用<code>Ctrl+Shift+F</code>。</p><h2 id="查找在哪里被使用到了"><a href="#查找在哪里被使用到了" class="headerlink" title="查找在哪里被使用到了"></a>查找在哪里被使用到了</h2><p>可以使用快捷键<code>Alt+F7</code>,PyCharm会将被使用到的地方列出来。</p><h2 id="查找最近打开的文件"><a href="#查找最近打开的文件" class="headerlink" title="查找最近打开的文件"></a>查找最近打开的文件</h2><p>可以使用快捷键<code>Ctrl+E</code>将会调出最近文件的窗口，可以快速选择你要切换的文件。</p><h2 id="搜索快捷键"><a href="#搜索快捷键" class="headerlink" title="搜索快捷键"></a>搜索快捷键</h2><p>有些快捷键忘记了怎么办？可以使用<code>Ctrl+Shift+A</code>,然后搜索快捷键的名称，就可以知道使用什么快捷键了。<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://www.jetbrains.com/help/img/idea/2018.2/cl_QST_findAction.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></p><h2 id="在所有地方查找"><a href="#在所有地方查找" class="headerlink" title="在所有地方查找"></a>在所有地方查找</h2><p>双击 shift 键就可以查找所有地方的文件了，非常好用！</p><h1 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h1><ul><li><a href="https://wistbean.github.io/pycharm-01.html">PyCharm 使用教程：01 安装PyCharm</a></li><li><a href="https://wistbean.github.io/pycharm-02.html">PyCharm 使用教程：02 完全定制属于你自己的PyCharm编辑器</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="python" scheme="https://wistbean.github.io/categories/python/"/>
    
      <category term="PyCharm" scheme="https://wistbean.github.io/categories/python/PyCharm/"/>
    
    
      <category term="教程" scheme="https://wistbean.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="python" scheme="https://wistbean.github.io/tags/python/"/>
    
      <category term="PyCharm" scheme="https://wistbean.github.io/tags/PyCharm/"/>
    
      <category term="工具使用" scheme="https://wistbean.github.io/tags/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>搬瓦工快速手动搭建SS(Shadowsocks)服务器简明详细教程</title>
    <link href="https://wistbean.github.io/banwagong-ss.html"/>
    <id>https://wistbean.github.io/banwagong-ss.html</id>
    <published>2018-10-07T08:27:43.000Z</published>
    <updated>2019-03-01T07:33:12.817Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="优惠购买搬瓦工"><a href="#优惠购买搬瓦工" class="headerlink" title="优惠购买搬瓦工"></a>优惠购买搬瓦工</h1><p>搬瓦工VPS相对其它的云服务产商来说，性价比高，使用起来速度快。通过优惠码购买还能再降低最多 %6 的一些费用。在这基础上使用优惠码可以少一些费用，根据你对配置的需要进行选择服务器，以下是可以获取优惠码的链接：</p><table><thead><tr><th>搬瓦工配置</th><th>搬瓦工费用</th><th>优惠链接</th></tr></thead><tbody><tr><td><em>SPECIAL 40G KVM PROMO V3 - LOS ANGELES - CN2  </em> <br>  SSD硬盘: 40  GB RAID-10 <br> RAM内存: 2048   MB <br> CPU处理器: 1x Intel Xeon <br> Transfer流量: 2000  GB/月 <br> 连接速度: 1 Gigabit <br> 洛杉矶机房，CN2路线，使用中国的直线路线，速度加快</td><td>$27.99/季</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=58" target="_blank" rel="noopener">点击进入</a></td></tr><tr><td><em>SPECIAL 20G KVM PROMO V3 - LOS ANGELES - CN2 </em> <br>  SSD硬盘: 20 GB RAID-10 <br> RAM内存: 1024  MB <br> CPU处理器: 1x Intel Xeon <br> Transfer流量: 1000  GB/月 <br> 连接速度: 1 Gigabit <br> 洛杉矶机房，CN2路线，使用中国的直线路线，速度加快</td><td>$29.99 /半年</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=57" target="_blank" rel="noopener">点击进入</a></td></tr><tr><td><em>80G KVM – PROMO</em> <br> SSD硬盘: 80 GB RAID-10<br>RAM内存: 4 GB<br>CPU处理器: 4x Intel Xeon<br>Transfer流量: 3 TB/mo<br>连接速度: 1 Gigabit<br>Multiple locations</td><td>$19.99/月</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=46" target="_blank" rel="noopener">点击进入</a></td></tr><tr><td><em>20G KVM – PROMO</em> <br> SSD硬盘: 20 GB RAID-10 <br>RAM内存: 1024 MB <br>CPU处理器: 2x Intel Xeon <br>Transfer流量: 1 TB/mo <br>连接速度: 1 Gigabit <br>Multiple locations</td><td>$49.99/年</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=44" target="_blank" rel="noopener">点击进入</a></td></tr><tr><td><em>40G KVM – PROMO</em> <br> SSD硬盘: 40 GB RAID-10 <br>RAM内存: 2 GB <br>CPU处理器: 3x Intel Xeon <br>Transfer流量: 2 TB/mo <br>连接速度: 1 Gigabit <br>Multiple locations</td><td>$99.99/年</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=45" target="_blank" rel="noopener">点击进入</a></td></tr><tr><td><em>160G KVM – PROMO</em> <br> SSD硬盘: 160 GB RAID-10<br>RAM内存: 8 GB<br>CPU处理器: 5x Intel Xeon<br>Transfer流量: 4 TB/mo<br>连接速度: 1 Gigabit<br>Multiple locations</td><td>$39.99/月</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=47" target="_blank" rel="noopener">点击进入</a></td></tr><tr><td><em>3200G KVM – PROMO</em> <br> SSD硬盘: 320 GB RAID-10<br>RAM内存: 16 GB<br>CPU处理器: 6x Intel Xeon<br>Transfer流量: 5 TB/mo<br>连接速度: 1 Gigabit<br>Multiple locations</td><td>$79.99/月</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=48" target="_blank" rel="noopener">点击进入</a></td></tr></tbody></table><p>进入之后就可以获取优惠码了，选择完之后<strong>不要急着点击 「Add to Cart」</strong>。</p><p>这时候就可以获取隐藏的优惠码了，我们对着这个网页：<code>鼠标右击--&gt;查看网页源代码</code>。</p><p>接着 <code>Ctrl + F</code> 搜索 <code>code</code> ，这时候你就会看到 <code>Try this promo code: xxxx</code>，这里的<code>xxxx</code>就是优惠吗，把它复制下来。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/banwagong04.png" alt="搬瓦工vps" title="">                </div>                <div class="image-caption">搬瓦工vps</div>            </figure><p>页面的 Location 就是选择服务器的地址，到时访问谷歌的时候会显示你当前访问的地址。好了，我们点击「Add to Cart」。</p><p>接下来，进入结算页面，我们刚才复制的优惠码就派上用场了，将你刚刚复制的优惠码复制进去然后点击 「Validate Code」，看！是不是优惠了！一般人不知道这种操作:</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/vpn5.png" alt="搬瓦工优惠码" title="">                </div>                <div class="image-caption">搬瓦工优惠码</div>            </figure><p>接着点击「CheckOut」完成付款即可。付款的时候选择 Alipay 就可以使用支付宝付款。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/vpn8.png" alt="搬瓦工支付宝支付" title="">                </div>                <div class="image-caption">搬瓦工支付宝支付</div>            </figure><h1 id="获取搬瓦工服务器的ip，端口，账号密码"><a href="#获取搬瓦工服务器的ip，端口，账号密码" class="headerlink" title="获取搬瓦工服务器的ip，端口，账号密码"></a>获取搬瓦工服务器的ip，端口，账号密码</h1><p>购买完毕后你就拥有一台你自己的服务器了，接着点击Services下的MyServices，可以看到你的服务器：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/vpn6.png" alt="搬瓦工搭建ss" title="">                </div>                <div class="image-caption">搬瓦工搭建ss</div>            </figure><p>我们点击「KiwiVM Control Panel」进入管理界面：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/vpn7.png" alt="搬瓦工搭建ss" title="">                </div>                <div class="image-caption">搬瓦工搭建ss</div>            </figure><p>可以看到你服务器的信息:</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/vpn9.png" alt="搬瓦工搭建ss" title="">                </div>                <div class="image-caption">搬瓦工搭建ss</div>            </figure><p>有了<a href="https://bwh1.net/aff.php?aff=32874" target="_blank">搬瓦工</a>服务器的IP地址和端口,我们就可以连接了：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/pic1.png" alt="搬瓦工搭建ss" title="">                </div>                <div class="image-caption">搬瓦工搭建ss</div>            </figure><p>账号是root，密码可以在这里获取：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/pic2.png" alt="搬瓦工搭建ss" title="">                </div>                <div class="image-caption">搬瓦工搭建ss</div>            </figure><h1 id="使用-SSH-工具连接到搬瓦工服务器"><a href="#使用-SSH-工具连接到搬瓦工服务器" class="headerlink" title="使用 SSH 工具连接到搬瓦工服务器"></a>使用 SSH 工具连接到搬瓦工服务器</h1><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/pic3.png" alt="搬瓦工搭建ss" title="">                </div>                <div class="image-caption">搬瓦工搭建ss</div>            </figure><p>远程连接工具我一直用的是 <a href="https://www.vandyke.com/products/securecrt/" target="_blank" rel="noopener">SecureCRT</a> , 当然你也可以使用其它的 SSH 工具。<br>破解版的SecureCRT可以在百度网盘这里获取：</p><ul><li>链接: <a href="https://pan.baidu.com/s/11W4WHjCjmiNw6einQNrcPg" target="_blank" rel="noopener">https://pan.baidu.com/s/11W4WHjCjmiNw6einQNrcPg</a></li><li>提取码: tyux</li></ul><h1 id="开始快读搭建ss服务器"><a href="#开始快读搭建ss服务器" class="headerlink" title="开始快读搭建ss服务器"></a>开始快读搭建ss服务器</h1><h2 id="安装-wget-："><a href="#安装-wget-：" class="headerlink" title="安装 wget ："></a>安装 wget ：</h2><pre><code>yum install wget</code></pre><h2 id="执行安装ss："><a href="#执行安装ss：" class="headerlink" title="执行安装ss："></a>执行安装ss：</h2><pre><code>wget –no-check-certificate -O shadowsocks.sh https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks.sh</code></pre><h2 id="获取shadowsocks-sh读取权限"><a href="#获取shadowsocks-sh读取权限" class="headerlink" title="获取shadowsocks.sh读取权限"></a>获取shadowsocks.sh读取权限</h2><pre><code>chmod +x shadowsocks.sh</code></pre><h2 id="设置ss密码端口和加密方式"><a href="#设置ss密码端口和加密方式" class="headerlink" title="设置ss密码端口和加密方式"></a>设置ss密码端口和加密方式</h2><p>当你输入<code>./shadowsocks.sh 2&gt;&amp;1 | tee shadowsocks.log</code>后就可以设置密码和端口号了：</p><p><img src="https://wistbean.github.io/images/ss1.png" alt="搬瓦工搭建ss"><br>设置完密码和端口号之后，我们选择加密方式，这里选择 7：<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/ss2.png" alt="搬瓦工搭建ss" title="">                </div>                <div class="image-caption">搬瓦工搭建ss</div>            </figure><br>接着按任意键进行安装。</p><h2 id="安装ss完成"><a href="#安装ss完成" class="headerlink" title="安装ss完成"></a>安装ss完成</h2><p>等一会之后，就安装完成了，它会给你显示你需要连接vpn的信息：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/ss3.png" alt="搬瓦工搭建ss" title="">                </div>                <div class="image-caption">搬瓦工搭建ss</div>            </figure><p>可以看到需要连接ss的ip地址，密码，端口，和加密方式。</p><p>将这些信息保存起来，那么这时候你就可以使用它们来科学上网啦。</p><h1 id="使用Shadowsocks"><a href="#使用Shadowsocks" class="headerlink" title="使用Shadowsocks"></a>使用Shadowsocks</h1><p>打开 Shadowsocks 客户端，输入ip地址，密码，端口，和加密方式。接着点击确定，右下角会有个小飞机按钮，右键–&gt;启动代理。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/ss4.png" alt="搬瓦工搭建ss" title="">                </div>                <div class="image-caption">搬瓦工搭建ss</div>            </figure><p>这时候就可以科学上网了。</p><p>访问以下 Youtube 和 Google 试试看，速度还可以的：<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/ss5.png" alt="搬瓦工搭建ss" title="">                </div>                <div class="image-caption">搬瓦工搭建ss</div>            </figure><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/ss6.png" alt="搬瓦工搭建ss" title="">                </div>                <div class="image-caption">搬瓦工搭建ss</div>            </figure></p><h1 id="使用BBR加速器"><a href="#使用BBR加速器" class="headerlink" title="使用BBR加速器"></a>使用BBR加速器</h1><p>让访问速度加速，飞起来！使用 BBR 加速工具。</p><h2 id="安装-BBR"><a href="#安装-BBR" class="headerlink" title="安装 BBR"></a>安装 BBR</h2><pre><code>wget --no-check-certificate https://github.com/teddysun/across/raw/master/bbr.sh</code></pre><h2 id="获取读写权限"><a href="#获取读写权限" class="headerlink" title="获取读写权限"></a>获取读写权限</h2><pre><code>chmod +x bbr.sh</code></pre><h2 id="启动BBR安装"><a href="#启动BBR安装" class="headerlink" title="启动BBR安装"></a>启动BBR安装</h2><pre><code>./bbr.sh</code></pre><p>接着按任意键，开始安装，坐等一会。安装完成一会之后它会提示我们是否重新启动vps，我们输入 y 确定重启服务器。</p><p>重新启动之后，输入 <code>lsmod | grep bbr</code> 如果看到 tcp_bbr 就说明 BBR 已经启动了。</p><p>再访问一下 Youtube，1080p 超高清，很顺畅不卡顿！</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/ss7.png" alt="搬瓦工搭建ss" title="">                </div>                <div class="image-caption">搬瓦工搭建ss</div>            </figure><h1 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h1><ul><li><a href="https://wistbean.github.io/banwagong-coupon.html">购买搬瓦工VPS省钱攻略：获取搬瓦工优惠码</a></li><li><a href="https://wistbean.github.io/banwagong-vpn.html">使用搬瓦工快速搭建自己的VPN</a></li><li><a href="https://wistbean.github.io/ipsec,l2tp_vpn.html">CentOS快速搭建一个属于自己的IPsec/L2TP VPN</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="vpn" scheme="https://wistbean.github.io/categories/vpn/"/>
    
      <category term="搬瓦工" scheme="https://wistbean.github.io/categories/vpn/%E6%90%AC%E7%93%A6%E5%B7%A5/"/>
    
    
      <category term="搬瓦工" scheme="https://wistbean.github.io/tags/%E6%90%AC%E7%93%A6%E5%B7%A5/"/>
    
      <category term="vpn搭建" scheme="https://wistbean.github.io/tags/vpn%E6%90%AD%E5%BB%BA/"/>
    
      <category term="搬瓦工搭建vpn" scheme="https://wistbean.github.io/tags/%E6%90%AC%E7%93%A6%E5%B7%A5%E6%90%AD%E5%BB%BAvpn/"/>
    
      <category term="搬瓦工搭建ss" scheme="https://wistbean.github.io/tags/%E6%90%AC%E7%93%A6%E5%B7%A5%E6%90%AD%E5%BB%BAss/"/>
    
      <category term="Shadowsocks" scheme="https://wistbean.github.io/tags/Shadowsocks/"/>
    
      <category term="搬瓦工vps" scheme="https://wistbean.github.io/tags/%E6%90%AC%E7%93%A6%E5%B7%A5vps/"/>
    
  </entry>
  
  <entry>
    <title>AI即将夺走人们的主控权和决策能力</title>
    <link href="https://wistbean.github.io/ai.html"/>
    <id>https://wistbean.github.io/ai.html</id>
    <published>2018-10-05T08:23:43.000Z</published>
    <updated>2019-03-01T15:52:20.679Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>大家都知道当下两个大趋势就是<a href="https://zh.wikipedia.org/zh/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD" target="_blank" rel="noopener">人工智能（AI）</a>和<a href="https://zh.wikipedia.org/wiki/%E5%8C%BA%E5%9D%97%E9%93%BE" target="_blank" rel="noopener">区块链</a>，有些人觉得人工智能听起来有点危言耸听，感觉离自己的生活还很远。不以为然。</p><p>我觉得不然，科技日新月异的改变着，凡事都要有点敬畏之心。</p><p>想想现在为什么那么多产商在研究生成智能音箱，例如国外 Google 的<a href="https://store.google.com/ca/product/google_home" target="_blank" rel="noopener">Google Home</a>,亚马逊的Echo,国内的小米小爱音箱等，如果说浏览器是PC端的互联网的入口，APP，小程序是移动物联网的入口，那么<strong>智能音箱很可能就是人工智能物联网的入口</strong>。</p>        <div id="aplayer-iSUAkJQY" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-iSUAkJQY"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "AI即将夺走人们的主控权和决策能力",              author: "wistbean",              url: "/images/45.mp3",              pic: "",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><h1 id="AI会对人类有怎样的影响？"><a href="#AI会对人类有怎样的影响？" class="headerlink" title="AI会对人类有怎样的影响？"></a>AI会对人类有怎样的影响？</h1><p><a href="https://baike.baidu.com/item/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/9180?fr=aladdin" target="_blank" rel="noopener">百科</a>对人工智能的定义是：人工智能是研究、开发用于模拟、延伸和扩展人的智能的理论、方法、技术及应用系统的一门新的技术科学。</p><p>对于人来说，有两个能力比较重要，就是「劳动能力」和「认知能力」，对于劳动能力而言，现在已经有很多机器可以取代那些重复又简单的工作了。</p><p>而对于认知能力，更多的是人与人之间的沟通，理解情绪，还有学习。这也是 AI 正在发展的方向。</p><p>我想接下来，AI可能会对人类产生的影响有这么几点：</p><blockquote><ol><li>改变人类的工作方式</li><li>将有很多人失业，在经济市场中处于多余的尴尬境地</li><li>AI 将超越人类的认知能力，夺走人们决策能力，主控权，比如帮我们在人生中做决定，跟谁结婚，在哪工作等等。</li></ol></blockquote><h1 id="看的见的-AI-现象"><a href="#看的见的-AI-现象" class="headerlink" title="看的见的 AI 现象"></a>看的见的 AI 现象</h1><p>现在很多人，需要资料的时候，都会通过百度或者 Google 搜索获取，也就是，人们的获取信息能力已经全然交给搜索引擎了，往往搜索出来靠前的几条结果，决定了你需要的信息结果。</p><p>现在的BAT等互联网巨头，提供了很多的免费服务，娱乐，资讯等等，我们觉得很爽，疯狂的使用，心甘情愿的分享自己的喜好，而这一切的行为都被记录起来，成为他们的数据。</p><p>有了这些数据，可以给你进行画像，通过数据分析，就可以知道应该推什么广告给你。</p><p>但给你推广告并不是他们真正的目的，或者说不是他们接下来想要做的事情，他们记录了我们的所有上网行为，成为了他们的数据，这些数据对于他们来说，就是价值。而我们将变成了他们的产品。</p><p>当 AI 越来越牛逼的时候，他们就可以为我们做出人生选择，甚至操纵我们的情绪。</p><h1 id="面对AI，我们应该怎么办呢？"><a href="#面对AI，我们应该怎么办呢？" class="headerlink" title="面对AI，我们应该怎么办呢？"></a>面对AI，我们应该怎么办呢？</h1><p>可能你会觉得，那岂不是很棒？以后就让 AI 帮我做决定，有什么事情交给 AI 不就得了。但是这样就失去自我了呀。</p><p>是有可能以后机器帮你学习，甚至帮你编程，但是凡事都有利与弊。</p><p>我们应该学习生活中比较通用的技能，比如独立思考，与他人沟通，合作，提升自己的认知水平，锻炼自己的创造能力。</p><p>每当有新事物来临的时候，我们应该学会随机应变，保持心理的平衡，认识自我。</p><p>AI 能够帮助我们，也会害了我们，所以我们应该不断的学习，不断的重塑自己，使得将来的我们与AI相辅相成，过上更加幸福的生活，而不是，因为AI，而没了自我。</p><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><ul><li><a href="https://36kr.com/p/5093548.html" target="_blank" rel="noopener">人工智能即将取代我们？面对AI，我们该怎么保持竞争力？</a></li><li><a href="http://www.xinhuanet.com/yuqing/2017-09/15/c_129704724.htm" target="_blank" rel="noopener">人工智能正在向高端职位进军：你担心饭碗会被拿走吗</a></li><li><a href="https://www-file.huawei.com/-/media/corporate/pdf/publications/winwin/augmented-innovation/00-cn.pdf?source=corp_comm" target="_blank" rel="noopener">人工智能+，将改变所有的行业 - Huawei</a></li></ul><h1 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h1><ul><li><a href="https://wistbean.github.io/5G.html">5G即将到来，那么到底什么是 5G 呢？</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="podcast" scheme="https://wistbean.github.io/categories/podcast/"/>
    
      <category term="肯定会电台" scheme="https://wistbean.github.io/categories/podcast/%E8%82%AF%E5%AE%9A%E4%BC%9A%E7%94%B5%E5%8F%B0/"/>
    
    
      <category term="肯定会电台" scheme="https://wistbean.github.io/tags/%E8%82%AF%E5%AE%9A%E4%BC%9A%E7%94%B5%E5%8F%B0/"/>
    
      <category term="互联网" scheme="https://wistbean.github.io/tags/%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
      <category term="个人网站" scheme="https://wistbean.github.io/tags/%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/"/>
    
      <category term="人工智能" scheme="https://wistbean.github.io/tags/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"/>
    
  </entry>
  
  <entry>
    <title>要装就装那些通过努力得到的「逼」</title>
    <link href="https://wistbean.github.io/zhuangbi.html"/>
    <id>https://wistbean.github.io/zhuangbi.html</id>
    <published>2018-10-01T13:53:16.000Z</published>
    <updated>2018-12-27T13:46:50.545Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>最近在朋友圈看到一些朋友在装逼，我觉得装逼没毛病啊，我也喜欢装逼，生活这么苦逼，有些逼确实是需要装的。</p><p>但是，不是所有的逼都能拿来装的。要装就装那些通过努力得到的逼。</p><p>来说几种错误的装逼方式：</p><h1 id="我一朋友可牛逼了呢"><a href="#我一朋友可牛逼了呢" class="headerlink" title="我一朋友可牛逼了呢"></a>我一朋友可牛逼了呢</h1><p>之前跟一个认识不久的A君一起吃饭，吹吹牛逼。</p><p>聊到女人的时候，他说他一朋友很厉害，一脚踏五六条船，玩的可6了。聊到钱的时候，他说他一朋友超有钱，天天开跑车去玩，有时候还会叫上他。聊到技术的时候，他说他一朋友技术超牛逼，之前把它们学校的系统黑了都没人知道。</p><p>TMD，我发现他 10 句话有 9 句话是「我的朋友怎么样怎么样」。</p><p>我真的感觉我不配当他朋友啊，没办法成为他口中的「我的朋友」。从那顿饭之后我就疏远他了，不是我有多清高，是我真心觉得，我不属于他的朋友圈。</p><p>我当然知道他的有些朋友是他捏造出来的，但是这逼装的有点过甚至有点假了。我不喜欢！</p><p>我偶尔也会拿我朋友说事，但咱们起码说的是事实而且有点价值。</p><h1 id="打肿脸充胖子的装逼"><a href="#打肿脸充胖子的装逼" class="headerlink" title="打肿脸充胖子的装逼"></a>打肿脸充胖子的装逼</h1><p>每个人都有虚荣心，这是天性，只是有些人虚荣心不强，看起来低调一些，而有些人虚荣心超强，强到可以往自己脸上一顿揍，肿的像头猪，说自己是个胖子。</p><p>最近一些 GitHub 刷 star 的新闻真是让人大跌眼镜，可能有些人不知道，现在有些公司招聘的时候会看一下这个人的 GitHub 上有没有写过什么项目，如果有好一点的项目是一个加分项。有些培训公司为了帮助学员找到工作，居然帮忙刷 star 。</p><p>还有些人仅仅就是为了装逼，真的就去花钱刷赞和commit数，可能他自己连 GitHub 怎么使用都不会，但是看到他页面有几百个人给他 star ，哇~ 好牛逼！</p><h1 id="装做不到的逼"><a href="#装做不到的逼" class="headerlink" title="装做不到的逼"></a>装做不到的逼</h1><p>应该每个人的微信朋友圈都有那么些人在打卡，打卡的方式确实好，比如每天背十几个单词，打一下卡，每天读点书，打一下卡，每天跑下步，打一下卡。</p><p>然而，我很少看到有人打卡超过 30 天的。前五六天打卡很勤，然后接下来就消失了。</p><p>坚持一件事情谈何容易？</p><p>坚持这件事，一开始那么几天很是兴奋，动力满满，所以是很容易的，这时候装的逼，能保证后面还能坚持下去么？如果不能保证，前面的装逼不就是打脸么？</p><p>没把握坚持下去，那么为什么要装逼？</p><p>对于没把握能够坚持下去的事情，我一般不会在朋友圈装逼打卡。</p><p>所以，<strong>还是要装一些高级一点的，一些要通过（认真）努力得到的逼。</strong></p><p>比如有些人认真的看了一本书，花了时间做了笔记，并把他的一些想法分享给大家。 这是装逼么？是！</p><p>比如有些人努力的研究了技术，花了时间做了自己的网站，并把他的网站分享给大家。 这是装逼么？是！</p><p>比如有些人认真的看了电影，花了时间写了影评，并把他的一些感受分享给大家。 这是装逼么？是！</p><p>比如有些人努力的学习摄影，花了时间拍了一组美照，并把他的一些拍摄心得分享给大家。 这是装逼么？是！</p><p>比如有些人努力的学习健身知识，花了时间练出了肌肉，并把他的一些自拍分享给大家。 这是装逼么？是！</p><p>比如….</p><p>这些都是装逼，然而，是通过努力得来的逼，是无形的逼，也就是：<strong>无形的装逼，最为致命！</strong></p><p>学到了么？</p><h1 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h1><ul><li><a href="https://wistbean.github.io/encourage-more.html">我艹你妈的，你长得也太好看了吧</a></li><li><a href="https://wistbean.github.io/spend-money.html">现在已经不像父母那个年代了,花钱也是一种学问</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="个人提升" scheme="https://wistbean.github.io/categories/%E4%B8%AA%E4%BA%BA%E6%8F%90%E5%8D%87/"/>
    
    
      <category term="个人提升" scheme="https://wistbean.github.io/tags/%E4%B8%AA%E4%BA%BA%E6%8F%90%E5%8D%87/"/>
    
  </entry>
  
  <entry>
    <title>「3-3」 对商品分类进行增删改查的操作(上)</title>
    <link href="https://wistbean.github.io/java-ssm-3-3.html"/>
    <id>https://wistbean.github.io/java-ssm-3-3.html</id>
    <published>2018-10-01T13:31:12.000Z</published>
    <updated>2019-02-23T17:53:56.233Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="SSM视频教程第3-3节：商品分类查询显示"><a href="#SSM视频教程第3-3节：商品分类查询显示" class="headerlink" title="SSM视频教程第3-3节：商品分类查询显示"></a>SSM视频教程第3-3节：商品分类查询显示</h1><iframe src="//player.bilibili.com/player.html?aid=32959711&cid=57686462&page=1" width="100%" height="436" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><h1 id="SSM视频教程第-3-3-节课程概要"><a href="#SSM视频教程第-3-3-节课程概要" class="headerlink" title="SSM视频教程第 3-3 节课程概要"></a>SSM视频教程第 3-3 节课程概要</h1><ul><li>商品分类表的逆向生成</li><li>EasyUI Tree 的使用</li><li>从数据库中获取数据</li><li>Jquery的使用</li><li>Intellij IDEA 工具的打断点，调试使用</li></ul><h1 id="实现效果"><a href="#实现效果" class="headerlink" title="实现效果"></a>实现效果</h1><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/productcategory.png" alt="商品分类管理" title="">                </div>                <div class="image-caption">商品分类管理</div>            </figure><h1 id="相关教程"><a href="#相关教程" class="headerlink" title="相关教程"></a>相关教程</h1><ul><li><a href="https://wistbean.github.io/java-ssm-3-1.html">1.后台管理系统 EasyUI 的使用</a></li><li><a href="https://wistbean.github.io/java-ssm-3-2.html">2.使用 PowerDesigner 逆向生成 MySQL 数据库</a></li></ul><h1 id="SSM视频教程目录"><a href="#SSM视频教程目录" class="headerlink" title="SSM视频教程目录"></a>SSM视频教程目录</h1><ul><li><a href="https://wistbean.github.io/java-ssm-video.html#SSM%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B%E7%9B%AE%E5%BD%95">SSM视频教程目录</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Java" scheme="https://wistbean.github.io/categories/Java/"/>
    
      <category term="Java SSM视频教程" scheme="https://wistbean.github.io/categories/Java/Java-SSM%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="教程" scheme="https://wistbean.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Java" scheme="https://wistbean.github.io/tags/Java/"/>
    
      <category term="Intellij IDEA" scheme="https://wistbean.github.io/tags/Intellij-IDEA/"/>
    
      <category term="Java视频教程" scheme="https://wistbean.github.io/tags/Java%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/"/>
    
      <category term="项目实战" scheme="https://wistbean.github.io/tags/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/"/>
    
      <category term="分布式" scheme="https://wistbean.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
      <category term="SSM" scheme="https://wistbean.github.io/tags/SSM/"/>
    
      <category term="码农商城" scheme="https://wistbean.github.io/tags/%E7%A0%81%E5%86%9C%E5%95%86%E5%9F%8E/"/>
    
      <category term="EasyUI" scheme="https://wistbean.github.io/tags/EasyUI/"/>
    
      <category term="商品分类管理" scheme="https://wistbean.github.io/tags/%E5%95%86%E5%93%81%E5%88%86%E7%B1%BB%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>其实，你要的教程资源大多都在这两个地方，而且不用钱</title>
    <link href="https://wistbean.github.io/tutorial-resources.html"/>
    <id>https://wistbean.github.io/tutorial-resources.html</id>
    <published>2018-09-29T11:27:49.000Z</published>
    <updated>2018-12-27T13:46:47.763Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="为什么你找不到资源"><a href="#为什么你找不到资源" class="headerlink" title="为什么你找不到资源"></a>为什么你找不到资源</h1><p>互联网很牛逼，现在几乎所有你想要的资源都能在互联网上找到，可是为什么有些人就是找不到他们想要的呢？而有些人却能轻而易举的获得？</p><p>我想这两者之间的区别在于：</p><blockquote><p>1.搜索能力<br>2.钱的问题<br>3.信息差</p></blockquote><p>互联网的资源那么多，百度和 Google 给了我们搜索互联网资源的入口，也就是搜索引擎，懂点搜索技巧能让你更容易找到你想要的资源。</p><p>对于搜索技巧我之前<a href="https://wistbean.github.io/google-search.html">找到你要的资源，Google高级搜索技巧</a>中说过了，这里就不再多说了。</p><p>对于第二点，钱的问题，有钱人想要找资源很简答啊，就是花钱，花钱买时间买资源是他们最喜欢干的事情了。当然也不一定是有钱人才喜欢干这事，相对聪明一点的人也会这么干。</p><p>那么来说说信息差吧，什么是信息差呢？</p><p>举个最简单的例子，闲鱼上卖的那些二手教程，为什么会有那么多人买？就是因为卖教程的人知道这些资源去哪里获取，而那些买教程的人天真的以为或者“懒惰”的认为只要在这个卖家这里才能获取到资源。<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/redouce0.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></p><p>这就是信息差，信息差产生了价值。其实你回头看，那么多生意，不就是在做信息差，赚取差价么？</p><p>以学习编程为例吧，有些人想要学习编程，会怎么做呢？可能他会想到去培训机构学习。也有些人想自学，于是到类似慕课网这些视频教程网站付费学习。</p><p>但其实也有免费的视频教程学习的地方。而且质量还很不错,接下来就说两个，可能你不知道的获取资源教程的信息差。</p><h1 id="bilibili"><a href="#bilibili" class="headerlink" title="bilibili"></a>bilibili</h1><p>可能有些人觉得奇怪，b站不就是一个二次元的网站么？让我上面去学习 cosplay 么？</p><p>其实不然，b站上面的学习资源简直超乎你的想象：</p><p>比如学习英语:</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/redouce1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>学习Python:<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/redouce2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></p><p>学习PS:<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/redouce3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></p><p>太多了，就不一一举例了。</p><h1 id="YouTube"><a href="#YouTube" class="headerlink" title="YouTube"></a>YouTube</h1><p><a href="https://youtube.com" target="_blank" rel="noopener">油管</a>，其实b站有点像国外的<a href="https://youtube.com" target="_blank" rel="noopener">油管</a>，但是之前b站整顿了一下下架了很多视频。<a href="https://youtube.com" target="_blank" rel="noopener">油管</a>可以说是最全的视频资源平台。</p><p>国内很多需要会员的才能看的视频都能在<a href="https://youtube.com" target="_blank" rel="noopener">油管</a>找到。教程资源就更不用说了：</p><p>比如英语教程：<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/redouce4.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></p><p>比如计算机教程：<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/redouce5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></p><p>比如java ssm教程：<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/redouce6.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></p><p>这些都是信息不对称，也是对信息的一些敏感的。在自己承受范围能用钱买信息买时间当然是不错，但是有能掌握一些别人不知道的信息的能力也很可贵。</p><h1 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h1><p><a href="https://wistbean.github.io/make-money-on-the-internet.html">通过互联网赚钱的 9 种渠道</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="资源推荐" scheme="https://wistbean.github.io/categories/%E8%B5%84%E6%BA%90%E6%8E%A8%E8%8D%90/"/>
    
    
      <category term="互联网" scheme="https://wistbean.github.io/tags/%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
      <category term="资源推荐" scheme="https://wistbean.github.io/tags/%E8%B5%84%E6%BA%90%E6%8E%A8%E8%8D%90/"/>
    
  </entry>
  
  <entry>
    <title>怎么才能让自己不要成为韭菜</title>
    <link href="https://wistbean.github.io/jiucai.html"/>
    <id>https://wistbean.github.io/jiucai.html</id>
    <published>2018-09-27T14:19:47.000Z</published>
    <updated>2019-02-23T17:53:56.188Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>        <div id="aplayer-EPFmwavV" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-EPFmwavV"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "怎么才能让自己不要成为韭菜",              author: "wistbean",              url: "/images/44_2.mp3",              pic: "",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><p>最近看了李笑来老师的新书《韭菜的自我修养》。</p><p>前不久李笑来的录音被疯传，我听了，那时候我觉得吧，虽然说的都是大实话，但是里边夹杂了一些脏话，还有一些言论触及到了“韭菜们”脆弱又敏感的心，所以后来就有我们看到的很多骂李笑来的人，说他割韭菜，吃相难看等。</p><p>我对他了解不多，只是看过他的一些文章和书，所以这里不想评价李笑来老师，而且，也没资格。</p><p>还是来聊聊这本书吧，这本书呢，说的都是大实话，其实书名叫做韭菜的自我修养并不是告诉你怎么成为更好的韭菜。而是告诉我们说，怎么去摆脱韭菜这个宿命。怎么去做交易，如何把控好风险等。</p><p>有些人可能会说，我现在又没钱，不需要投资，等自己有钱了再说。这就有点韭菜思维了，越是没钱的时候，越是学习的时候，研究价值再去买卖，是聪明，一进场就买卖再去研究价值，就是愚蠢。</p><h1 id="那么什么是韭菜？"><a href="#那么什么是韭菜？" class="headerlink" title="那么什么是韭菜？"></a>那么什么是韭菜？</h1><p>韭菜这个词在 2018 年特么火，特别是在 P2P 频繁暴雷的时候，大多数人对韭菜的理解就是在做交易的时候赔了钱或者被骗了钱的人。比如那些借钱给 P2P 平台，最后平台跑路了，那么投进去的钱也跟着没了，这时候这些钱没了的人就被认为是韭菜。</p><p>我一朋友，之前发现某 P2P 平台收益率挺高，一开始投了点钱，赚了不少，尝到了甜头之后就去申请好多张信用卡，把钱套现了然后都投在了这个 P2P 里面去，后来这个平台爆了，老板跑路了。他整个人都蒙圈了，直接欠下一屁股债。只能说他这根韭菜被割的连渣都不剩。</p><p>书中一开始对韭菜的定义是：“在交易市场里边没有赚到钱，甚至赔了钱的势单力薄的散户”，他们一般是缺乏基本的阅读能力，比如购买所有的产品都不会去看说明书的人，他们拒绝学习，拿来主义，伸手党，他们一进场不管三七二十一就买买买，说白了就是有点傻逼。</p><h1 id="为什么买就跌，卖就涨？"><a href="#为什么买就跌，卖就涨？" class="headerlink" title="为什么买就跌，卖就涨？"></a>为什么买就跌，卖就涨？</h1><p>在市场中交易的时候都有这个诡异的现象，就是你一买，他妈的就跌了，你一卖，他妈的就蹭蹭的涨。</p><p>这是因为我们是普通人，属于大部分的人，当连你都在讨论某股票的时候，说明行情已经到头了，牛市要结束了。</p><blockquote><p>这时候最好的做法就是别动，啥都不买，等到了熊市，你发现大家都在骂娘的时候，你再买。</p></blockquote><p>但是韭菜不这么做，买了再说。</p><h1 id="被套牢了怎么办？"><a href="#被套牢了怎么办？" class="headerlink" title="被套牢了怎么办？"></a>被套牢了怎么办？</h1><p>有一种最傻逼或者说最惨的投资就是一进场就花掉了自己的钱，不仅如此，还花掉了借来的钱，企图借钱投资，还加上杠杆。</p><p>被套牢了慌的一逼，然而对于一些聪明的人来说，他们会怎么做？</p><blockquote><ol><li>还有钱就慢慢补仓</li><li>钱不够就在场外拼命赚钱</li><li>不断的学习</li></ol></blockquote><h1 id="投资者和投机者-韭菜-的区别"><a href="#投资者和投机者-韭菜-的区别" class="headerlink" title="投资者和投机者(韭菜)的区别"></a>投资者和投机者(韭菜)的区别</h1><p>很多人会把长期和短期来对投资和投机作为判断依据，一般认为短期的就是投机，长期的就是投资。可是投机也有长期的，投资也有短期的。比如成功的短期投资，成功的长期投机。</p><p>所以投资和投机的判断依据应该是两个字————学习。</p><p>投资者更加善于学习，他们会在交易前认真的研究，深入的学习，交易后总结归纳，深入思考，完善下次交易的策略。</p><p>而投机者呢？他们拒绝学习，最好有人告诉他怎么买就行，伸手党。这其实就是韭菜，是傻逼。</p><p>那些牛逼的交易者，他们都是学习的高手。我很赞同书中的一句话：「思考带来决策，决策带来行动，行动改变命运」。</p><h1 id="韭菜的错误观念"><a href="#韭菜的错误观念" class="headerlink" title="韭菜的错误观念"></a>韭菜的错误观念</h1><p>韭菜们认为交易就是一场零和游戏，也就是说他们认为只要一方的赚钱了，必然意味着另一方的赔了同样的钱，各方的收益和损失相加总和永远为0。</p><p>这是一种错误的观念，在牛市的时候，大部分人都赚钱了，赔钱的只有少部分，他们各方的收益和损失相加总和不可能为0。</p><p>所以，交易是一种非零和游戏。正因为非零和，买家和卖家之间的思考不一致，才会产生交易。</p><h1 id="韭菜没有实力"><a href="#韭菜没有实力" class="headerlink" title="韭菜没有实力"></a>韭菜没有实力</h1><p>韭菜被割就离场了，并不是因为他们没有耐心，而是因为他们没有实力，也就是没有现金流，没有场外赚钱的能力。所以没有办法去控制仓位。而有实力的人能够慢慢补仓，不着急，所以看起来很有耐心。</p><h1 id="韭菜不计算风险"><a href="#韭菜不计算风险" class="headerlink" title="韭菜不计算风险"></a>韭菜不计算风险</h1><p>获得经验最好的方法就是自己身体力行的去实践，但是对于风险的经验，绝壁不是你自己去实践，而是观察别人冒险，去分析，总结，学习。</p><p>要学会计算风险，应该是先胜而后战，打有把握的战，没有 50% 以上的胜率咱们不干。</p><p>在投资中有一个叫做「回报风险比」的概念，也就是 回报风险比 = 回报/风险。 显然，回报风险比越高，就越有赚钱的把握。</p><p>那么应该如何提高回报风险比呢？ 当然是提高分子，降低分母。</p><p>对于分子来说，也就是回报，最好的做法就是买入就不动分子了，不管涨跌，穿越多次牛市。</p><p>对于分母来说，也就是风险，风险主要涉及到「止损的设定」和「交易的频次」。</p><p>对于止损的设定不是随便乱设置的，应该看交易标的日常波动，结合多种因素设置止损。</p><p>交易的频次就要降低，不要狂买狂卖，每次交易都有手续费的。这也是风险的因素之一。</p><h1 id="韭菜没有性生活"><a href="#韭菜没有性生活" class="headerlink" title="韭菜没有性生活"></a>韭菜没有性生活</h1><p>看到一个搞笑的，说的是韭菜在跟女朋友做爱都一直看着手机盯着盘。</p><p>大多数韭菜都没有了生活，他们一旦进入交易就整天盯着K线图啥的，而聪明的人是把时间用于认真生活，学习成长，这样他们也更容易做到降低交易频率，从而降低了风险，提高了回报风险比。</p><h1 id="韭菜没有周期概念"><a href="#韭菜没有周期概念" class="headerlink" title="韭菜没有周期概念"></a>韭菜没有周期概念</h1><p>他们谈的更多的是趋势，而这种趋势只是眼前的上升和下降，但这不是趋势，这只是表象。</p><p>周期的构成是一个上升的趋势加上一个下降的趋势，而真正的趋势，是要多个周期之后才能展现出来的。</p><p>韭菜没有这概念，所以没办法降低交易频率。快入快出，痿了吧？</p><h1 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h1><ul><li><a href="https://wistbean.github.io/make-money-on-the-internet.html">通过互联网赚钱的 9 种渠道</a></li><li><a href="https://wistbean.github.io/paypal-withdrawing-rmb.html">使用Payoneer将Paypal金额提现人民币到银行卡</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="podcast" scheme="https://wistbean.github.io/categories/podcast/"/>
    
      <category term="肯定会电台" scheme="https://wistbean.github.io/categories/podcast/%E8%82%AF%E5%AE%9A%E4%BC%9A%E7%94%B5%E5%8F%B0/"/>
    
      <category term="个人理财" scheme="https://wistbean.github.io/categories/podcast/%E8%82%AF%E5%AE%9A%E4%BC%9A%E7%94%B5%E5%8F%B0/%E4%B8%AA%E4%BA%BA%E7%90%86%E8%B4%A2/"/>
    
      <category term="互联网" scheme="https://wistbean.github.io/categories/podcast/%E8%82%AF%E5%AE%9A%E4%BC%9A%E7%94%B5%E5%8F%B0/%E4%B8%AA%E4%BA%BA%E7%90%86%E8%B4%A2/%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
    
      <category term="互联网" scheme="https://wistbean.github.io/tags/%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
      <category term="个人理财" scheme="https://wistbean.github.io/tags/%E4%B8%AA%E4%BA%BA%E7%90%86%E8%B4%A2/"/>
    
      <category term="赚钱" scheme="https://wistbean.github.io/tags/%E8%B5%9A%E9%92%B1/"/>
    
      <category term="韭菜的自我修养" scheme="https://wistbean.github.io/tags/%E9%9F%AD%E8%8F%9C%E7%9A%84%E8%87%AA%E6%88%91%E4%BF%AE%E5%85%BB/"/>
    
      <category term="李笑来" scheme="https://wistbean.github.io/tags/%E6%9D%8E%E7%AC%91%E6%9D%A5/"/>
    
  </entry>
  
  <entry>
    <title>我艹你妈的，你长得也太好看了吧</title>
    <link href="https://wistbean.github.io/encourage-more.html"/>
    <id>https://wistbean.github.io/encourage-more.html</id>
    <published>2018-09-26T16:00:29.000Z</published>
    <updated>2018-12-27T13:46:47.965Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>我记得我之前有一个中午在美团上点了外卖，那时候等了很久，外卖还没到。肚子饿得慌，只能催小哥快点。小哥居然没回。</p><p>那时候我点了一份粥和一份肠粉。想着这两样做起来也不用多久啊，而且距离我的地方也不远，怎么那么久？</p><p>再等了一会小哥才给我打电话说到楼下了，叫我下去取，我那时候是有点不爽的，打算到楼下屌他一顿。</p><p>等我到了楼下，我看到小哥的表情很奇怪，有一种好像考试不及格怕被家长知道的样子。他说：”不好意思啊，我刚骑车的时候摔倒了，把你的餐给撒了。”</p><p>我看到那个餐，真是惨不忍睹，筷子都插到餐盒里面去了。小哥的手和脚都擦伤了，贴了几块创可贴，估计是刚买的。</p><p>小哥看到我楞了一下急忙说真的对不起，对不起，一边说一边从自己口袋掏出 20 块钱，说是要弥补我。</p><p>本来一开始我是有点生气的，但是不知怎么的看到他这样我一点也气不起来。说了句：”没事，钱不用给我了。你也不是故意的。”</p><p>小哥差点哭了，执意要给我这 20 块钱。</p><p>说真的，我当时完全可以屌他：”你他妈送这么久，还把我的餐弄成这样，吧啦吧啦…”,然后顺手把 20 块钱拿了，顺便在 APP 上给个差评。</p><p>但是我没这么做，是因为我突然想到，如果对方是我，我处于这种情况，我一定已经非常自责了，会想很多，肯定会被对方批评，如果被投诉了，那工作就不保了啊。</p><p>也就是我当时这么换位一想，说出了那句你也不是故意的。最后我还接过小哥手中的餐，跟他说了声下次路上注意点。</p><p>小哥连声感谢，眼圈泛红，一直目送到我走进楼门。</p><p>回到家，我反而觉得心情特好，感觉自己做对了一件事情。也明白了，少去批评别人。</p><p>批评别人的事情少做，因为人非圣人，每个人都会犯错，因为术业有专攻，每个人都是从小白开始做起。</p><p>批评，除了让对方心里难受之外，对方可能还会跟你更多的争论，甚至产生矛盾。倘若我当时批评了小哥，我想他肯定一整天都不在工作状态，心情会很不好，说不定又在路上摔多一次。</p><p><strong>批评要少做，相反的，鼓励与赞赏可以多做。</strong></p><p>不知道别人怎么样，反正我自己被人夸一下真的会开心，特别是我很努力的把事情做好之后，被团队的朋友说一句彬哥牛逼，虽然我嘴上笑笑说没什么啦，但是内心真的在偷乐。</p><p>教你一个骂人骂到对方爽爽的方法，独家秘笈，屡试不爽哈，你一边骂他，他还脸上笑嘻嘻，心里依然笑嘻嘻。</p><p>比如你骂他：”我x你妈啊，你也太牛逼了吧”。</p><p>或者你骂他：”你他妈的，你怎么做到的，真是太厉害了”。</p><p>又或者骂他：”你他妈的，长得也太好看了吧”。</p><p>反正就是你骂了人家，要记得在后面夸他一句。而且不要太虚伪的那种，那么这时候他往往会忽略你前面骂他的那一句话。</p><p>或许这就是人性吧。</p><p>所以呀，当身边的朋友真的做出点小成绩出来，真心的鼓励和赞赏对方，真的能让对方心情好，做事效率更高的。</p><p>之前不知道为什么自己照镜子的时候老是对着镜子说：”你他妈长得帅有什么用？”，我想现在我已经知道答案了。</p><h1 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h1><ul><li><a href="https://wistbean.github.io/present.html">读书:一个年轻人和老人的故事</a></li><li><a href="https://wistbean.github.io/spend-money.html">现在已经不像父母那个年代了,花钱也是一种学问</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="个人提升" scheme="https://wistbean.github.io/categories/%E4%B8%AA%E4%BA%BA%E6%8F%90%E5%8D%87/"/>
    
    
      <category term="个人提升" scheme="https://wistbean.github.io/tags/%E4%B8%AA%E4%BA%BA%E6%8F%90%E5%8D%87/"/>
    
  </entry>
  
  <entry>
    <title>PyCharm 使用教程：02 完全定制属于你自己的PyCharm编辑器</title>
    <link href="https://wistbean.github.io/pycharm-02.html"/>
    <id>https://wistbean.github.io/pycharm-02.html</id>
    <published>2018-09-25T14:06:14.000Z</published>
    <updated>2018-12-27T13:46:50.900Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>可以根据你自己的喜好，把 Pycharm 定制成你自己喜欢的样子，接下来说说怎么去定制你的 Pycharm 编辑器。</p><h2 id="定制-IDE-颜色"><a href="#定制-IDE-颜色" class="headerlink" title="定制 IDE 颜色"></a>定制 IDE 颜色</h2><p>根据你的喜好，你可以把 IDE 中的错误信息，面板，代码等颜色进行定制。</p><p>使用快捷键 <code>Ctrl+Alt+S</code> 打开 PyCharm 的设置面板，在<code>Editor | Color Scheme | General</code>选择你喜欢的颜色主题，我这里选择的就是 Darcula，喜欢这种黑色的极客范。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/pycharm_scheme.png" alt="PyCharm颜色主题设置" title="">                </div>                <div class="image-caption">PyCharm颜色主题设置</div>            </figure><h2 id="修改界面中默认的字体"><a href="#修改界面中默认的字体" class="headerlink" title="修改界面中默认的字体"></a>修改界面中默认的字体</h2><p>想要修改 Pycharm 中默认的字体，可以使用快捷键 <code>Ctrl+Alt+S</code> 打开设置面板，然后进入 <code>Appearance &amp; Behavior | Appearance.</code> ,选择<code>Override default fonts by (not recommended)</code>，接着你就可以更改字体和大小了，我个人认为默认的就挺好看了。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/pycharm_uifont.png" alt="PyCharm颜色主题设置" title="">                </div>                <div class="image-caption">PyCharm颜色主题设置</div>            </figure><h2 id="快速调整窗口大小"><a href="#快速调整窗口大小" class="headerlink" title="快速调整窗口大小"></a>快速调整窗口大小</h2><p>处于垂直方向的窗口可以使用 <code>Ctrl+Shift+上</code> 或者 <code>Ctrl+Shift+下</code> 调整窗口的大小。<br>处于水平方向的窗口可以使用 <code>Ctrl+Shift+左</code> 或者 <code>Ctrl+Shift+右</code> 调整窗口的大小。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/pycharm_resize.gif" alt="PyCharm颜色主题设置" title="">                </div>                <div class="image-caption">PyCharm颜色主题设置</div>            </figure><h2 id="改变你的代码字体大小"><a href="#改变你的代码字体大小" class="headerlink" title="改变你的代码字体大小"></a>改变你的代码字体大小</h2><p>使用快捷键 <code>Ctrl+Alt+S</code> 打开 PyCharm 的设置面板，进入 <code>Editor | General</code>,把<code>Change font size (Zoom) with Ctrl+Mouse Wheel</code>给选上，然后<br>可以到你的打代码的面板进行骚操作了。 按住 Ctrl 键，然后滚动你的鼠标滑轮，可以看到字体可以根据你的需要变大变小了。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/pycharm_textsize.gif" alt="PyCharm颜色主题设置" title="">                </div>                <div class="image-caption">PyCharm颜色主题设置</div>            </figure><h2 id="设置你的快捷键"><a href="#设置你的快捷键" class="headerlink" title="设置你的快捷键"></a>设置你的快捷键</h2><p>Pycharm 的爽点之一就是可以使用各种快捷键，让你的快的飞起。使用快捷键 <code>Ctrl+Alt+S</code> 打开 PyCharm 的设置面板，进入 <code>Keymap</code>。<br>在这里你可以设置快捷方式，如果你之前使用过其他的编辑器，完全可以选择它们，Pycharm可以延用这些编辑器的快捷键使用。</p><p>另外，如果你想对个别的快捷键设置，只需要 右键–&gt;<code>Add keyboard shortcut</code> 进行设置就可以了。</p><p>往后有时间介绍一些常用的快捷键吧，让你的编辑器飞起来。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/pycharm_keymap.png" alt="PyCharm颜色主题设置" title="">                </div>                <div class="image-caption">PyCharm颜色主题设置</div>            </figure><h2 id="设置你的代码风格"><a href="#设置你的代码风格" class="headerlink" title="设置你的代码风格"></a>设置你的代码风格</h2><p>进入设置面板，然后进入<code>Editor | Code Style | Python</code> ,可以设置你的代码风格，比如 tab 有几个空格，其实我觉得默认就挺好了。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/pycharm_codestyle.png" alt="PyCharm颜色主题设置" title="">                </div>                <div class="image-caption">PyCharm颜色主题设置</div>            </figure><p>ok，以上就是PyCharm常用的定制方式。</p><h1 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h1><ul><li><a href="https://wistbean.github.io/pycharm-01.html">PyCharm 使用教程：01 安装PyCharm</a></li><li><a href="https://wistbean.github.io/python-tutorial.html">python3入门基础有趣的教程</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="python" scheme="https://wistbean.github.io/categories/python/"/>
    
      <category term="PyCharm" scheme="https://wistbean.github.io/categories/python/PyCharm/"/>
    
    
      <category term="教程" scheme="https://wistbean.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="python" scheme="https://wistbean.github.io/tags/python/"/>
    
      <category term="PyCharm" scheme="https://wistbean.github.io/tags/PyCharm/"/>
    
      <category term="工具使用" scheme="https://wistbean.github.io/tags/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>搬瓦工优惠码怎么来的？购买搬瓦工VPS省钱攻略：获取搬瓦工优惠码</title>
    <link href="https://wistbean.github.io/banwagong-coupon.html"/>
    <id>https://wistbean.github.io/banwagong-coupon.html</id>
    <published>2018-09-25T06:44:18.000Z</published>
    <updated>2019-03-01T07:33:12.723Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="隐藏的搬瓦工优惠码"><a href="#隐藏的搬瓦工优惠码" class="headerlink" title="隐藏的搬瓦工优惠码"></a>隐藏的搬瓦工优惠码</h1><p>搬瓦工VPS的性价比还是挺高的，可以使用搬瓦工搭建梯子，搭建自己的网站，存储等等。虽然价格算是很公道，但是其实有很多优惠码是可以减少一些费用的。那么搬瓦工的优惠码是怎么来的呢？</p><p>搬瓦工其实有一个隐藏的优惠码，这个优惠码隐藏在搬瓦工的源代码中，使用这个优惠码就可以得到优惠。</p><h1 id="获取搬瓦工优惠码"><a href="#获取搬瓦工优惠码" class="headerlink" title="获取搬瓦工优惠码"></a>获取搬瓦工优惠码</h1><p>在<a href="https://www.bwh88.net/aff.php?aff=32874" target="_blank" rel="noopener">搬瓦工官网</a> ，可以看到这里有一些供你选择的服务器，以下是可以获取优惠码的服务器：</p><table><thead><tr><th>搬瓦工配置</th><th>搬瓦工费用</th><th>优惠链接</th></tr></thead><tbody><tr><td><em>SPECIAL 40G KVM PROMO V3 - LOS ANGELES - CN2  </em> <br>  SSD硬盘: 40  GB RAID-10 <br> RAM内存: 2048   MB <br> CPU处理器: 1x Intel Xeon <br> Transfer流量: 2000  GB/月 <br> 连接速度: 1 Gigabit <br> 洛杉矶机房，CN2路线，使用中国的直线路线，速度加快</td><td>$27.99/季</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=58" target="_blank" rel="noopener">点击进入</a></td></tr><tr><td><em>SPECIAL 20G KVM PROMO V3 - LOS ANGELES - CN2 </em> <br>  SSD硬盘: 20 GB RAID-10 <br> RAM内存: 1024  MB <br> CPU处理器: 1x Intel Xeon <br> Transfer流量: 1000  GB/月 <br> 连接速度: 1 Gigabit <br> 洛杉矶机房，CN2路线，使用中国的直线路线，速度加快</td><td>$29.99 /半年</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=57" target="_blank" rel="noopener">点击进入</a></td></tr><tr><td><em>80G KVM – PROMO</em> <br> SSD硬盘: 80 GB RAID-10<br>RAM内存: 4 GB<br>CPU处理器: 4x Intel Xeon<br>Transfer流量: 3 TB/mo<br>连接速度: 1 Gigabit<br>Multiple locations</td><td>$19.99/月</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=46" target="_blank" rel="noopener">点击进入</a></td></tr><tr><td><em>20G KVM – PROMO</em> <br> SSD硬盘: 20 GB RAID-10 <br>RAM内存: 1024 MB <br>CPU处理器: 2x Intel Xeon <br>Transfer流量: 1 TB/mo <br>连接速度: 1 Gigabit <br>Multiple locations</td><td>$49.99/年</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=44" target="_blank" rel="noopener">点击进入</a></td></tr><tr><td><em>40G KVM – PROMO</em> <br> SSD硬盘: 40 GB RAID-10 <br>RAM内存: 2 GB <br>CPU处理器: 3x Intel Xeon <br>Transfer流量: 2 TB/mo <br>连接速度: 1 Gigabit <br>Multiple locations</td><td>$99.99/年</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=45" target="_blank" rel="noopener">点击进入</a></td></tr><tr><td><em>160G KVM – PROMO</em> <br> SSD硬盘: 160 GB RAID-10<br>RAM内存: 8 GB<br>CPU处理器: 5x Intel Xeon<br>Transfer流量: 4 TB/mo<br>连接速度: 1 Gigabit<br>Multiple locations</td><td>$39.99/月</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=47" target="_blank" rel="noopener">点击进入</a></td></tr><tr><td><em>3200G KVM – PROMO</em> <br> SSD硬盘: 320 GB RAID-10<br>RAM内存: 16 GB<br>CPU处理器: 6x Intel Xeon<br>Transfer流量: 5 TB/mo<br>连接速度: 1 Gigabit<br>Multiple locations</td><td>$79.99/月</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=48" target="_blank" rel="noopener">点击进入</a></td></tr></tbody></table><p>这时候可以选择想要购买服务器的时长和服务器所处的位置。选择完之后<strong>不要急着点击 「Add to Cart」</strong>。</p><p>这时候就可以获取隐藏的优惠码了，我们对着这个网页：鼠标右击–&gt;查看网页源代码。</p><p>接着 Ctrl + F 搜索 code ，这时候你就会看到 Try this promo code: xxxx，这里的xxxx就是搬瓦工优惠吗，把它复制下来。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/banwagong04.png" alt="搬瓦工vps" title="">                </div>                <div class="image-caption">搬瓦工vps</div>            </figure><p>然后回到我们的购买页，点击「Add to Cart」添加到购物车。</p><p>可以看到这里有一个 Promotional Code，我们输入刚才复制的搬瓦工优惠码，然后点击 「Validate Code」。可以发现得到了搬瓦工的优惠，这里我用 320G 的VPS 为例，搬瓦工优惠了 4.8%：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/banwagong05.png" alt="搬瓦工vps" title="">                </div>                <div class="image-caption">搬瓦工vps</div>            </figure><p>接着就可以以比别人更便宜的价格点击 CheckOut 付款啦。</p><h1 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h1><ul><li><a href="https://wistbean.github.io/banwagong-vpn.html">使用搬瓦工快速搭建自己的VPN</a></li><li><a href="https://wistbean.github.io/ipsec,l2tp_vpn.html">CentOS快速搭建一个属于自己的IPsec/L2TP VPN</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="搬瓦工" scheme="https://wistbean.github.io/categories/%E6%90%AC%E7%93%A6%E5%B7%A5/"/>
    
    
      <category term="搬瓦工" scheme="https://wistbean.github.io/tags/%E6%90%AC%E7%93%A6%E5%B7%A5/"/>
    
      <category term="vps" scheme="https://wistbean.github.io/tags/vps/"/>
    
      <category term="优惠码" scheme="https://wistbean.github.io/tags/%E4%BC%98%E6%83%A0%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>「3-2」使用 PowerDesigner 逆向生成 MySQL 数据库</title>
    <link href="https://wistbean.github.io/java-ssm-3-2.html"/>
    <id>https://wistbean.github.io/java-ssm-3-2.html</id>
    <published>2018-09-23T17:42:42.000Z</published>
    <updated>2019-02-23T17:53:56.141Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="SSM视频教程第3-2节：PowerDesigner逆向的生成MySQL"><a href="#SSM视频教程第3-2节：PowerDesigner逆向的生成MySQL" class="headerlink" title="SSM视频教程第3-2节：PowerDesigner逆向的生成MySQL"></a>SSM视频教程第3-2节：PowerDesigner逆向的生成MySQL</h1><iframe src="//player.bilibili.com/player.html?aid=32424536&cid=56732666&page=1" width="100%" height="436" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><h1 id="SSM视频教程第-3-2-节课程概要"><a href="#SSM视频教程第-3-2-节课程概要" class="headerlink" title="SSM视频教程第 3-2 节课程概要"></a>SSM视频教程第 3-2 节课程概要</h1><ul><li>PowerDesigner 创建物理模型</li><li>PowerDesigner 创建商品分类表、商品表</li><li>PowerDesigner 设置注释以及默认值</li><li>PowerDesigner 连接MySQL服务器配置</li><li>PowerDesigner 逆向生成数据表</li></ul><h1 id="PowerDesigner-破解版"><a href="#PowerDesigner-破解版" class="headerlink" title="PowerDesigner 破解版"></a>PowerDesigner 破解版</h1><p>PowerDesigner 破解版工具分享在<a href="https://t.zsxq.com/VNZNbIe" target="_blank" rel="noopener">知识星球</a>，仅提供给会员使用。</p><h1 id="SSM视频教程目录"><a href="#SSM视频教程目录" class="headerlink" title="SSM视频教程目录"></a>SSM视频教程目录</h1><ul><li><a href="https://wistbean.github.io/java-ssm-video.html#SSM%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B%E7%9B%AE%E5%BD%95">SSM视频教程目录</a></li></ul><h1 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h1><ul><li><a href="https://blog.csdn.net/winy_lm/article/details/70598378" target="_blank" rel="noopener">PowerDesigner逆向生成MYSQL数据库表结构总结</a></li><li><a href="https://www.cnblogs.com/lcs-java/p/8465646.html" target="_blank" rel="noopener">powerdesigner连接MySQL数据库及逆向生成PDM</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Java" scheme="https://wistbean.github.io/categories/Java/"/>
    
      <category term="Java SSM视频教程" scheme="https://wistbean.github.io/categories/Java/Java-SSM%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="教程" scheme="https://wistbean.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Java" scheme="https://wistbean.github.io/tags/Java/"/>
    
      <category term="Intellij IDEA" scheme="https://wistbean.github.io/tags/Intellij-IDEA/"/>
    
      <category term="Java视频教程" scheme="https://wistbean.github.io/tags/Java%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/"/>
    
      <category term="项目实战" scheme="https://wistbean.github.io/tags/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/"/>
    
      <category term="分布式" scheme="https://wistbean.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
      <category term="SSM" scheme="https://wistbean.github.io/tags/SSM/"/>
    
      <category term="码农商城" scheme="https://wistbean.github.io/tags/%E7%A0%81%E5%86%9C%E5%95%86%E5%9F%8E/"/>
    
      <category term="EasyUI" scheme="https://wistbean.github.io/tags/EasyUI/"/>
    
  </entry>
  
  <entry>
    <title>PyCharm 使用教程：01 安装PyCharm</title>
    <link href="https://wistbean.github.io/pycharm-01.html"/>
    <id>https://wistbean.github.io/pycharm-01.html</id>
    <published>2018-09-23T06:21:00.000Z</published>
    <updated>2018-12-27T13:46:48.475Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>PyCharm 给 Python开发人员提供了很多的基本工具，能够让我们在上面很爽的开发我们的 Python 代码。 Python 出自 <a href="https://www.jetbrains.com" target="_blank" rel="noopener">jetbrains</a>,如果你开发过 Android 或者 JAVA, 那么你应对 <code>Android Studio</code> 和 <code>Intellij IDEA</code> 不陌生，它们都是基于jetbrains的编辑器。不得不说，各种快捷键和插件真的是牛的一批。</p><h1 id="PyCharm-的版本"><a href="#PyCharm-的版本" class="headerlink" title="PyCharm 的版本"></a>PyCharm 的版本</h1><p>PyCharm 有三个版本，它们分别是：</p><ul><li>Professional</li><li>Community</li><li>Educational</li></ul><p>Community 和 Educational 版本是开源的，可以免费使用，不过呢，能用的功能相对来说就比较少了，Professional 版本提供了一整套优秀的工具。看你自己喜欢，我自己下载的是 Professional 版本。</p><h1 id="下载安装PyCharm"><a href="#下载安装PyCharm" class="headerlink" title="下载安装PyCharm"></a>下载安装PyCharm</h1><p>点击<a href="https://www.jetbrains.com/pycharm/" target="_blank" rel="noopener">PyCharm下载</a>，根据你自己的操作系统选择下载相应的文件。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/pycharm1.png" alt="PyCharm" title="">                </div>                <div class="image-caption">PyCharm</div>            </figure><p>安装完成之后，如果你是第一次使用 PyCharm 的话，那么直接选择「 Do not import settings 」就可以了：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://www.jetbrains.com/help/img/idea/2018.2/py_complete_installation_dialog.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h1 id="选择PyCharm主题"><a href="#选择PyCharm主题" class="headerlink" title="选择PyCharm主题"></a>选择PyCharm主题</h1><p>接着 PyCharm 会让你选择主题，有 Default 主题还有 Darcula 的，我这里选择 Darcula ，感觉极客一点。不过现在随便选也没关系，因为等下进入可以自己设置。</p><h1 id="下载安装PyCharm插件"><a href="#下载安装PyCharm插件" class="headerlink" title="下载安装PyCharm插件"></a>下载安装PyCharm插件</h1><p>PyCharm的牛逼之处之一就是拥有丰富的插件，正是有了这些插件才让我们在开发的时候爽歪歪，比如有 MarkDown 插件，Git插件，Vim插件，太多了，如果你现在不太清楚有什么插件用的话，没关系，往后我写篇专门介绍插件的推荐及使用。</p><p>当你安装完成之后， Pycharm 会有一个窗口是这样的，直接点击 「Create New Project」来新建一个项目， open 是打开已有的项目，我们一开始木有，所以先创建吧：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://www.jetbrains.com/help/img/idea/2018.2/py_welcomeScreen.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h1 id="激活PyCharm"><a href="#激活PyCharm" class="headerlink" title="激活PyCharm"></a>激活PyCharm</h1><p>如果你用的是 Professional 版本的PyCharm，是需要收费的，不过它有30天免费的试用，激活的方式有三种：</p><ul><li>JetBrains Account</li><li>Activation code</li><li>License server</li></ul><p>如果你是学生党或者老师的话，那么你可以使用你的学生证<a href="https://sales.jetbrains.com/hc/zh-cn/articles/207154369-%E5%AD%A6%E7%94%9F%E6%8E%88%E6%9D%83%E7%94%B3%E8%AF%B7%E6%96%B9%E5%BC%8F" target="_blank" rel="noopener">免费授权</a>申请方式获得专业版本。<br>是不是很良心，不仅如此，官方还给初创公司50%折扣优惠，如果你所在的是创业公司，资金预算不是很多的话，不妨去申请优惠：<a href="https://www.jetbrains.com/shop/eform/startup" target="_blank" rel="noopener">针对创业公司的优惠计划</a></p><p>假如你既不是学生也不是老师，也不在初创公司，钱暂时不是很多的话，可以在公众号「学习python的正确姿势」发送 pycharm 获取激活码。</p><h1 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h1><ul><li><a href="https://wistbean.github.io/python-tutorial.html">python3入门基础有趣的教程</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="python" scheme="https://wistbean.github.io/categories/python/"/>
    
      <category term="PyCharm" scheme="https://wistbean.github.io/categories/python/PyCharm/"/>
    
    
      <category term="教程" scheme="https://wistbean.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="python" scheme="https://wistbean.github.io/tags/python/"/>
    
      <category term="PyCharm" scheme="https://wistbean.github.io/tags/PyCharm/"/>
    
      <category term="工具使用" scheme="https://wistbean.github.io/tags/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>为了不跟产品经理干起来，我决定学点产品思维</title>
    <link href="https://wistbean.github.io/product-thinking.html"/>
    <id>https://wistbean.github.io/product-thinking.html</id>
    <published>2018-09-21T11:04:39.000Z</published>
    <updated>2018-12-27T13:46:49.430Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=3&id=2056648136&auto=1&height=66"></iframe><p>以前我在跟产品经理讨论的时候，常常发现我们聊的不在同一个点上。我想的更多的是这个功能能不能实现？怎么实现？需要多少时间？怎么写代码好点？而产品经理想的更多的是用户的需求，用户喜欢怎么样的操作，怎么样才能让用户更方便的使用等。</p><p>可以看得出来，我和产品经理的思维方式是不同的，那会我只是局限于这个功能本身所需要的技术，而产品经理考虑的更多的是用户本身的需求。</p><p>我也经常发现有许多程序员和产品经理互怼，其实他们都希望这个产品更好，但是思维方式不同，考虑的地方不一样，所以经常说着说着就吵起来，甚至动手。我想如果程序员能够有点产品思维，那么应该会有更多的同理心，这样沟通起来应该会更加高效。<br>所以后来我就去了解学习产品方面的知识，在这过程中我发现，其实产品涉及到的东西很多。并不是仅仅局限于交互，用户的需求。</p><p>以前在学编程的时候，有一个叫做「面向对象」的概念，那会人们都说「万物皆对象」，说的是每个事物本身就是对象，它有自己的属性，有自己的功能，可以提供服务。后来我发现，其实对象就是产品，也就是说「万物皆产品」。</p><p>最近我就在想，如果是我自己做一款产品，我会怎么做呢？是想到做什么就做什么？还是由着自己的喜好来？</p><p>其实都不对，首先应该要做的是面向用户，是面向大部分的用户还是面向小部分用户，如果你去看早期的互联网产品大多都是面向大部分用户的，到了后来许多产品就主攻部分用户。我想应该是刚开始的时候红利期，所以面向大部分用户是个大机会，而到了后来<br>市场需求基本满了，这时候更多人愿意做的是 「1cm宽，100m深」的事情了。也就是所谓的垂直化。</p><p>做一款产品确定方向只是开始，接着还需要了解调查目标用户的需求，挖掘用户的需求点通常都是通过用户的人性，比如刚需的衣食住行，人性的一些弱点（贪婪，虚荣，攀比，装逼，好色，懒惰等等），看下现在的拼多多，饿了么，滴滴打车，1024论坛等都无不体现出来。</p><p>一般来说，发现用户的需求有<strong>痛点，痒点，爽点</strong>。</p><p>痛点说的是用户的刚需，就是用户本身有需求，而且这种需求是极度渴望被满足的。比如你在沙漠里面没水喝，这时候给你一瓶矿泉水，那么矿泉水就是产品，解决了你的痛点。</p><p>而痒点说的使用户有这需求，但是不一定要被满足，比如说你肚子饿了，你是选择吃方便面还是吃一顿海底捞？我想你应该内心肯定选的是海底捞，而这里的海底捞就是你更深层次的需求，但是，不是你的刚需，这就是你的痒点。</p><p>再说说爽点，这是用户更高一层的需求了，精神上的愉悦需求，吃饱喝足，干点啥？刷抖音？玩游戏？这些产品就是满足了你的爽点，顾名思义，就是让你用起来感到爽。</p><p>挖掘了到了需求然后呢？</p><p>需要紧跟趋势找到自家产品的解决方案，紧跟趋势是关键，可以看到从PC到移动，有多少产品死在了PC时代，又爆发出多少移动端的产品。假如有两个人有着共同的idea，也明确了需求，一个人去做PC网站，一个人去做小程序，你说，哪个会更好？<br>答案显而易见了吧。</p><p>当然了，产品涉及的还有很多，比如怎么去做差异化的竞争，怎么利用现有的资源去创造价值，怎么写文案，怎么推广，怎么营销，怎么打造品牌，怎么做数据分析，怎么拓展业务等等都是产品。</p><p>所以我认为不要把思维局限于本身的专业领域，学点产品思维是对自己很有帮助的，如果在生活中能够以产品的思维去看待事物，或许能提高我们的思维认知能力。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="podcast" scheme="https://wistbean.github.io/categories/podcast/"/>
    
      <category term="肯定会电台" scheme="https://wistbean.github.io/categories/podcast/%E8%82%AF%E5%AE%9A%E4%BC%9A%E7%94%B5%E5%8F%B0/"/>
    
      <category term="互联网" scheme="https://wistbean.github.io/categories/podcast/%E8%82%AF%E5%AE%9A%E4%BC%9A%E7%94%B5%E5%8F%B0/%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
    
      <category term="肯定会电台" scheme="https://wistbean.github.io/tags/%E8%82%AF%E5%AE%9A%E4%BC%9A%E7%94%B5%E5%8F%B0/"/>
    
      <category term="互联网" scheme="https://wistbean.github.io/tags/%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
  </entry>
  
  <entry>
    <title>「3-1」 后台管理系统 EasyUI 的使用</title>
    <link href="https://wistbean.github.io/java-ssm-3-1.html"/>
    <id>https://wistbean.github.io/java-ssm-3-1.html</id>
    <published>2018-09-18T16:40:25.000Z</published>
    <updated>2019-02-23T17:53:55.319Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="SSM视频教程第3-1节：后台管理系统-EasyUI-的使用"><a href="#SSM视频教程第3-1节：后台管理系统-EasyUI-的使用" class="headerlink" title="SSM视频教程第3-1节：后台管理系统 EasyUI 的使用"></a>SSM视频教程第3-1节：后台管理系统 EasyUI 的使用</h1><iframe src="//player.bilibili.com/player.html?aid=32045814&cid=56055222&page=1" width="100%" height="436" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><h1 id="SSM视频教程第-3-1-节课程概要"><a href="#SSM视频教程第-3-1-节课程概要" class="headerlink" title="SSM视频教程第 3-1 节课程概要"></a>SSM视频教程第 3-1 节课程概要</h1><h2 id="EasyUI-的使用"><a href="#EasyUI-的使用" class="headerlink" title="EasyUI 的使用"></a>EasyUI 的使用</h2><p>EasyUI for jQuery 的资源文件下载地址：<a href="https://www.jeasyui.com/download/downloads/jquery-easyui-1.6.3.zip" target="_blank" rel="noopener">Download EasyUI Package</a></p><p>EasyUI 的官方文档：<a href="https://www.jeasyui.com/documentation/index.php" target="_blank" rel="noopener">Documentation</a></p><h2 id="本节使用到的组件"><a href="#本节使用到的组件" class="headerlink" title="本节使用到的组件"></a>本节使用到的组件</h2><h3 id="Layout"><a href="#Layout" class="headerlink" title="Layout"></a>Layout</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://www.jeasyui.com/documentation/images/layout.png" alt="EasyUI 布局" title="">                </div>                <div class="image-caption">EasyUI 布局</div>            </figure><h3 id="Tree"><a href="#Tree" class="headerlink" title="Tree"></a>Tree</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://www.jeasyui.com/documentation/images/tree.png" alt="EasyUI 菜单" title="">                </div>                <div class="image-caption">EasyUI 菜单</div>            </figure><h3 id="Tabs"><a href="#Tabs" class="headerlink" title="Tabs"></a>Tabs</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://www.jeasyui.com/documentation/images/tabs.png" alt="EasyUI 导航标签" title="">                </div>                <div class="image-caption">EasyUI 导航标签</div>            </figure><h3 id="DataGrid"><a href="#DataGrid" class="headerlink" title="DataGrid"></a>DataGrid</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://www.jeasyui.com/documentation/images/datagrid.png" alt="EasyUI 表格" title="">                </div>                <div class="image-caption">EasyUI 表格</div>            </figure><h1 id="SSM视频教程目录"><a href="#SSM视频教程目录" class="headerlink" title="SSM视频教程目录"></a>SSM视频教程目录</h1><ul><li><a href="https://wistbean.github.io/java-ssm-video.html#SSM%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B%E7%9B%AE%E5%BD%95">SSM视频教程目录</a></li></ul><h1 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h1><ul><li><a href="http://www.runoob.com/jeasyui/jqueryeasyui-tutorial.html" target="_blank" rel="noopener">jQuery EasyUI 教程</a></li><li><a href="http://m.jeasyui.net/tutorial/index.html" target="_blank" rel="noopener">EasyUI 中文网</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Java" scheme="https://wistbean.github.io/categories/Java/"/>
    
      <category term="Java SSM视频教程" scheme="https://wistbean.github.io/categories/Java/Java-SSM%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="教程" scheme="https://wistbean.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Java" scheme="https://wistbean.github.io/tags/Java/"/>
    
      <category term="Intellij IDEA" scheme="https://wistbean.github.io/tags/Intellij-IDEA/"/>
    
      <category term="Java视频教程" scheme="https://wistbean.github.io/tags/Java%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/"/>
    
      <category term="项目实战" scheme="https://wistbean.github.io/tags/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/"/>
    
      <category term="分布式" scheme="https://wistbean.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
      <category term="SSM" scheme="https://wistbean.github.io/tags/SSM/"/>
    
      <category term="码农商城" scheme="https://wistbean.github.io/tags/%E7%A0%81%E5%86%9C%E5%95%86%E5%9F%8E/"/>
    
      <category term="EasyUI" scheme="https://wistbean.github.io/tags/EasyUI/"/>
    
  </entry>
  
  <entry>
    <title>GitHub是什么？如何使用？</title>
    <link href="https://wistbean.github.io/github.html"/>
    <id>https://wistbean.github.io/github.html</id>
    <published>2018-09-15T11:53:09.000Z</published>
    <updated>2018-12-27T13:46:49.139Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="GitHub是什么？"><a href="#GitHub是什么？" class="headerlink" title="GitHub是什么？"></a>GitHub是什么？</h1><p>GitHub就有点像微博，我们可以在上面看一些牛逼的人物写着开源的牛逼代码，觉得喜欢的话就给他们点赞，关注他们，甚至可以直接把他们的源代码拉下来，看着他们的代码，忘了那个她！</p><p>GitHub的首页有这样介绍：A better way to work together，也就是说我们除了去关注牛逼的人物还可以在上面一起合作写点东西出来，给我们提供一种更好的合作方式。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/github1.png" alt="github" title="">                </div>                <div class="image-caption">github</div>            </figure><p>GitHub简单来说就是基于 Git 的版本托管服务系统，是全球最大的社交编程及代码托管网站，因为里面大多都是男的在玩，所以说是全球最大的同性搞基社区，哈哈哈！</p><h1 id="GitHub有什么用？"><a href="#GitHub有什么用？" class="headerlink" title="GitHub有什么用？"></a>GitHub有什么用？</h1><p>其实GitHub除了可以让我们代码托管和多人在上面一起协作完成项目之外呢，我们还可以在上面建立自己的博客网站，官方称为GitHub Pages，你可以在GitHub上面创建一个仓库，以github.io为后缀，可以托管你自己的博客网站，直接通过你的仓库名就能在线的访问你的网站了，而且完全免费，我自己搭了个网站托管在上面好久啦，感觉棒棒哒！地址在这：<a href="http://www.wistbean.com" target="_blank" rel="noopener">http://www.wistbean.com</a>  (以前不知道听谁说，嫁人就要嫁给有自己网站的人，所以我就建了一个，嘿嘿嘿！)</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/github2.png" alt="github" title="">                </div>                <div class="image-caption">github</div>            </figure><p>如果你有什么优秀的开源项目在上面被人点赞（star）或者 Folllow,那就很 666 的了，因为在 Github 上面被人点赞要比你在朋友圈被人点赞要难的多的多。如果在上面托管你自己的比较有影响力的开源项目，在面试的时候提供给对方看，也是一个很不错的加分项！</p><h2 id="Respository"><a href="#Respository" class="headerlink" title="Respository"></a>Respository</h2><p>我们通常说在GitHub上面新建一个项目，这个项目就会在Respository里，Respository也就是仓库的意思，可以通过git使我们本地的项目与远程仓库保持同步，这样妈妈就不用担心我们的代码消失不见了！</p><h2 id="Issue"><a href="#Issue" class="headerlink" title="Issue"></a>Issue</h2><p>随着我们的代码提交的越来越多，当有人发现你的开源项目不错，就把你的代码给拉（clone）到他们本地，他们运行后发现有 bug 或者觉得你的代码有问题，那么他就会给你提Issue，我们可以发现他们的Issue，然后我们解决完bug之后可以将其 close 掉，表示我们已经修复了这个bug！</p><h2 id="Star"><a href="#Star" class="headerlink" title="Star"></a>Star</h2><p>我们去github看别人的开源项目的时候，发现很是不错，那我们就可以给这个项目 star 一下，也就是点赞，同时也是收藏的意思，在我们自己的star列表可以看到我们star过的项目。</p><h2 id="Fork"><a href="#Fork" class="headerlink" title="Fork"></a>Fork</h2><p>如果你对别人的项目感兴趣，或者对他感兴趣，你可以去fork他的项目，fork 之后你就会发现，你自己的仓库里面竟然有一个和他一模一样的项目，更加爽的是，你竟然可以在他原有代码的基础上进行修改或者添加功能！</p><h2 id="Pull-Request"><a href="#Pull-Request" class="headerlink" title="Pull Request"></a>Pull Request</h2><p>你给他添加完功能之后你发现，哇靠，我简直就是天才啊，这时候你是不是想告诉他，你这样的功能有多牛逼，那么这时候你就可以给他 Pull Request ，这时候他就看到你的代码，如果他觉得不错，接收了你的 Pull Request 之后，他就可以合并起来，这样他的项目就有你的一部分了！</p><h2 id="Watch"><a href="#Watch" class="headerlink" title="Watch"></a>Watch</h2><p>Watch 就是观察，当你 Watch 了某个项目，就相当于你关注了它，那么这个项目有什么动态，你都可以实时的获取更新。</p><h2 id="Gist"><a href="#Gist" class="headerlink" title="Gist"></a>Gist</h2><p>如果你想分享部分代码片段，可以使用 Gist，专门来分享代码片段的！</p><h1 id="GitHub上一些不错的开源项目"><a href="#GitHub上一些不错的开源项目" class="headerlink" title="GitHub上一些不错的开源项目"></a>GitHub上一些不错的开源项目</h1><h2 id="free-programming-books"><a href="#free-programming-books" class="headerlink" title="free-programming-books"></a>free-programming-books</h2><p>这个项目被 star 了10w+，有我一份力量哈哈，这个项目之所以这么多star，是因为它含有许多免费的编程书籍，并且支持许多语言的版本！<br>中文版地址在这：<a href="https://github.com/EbookFoundation/free-programming-books/blob/master/free-programming-books-zh.md#%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86" target="_blank" rel="noopener">https://github.com/EbookFoundation/free-programming-books/blob/master/free-programming-books-zh.md#%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86</a></p><h2 id="LearningNotes"><a href="#LearningNotes" class="headerlink" title="LearningNotes"></a>LearningNotes</h2><p>这个项目含有许多android，java，设计模式，算法等面试相关的知识与经验，受益匪浅！<br>地址：<a href="https://github.com/francistao/LearningNotes" target="_blank" rel="noopener">https://github.com/francistao/LearningNotes</a></p><h2 id="ResumeSample"><a href="#ResumeSample" class="headerlink" title="ResumeSample"></a>ResumeSample</h2><p>这个项目是专门为程序员提供的简历模板，包括PHP程序员简历模板、iOS程序员简历模板、Android程序员简历模板、Web前端程序员简历模板、Java程序员简历模板、C/C++程序员简历模板、<br>NodeJS程序员简历模板、架构师简历模板以及通用程序员简历模板 ！<br>地址：<a href="https://github.com/geekcompany/ResumeSample" target="_blank" rel="noopener">https://github.com/geekcompany/ResumeSample</a></p><p>当然了还有许多牛逼的（比如google,Apache等开源项目）项目在上面等着你去发现！</p><h1 id="还可以在GitHub上买东西呢！"><a href="#还可以在GitHub上买东西呢！" class="headerlink" title="还可以在GitHub上买东西呢！"></a>还可以在GitHub上买东西呢！</h1><p>GitHub上有个shop，里面有许多含有github logo的杯子呀，衣服呀，电脑贴纸呀，真的很酷炫和可爱！</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/github3.png" alt="github" title="">                </div>                <div class="image-caption">github</div>            </figure><h1 id="GitHub的视频教程"><a href="#GitHub的视频教程" class="headerlink" title="GitHub的视频教程"></a>GitHub的视频教程</h1><p>我录了一个GitHub的视频教程，专门讲 Git 和 GitHub 的使用的，你可以在这里观看：</p><ul><li><a href="https://wistbean.github.io/java-ssm-1-3.html">代码托管Git的使用</a></li><li><a href="https://wistbean.github.io/java-ssm-1-4.html">GitHub完全使用指南</a></li></ul><h1 id="GitHub参考文章"><a href="#GitHub参考文章" class="headerlink" title="GitHub参考文章"></a>GitHub参考文章</h1><ul><li><a href="https://zh.wikipedia.org/zh-sg/GitHub" target="_blank" rel="noopener">GitHub - 维基百科，自由的百科全书</a></li><li><a href="http://www.runoob.com/w3cnote/git-guide.html" target="_blank" rel="noopener">Github 简明教程</a></li><li><a href="https://github.com/xirong/my-git/blob/master/how-to-use-github.md" target="_blank" rel="noopener">Github全程指南-如何高效使用？</a></li><li><a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/00137628548491051ccfaef0ccb470894c858999603fedf000" target="_blank" rel="noopener">使用GitHub</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Git" scheme="https://wistbean.github.io/categories/Git/"/>
    
    
      <category term="Git" scheme="https://wistbean.github.io/tags/Git/"/>
    
      <category term="GitHub" scheme="https://wistbean.github.io/tags/GitHub/"/>
    
  </entry>
  
  <entry>
    <title>轻松理解UML用例图时序图类图的教程</title>
    <link href="https://wistbean.github.io/uml.html"/>
    <id>https://wistbean.github.io/uml.html</id>
    <published>2018-09-15T06:17:07.000Z</published>
    <updated>2018-11-02T08:52:39.153Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>当你老大扔给你这样的图，或者你需要完成某些功能而去看文档的时候发现以下类似这样的图会不会不（一）知（脸）所（懵）措（逼）：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/7/71/UML_Use_Case_diagram.svg/513px-UML_Use_Case_diagram.svg.png" alt="UML 用例图" title="UML">                </div>                <div class="image-caption">UML</div>            </figure><p>（图片来至<a href="https://zh.wikipedia.org/wiki/%E7%94%A8%E4%BE%8B" target="_blank" rel="noopener">wikipedia</a>）<br><br></p><p><img src="https://pay.weixin.qq.com/wiki/doc/api/img/chapter7_4_1.png" alt="UML 时序图"></p><p>（图片来至<a href="https://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=7_4" title="微信内网页支付时序图" target="_blank" rel="noopener">微信内网页支付时序图</a>）<br><br></p><p><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/7/74/Uml_diagram.svg/850px-Uml_diagram.svg.png" alt="UML 类图"></p><p>（图片来至<a href="https://zh.wikipedia.org/wiki/%E9%A1%9E%E5%88%A5%E5%9C%96" target="_blank" rel="noopener">wikipedia</a>）</p><p>如果你看了都不会一脸懵逼，那么可以出门左转啦，这篇文章就是来说明这些图的意思，让你在工作交流中，或者在看一些文档，或者看我的一些关于<a href="/blog/categories/pattern">设计模式</a>的文章，甚至架构建模中，都能轻松理解，毫无压力！</p><h1 id="UML的用例图"><a href="#UML的用例图" class="headerlink" title="UML的用例图"></a>UML的用例图</h1><p>刚刚我们看到的第一张图片就是用例图，用例图有以下几个东东：</p><ul><li>用例</li><li>参与者</li><li>关联</li><li>系统边界</li></ul><p>用例使用椭圆来表示，椭圆里边写上用例的名称：</p><p><img src="/images/use%20case.png" alt="UML use case" title="UML use case"></p><p>参与者用一个小人儿，在小人儿下面写上参与者名称,例如学生：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/actor.png" alt="UML actor" title="">                </div>                <div class="image-caption">UML actor</div>            </figure><p>关联用一条线儿表示：</p><p><img src="/images/relation.png" alt="UML relation"></p><p>把用例围起来，系统边界就用个矩形啦：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/boundary.png" alt="UML boundary" title="">                </div>                <div class="image-caption">UML boundary</div>            </figure><p>举个例子：</p><p><img src="/images/usecaseexample.png" alt="UML usecase"></p><p>我们可以看到这个</p><p>系统叫做 「购物系统」 ；<br>有注册账号、登录系统、生成订单的用例（这里只列举几个用例，其它用例省略）；<br>参与者有顾客和管理员；<br>顾客关联到了注册账号和登录系统的用例；<br>管理员关联到了登录系统和生成订单的用例！</p><h1 id="UML的时序图"><a href="#UML的时序图" class="headerlink" title="UML的时序图"></a>UML的时序图</h1><p>时序图就是我们刚刚看到的第二个图，时序图有以下几个东东：</p><ul><li>对象</li><li>生命线</li><li>活动条</li><li>消息</li><li>控制流<ul><li>顺序</li><li>分支</li><li>循环</li></ul></li></ul><p>对象在矩形里边，左边是对象名称，右边是对象类型，下方还有一条线：</p><p><img src="/images/object.png" alt="UML 时序图"></p><p>用虚线代表的是对象的生命线：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/xuxain.png" alt="UML 时序图" title="">                </div>                <div class="image-caption">UML 时序图</div>            </figure><p>活动条是一个竖着的矩形，当接收到消息的时候，这个对象就会有活动条：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/huodongtiao.png" alt="UML 时序图" title="">                </div>                <div class="image-caption">UML 时序图</div>            </figure><p>消息用一根箭头，箭头上面写上消息信息，例如一个登录方法 login(userName,passWord):</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/msg.png" alt="UML 时序图" title="">                </div>                <div class="image-caption">UML 时序图</div>            </figure><p>控制流有三种，普通就是按顺序的一个流程，还有分支就相当于if else：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/ifelse.png" alt="UML 时序图" title="">                </div>                <div class="image-caption">UML 时序图</div>            </figure><p>矩形里边有一条虚线，左上角用ALT表示，当C为true的时候，就执行虚线上方的内容，当C为false的时候就执行虚线下方的内容。</p><p>循环控制流：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/loop.png" alt="UML loop" title="">                </div>                <div class="image-caption">UML loop</div>            </figure><p>左上角有LOOP表示循环，当C为true的时候，就循环执行方框里边的内容！</p><h2 id="举个UML时序图例子："><a href="#举个UML时序图例子：" class="headerlink" title="举个UML时序图例子："></a>举个UML时序图例子：</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/sequence.png" alt="UML sequence diagram" title="">                </div>                <div class="image-caption">UML sequence diagram</div>            </figure><p>可以看到，每个对象都有它们的<strong>生命线</strong>（虚线）；</p><ol><li><p>一开始用户给类型为GUI（界面）的Login对象发送一个登录<strong>信息</strong> 「 login（userName，passWord）」 ；</p></li><li><p>Login这个对象接收到了就会产生<strong>活动条</strong>，这时候Login这个界面会给类型为Controller的loginController发送登录<strong>信息</strong>「 login（userName，passWord）」 ；</p></li><li><p>此时loginController接收到<strong>信息</strong>产生<strong>活动条</strong>，这时候loginController去找类型为DB的UserDao，给它发送了一个获取用户密码的<strong>信息</strong>    「getUserPassword(userName)」；</p></li><li><p>UserDao接收到<strong>信息</strong>后产生<strong>活动条</strong>，返回用户的密码；</p></li><li><p>此时loginController接收到<strong>信息</strong>（用户的密码 userPassword），loginController此刻将信息发送给自己，通过verify去校验密码并且用result接收结果；</p></li><li><p>校验就产生了分支控制流，当resul为true的时候loginController会发送success给Login，当result为false的时候，loginController会发送failure给Login；</p></li><li><p>最后Login最后给用户发送messag信息。</p></li></ol><p>好了，当你看到这里的时候，你就会发现，以后关于这类的时序图对你来说已经不在话下了。例如本文一开始的第二张图。</p><h1 id="UML的类图"><a href="#UML的类图" class="headerlink" title="UML的类图"></a>UML的类图</h1><p>类图有以下几个东东：</p><ul><li>类名</li><li>属性</li><li>方法</li><li>可见性</li><li>数据类型</li><li>关联关系</li><li>依赖关系</li><li>继承/实现关系</li><li>组合/聚合关系</li></ul><p>类名、属性、方法在一个矩形中，分为上中下：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/class.png" alt="UML class" title="">                </div>                <div class="image-caption">UML class</div>            </figure><p>可见性：</p><ul><li>private的时候在前方用 - 表示</li><li>public的时候在前方用 + 表示</li><li>protected的时候在前方用 # 表示</li></ul><p>数据类型表示形式：</p><p>名字 ： 类型</p><p>例如：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/user.png" alt="uml" title="">                </div>                <div class="image-caption">uml</div>            </figure><p>userName 和 passWord 这两个属性是protected修饰的，数据类型都是String；<br>login() 和 register() 这两个方法是public修饰的，数据类型都是boolean；</p><p>关联关系,用实线表示，例如A关联B：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/guanlian.png" alt="uml 关联关系" title="">                </div>                <div class="image-caption">uml 关联关系</div>            </figure><p>依赖关系，用虚线表示，例如A依赖B：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/yilai.png" alt="uml 依赖关系" title="">                </div>                <div class="image-caption">uml 依赖关系</div>            </figure><p>继承关系，用一个△ + 一条实线表示，例如A继承B：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/extends.png" alt="uml 继承关系" title="">                </div>                <div class="image-caption">uml 继承关系</div>            </figure><p>依赖关系，用过一个△ + 一条虚线表示，例如A实现B：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/impl.png" alt="uml 依赖关系" title="">                </div>                <div class="image-caption">uml 依赖关系</div>            </figure><p>组合关系，用一个 ♦ + 一条实线表示,例如A组合B：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/zuhe.png" alt="uml 组合关系" title="">                </div>                <div class="image-caption">uml 组合关系</div>            </figure><p>聚合关系，用一个 ◇ + 一条实线表示,例如A组合B：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/juhe.png" alt="uml 聚合关系" title="">                </div>                <div class="image-caption">uml 聚合关系</div>            </figure><blockquote><p>聚合：表示两个对象之间是整体和部分的弱关系，部分的生命周期可以超越整体。如电脑和鼠标。</p></blockquote><blockquote><p>组合：表示两个对象之间是整体和部分的强关系，部分的生命周期不能超越整体，或者说不能脱离整体而存在。组合关系的“部分”，是不能在整体之间进行共享的。</p></blockquote><h2 id="类图举例子："><a href="#类图举例子：" class="headerlink" title="类图举例子："></a>类图举例子：</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/calss%20case.png" alt="UML 类图" title="">                </div>                <div class="image-caption">UML 类图</div>            </figure><p>可以看到，有User类，Customer类，Address类，Role类，Payment类，aliPay类，wechatPay类。</p><p>其中Customer 继承 User，User类的userName 和 passWord 这两个属性是protected修饰的，数据类型都是String；<br>login() 和 register() 这两个方法是public修饰的，数据类型都是boolean；</p><p>Address和Role聚合User；</p><p>Customer依赖Payment；</p><p>aliPay 和 wechatPay 实现了 Payment！</p><p>以上，就是关于UML的用例图，时序图，类图！当然可以自己手动画几个试试，感觉挺不错哦，相信你在工作交流中，或者在看一些文档，或者看我的一些关于<a href="/blog/categories/pattern">设计模式</a>的文章，甚至架构建模中，都能轻松理解，毫无压力！</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ul><li><a href="http://www.uml.org/" target="_blank" rel="noopener">官方UML Web站点</a></li><li><a href="https://www.ibm.com/developerworks/cn/rational/r-uml/index.html" target="_blank" rel="noopener">UML基础统一建模语言简介</a></li><li><a href="http://blog.csdn.net/zfrong/article/details/4086424" target="_blank" rel="noopener">UML实践详细经典教程</a></li><li><a href="https://www.w3cschool.cn/uml_tutorial/" target="_blank" rel="noopener">w3cschool UML教程</a></li><li><a href="https://zh.wikipedia.org/zh-hans/%E7%BB%9F%E4%B8%80%E5%BB%BA%E6%A8%A1%E8%AF%AD%E8%A8%80" target="_blank" rel="noopener">统一建模语言</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Java" scheme="https://wistbean.github.io/categories/Java/"/>
    
    
      <category term="教程" scheme="https://wistbean.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Java" scheme="https://wistbean.github.io/tags/Java/"/>
    
      <category term="UML" scheme="https://wistbean.github.io/tags/UML/"/>
    
      <category term="用例图" scheme="https://wistbean.github.io/tags/%E7%94%A8%E4%BE%8B%E5%9B%BE/"/>
    
      <category term="时序图" scheme="https://wistbean.github.io/tags/%E6%97%B6%E5%BA%8F%E5%9B%BE/"/>
    
      <category term="类图" scheme="https://wistbean.github.io/tags/%E7%B1%BB%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>读书:一个年轻人和老人的故事</title>
    <link href="https://wistbean.github.io/present.html"/>
    <id>https://wistbean.github.io/present.html</id>
    <published>2018-09-13T17:45:26.000Z</published>
    <updated>2019-02-23T17:56:28.054Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="肯定会电台-42-期"><a href="#肯定会电台-42-期" class="headerlink" title="肯定会电台 42 期"></a>肯定会电台 42 期</h1><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=3&id=2056514417&auto=1&height=66"></iframe><h1 id="讲故事之前"><a href="#讲故事之前" class="headerlink" title="讲故事之前"></a>讲故事之前</h1><p>在多年前，我跟朋友借阅了一本书，名字叫<a href="https://baike.baidu.com/item/%E7%A4%BC%E7%89%A9/2684076?fr=aladdin" target="_blank" rel="noopener">《礼物》</a>。</p><p>刚开始我是被书名和封面吸引，看了内容之后，我觉得很棒。最近又看了这本书，书不厚，一两小时就能看完，但是<a href="https://baike.baidu.com/item/%E6%96%AF%E5%AE%BE%E5%A1%9E%C2%B7%E7%BA%A6%E7%BF%B0%E9%80%8A" target="_blank" rel="noopener">作者</a>却花了 5 年时间写了这本书，里面讲了一个关于年轻人和老人的故事。</p><p>这个故事是一份礼物，这份礼物每个人都可以获取，而且对于每个人来说，都是独一无二的，如果你找到了这份礼物，你就能更加的幸福，成功，牛逼。</p><p>接下来，我就把这个礼物分享给你，也许看完之后，你也可以找到自己的礼物。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/gift01.jpg" alt="老人与年轻人" title="">                </div>                <div class="image-caption">老人与年轻人</div>            </figure><h1 id="礼物的故事"><a href="#礼物的故事" class="headerlink" title="礼物的故事"></a>礼物的故事</h1><p>年轻人在小的时候就认识了老人，老人跟他讲了一个关于礼物的故事，老人告诉他这个礼物是他一生中最珍贵的，需要自己去寻找。如果找到了这个礼物，那么他就会获得很多财富，也会很幸福，很成功，很牛逼。</p><p>年轻人很想得到这份礼物，于是各地的去寻找，用尽了所有方法，看书，上网搜索等等。可是找了很久也找不到。慢慢的，年轻人失去了耐心，就不再去鸟这个礼物了。</p><p>后来年轻人开始工作了，不过工作很不顺。虽然他每天都很努力的工作，完成了分内的事情，但是最后还是没有得到晋升，他非常气愤，每天下班回家都感觉到非常的疲倦，不开心。不仅如此，他和他的女票也分手了，失恋的他更是无法振作起来。他的那段日子用现在的话来说就是日了狗了。</p><p>年轻人想到了之前老人跟他说的礼物的故事，于是决定找老人谈谈，老人告诉他：“其实这个礼物你本来就知道了的，只是现在没有意识到而已。多想想你感到有效率的时刻，感到快乐的时刻。” 老人建议他把当前的事务先放一放，别太着急找礼物，说不定放轻松一点，答案就出来了。</p><p>年轻人听了老人的劝，独自一人去山间的小屋住了一段时间，放慢了自己的生活节奏，有一天晚上，他发现了这个礼物。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/pexels-photo-1037992.jpeg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>他在黑暗的房间点起了火，突然看到眼前的壁炉，他发现这简直就是艺术品，壁炉是由许多的石头砌成的，可以看得出来当初那个砌壁炉的师傅非常用心，每块石头都是精心打磨，精挑细选而成。</p><p>年轻人突然发现了什么，这不就是老人跟他说的么，「要得到这个礼物，就多想想自己曾经感到有效率的时刻，感到快乐的时刻。」砌壁炉的师傅在砌壁炉的时候肯定是心无旁骛的，他想象师傅在工作时专注的样子。突然明白了，这个礼物就是<strong>专注于此刻正在发生的事情</strong>。年轻人不去想过去的烦心事，也不担忧将来的问题，他此刻关注的是眼前的事物，他突然发现，自己不自觉的开心起来，之前从来没有注意到，只把握此刻正在发生的事情原来就是礼物。</p><p>难道这个礼物就这么简单？年轻人虽然有点疑惑，但是他现在已经不去想那么多了，只是着手于眼前正在发生的事情，他发现了之前许多没有认真去注意的东西。他也发现，只关注于此刻，自己会变的比以前开心很多。</p><p>回来之后，年轻人迫不及待的告诉老人自己发现了这个礼物，老人在跟年轻人谈话的时候，精神全都集中与年轻人谈话上，认真倾听，认真解答。年轻人有个困惑，如果当前处于很坏的情况下，能够把握此刻么？</p><p>老人告诉他如果在这种情况下你能专注于此刻，那么你就会发现有些困难和折磨是可以得到改变的，比如说你之前上班不如意，你是经常走神还是完全专注于工作中重要的事情上？你跟你女票相处的时候，你有没有完全投入其中，觉得你女票非常重要？</p><p>年轻人明白了，专注于此刻正在发生的事情，发现其中好的方面，并在其中建立信心和勇气，将注意力专注于此刻重要的事情上。年轻人开始重视自己，专注于眼前的事情，慢慢的他的工作效率越来越高，身边的同事和领导都发现了他的变化，年轻人越来越被得到重视。</p><p>我想这种专注于此刻就是沉浸于当前正在发生的事情上，比如我们在啪啪啪得正嗨时候，哪有时间去想自己以前过错和未来的烦忧，在看小视频的时候，那一刻我们的注意力完全集中在女主角和剧情中（虽然有些剧情很少），玩游戏，看小说也是如此，那一刻都沉浸其中。</p><p>但是如果把这样的专注放到学习中，工作中，就没那么容易了，因为这些事情并不会让我们上瘾，遇到一些未知的领域常常会让人知难而退，忘了专注于此刻。这个时候往往需要想办法，让自己对其“上瘾”。</p><p>我有时候晚上写文章或写代码，写着写着一抬头，挖槽，天居然亮了。我想我那时候就是在专注于当前正在发生的事情，每每把事情做完就会觉得特别开心。</p><p>所以现在常常会提醒自己，<strong>单线程做事，专注于此刻，做好当下的事情</strong>。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/pexels-photo-405031.jpeg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>年轻人越来越觉得幸福，每天都享受当下的时刻，过了一段时间之后，年轻人跟一个人负责一个项目，不过他的搭档不给力，他没有劝说搭档用心工作，而是自己承担了所有职责，慢慢的，年轻人感到力不从心，项目落后了，上级感到失望，觉得之前对他的晋升是个错误的选择。</p><p>年轻人知道需要专注于此刻，但是现在总感觉很沮丧，老是想着这个项目和不努力的搭档。他很想知道，如果老人遇到这种情况，会怎么处理？于是他又去找老人谈谈。</p><p>老人给了年轻人答案：“每个人都会犯错，而有些人能够更好的把握此刻是因为他们会<strong>从过去学习，而不是忽略过去</strong>。我们不能改变过去，也不能活在过去，但是我们可以从过去中学习，今天就采用不同的做法，而不是重蹈覆辙，用心的体会过去，吸取其中的经验与教训，这样能让我们更好的把握此刻的乐趣。”</p><p>年轻人有点疑惑：“那什么时候该专注于此刻？什么时候向过去学习呢？”</p><p>“只要你此刻感到不快乐，想更多的享受此刻，就可以向过去学习。”向过去学习的话可以问自己 3 个问题：</p><ul><li>1.过去发生了什么？</li><li>2.我从中学到了什么？</li><li>3.如果同样的事情再次发生，现在可以采取什么不同的做法？</li></ul><p>年轻人开始重视向过去学习了，他审视了过去，开始对自己的合作伙伴坦诚的说出自己的想法，希望对方能够和他一起努力完成这个项目，合作伙伴慢慢的被他的真诚所感动，于是开始用心起来，他们的项目完成的特别好，最后年轻人又得到了领导的重视和晋升。年轻人和他的女票感情也越来越好。</p><p>现在想想我和这年轻人差不多，也是很少向过去学习，经常把过去给忽略了，没有从过去学习，有时候会在同样的地方掉几次坑，有时候我发现项目出现的 bug，之前就出现过，但是那时候我仅仅是把它解决就完事了，没有从中去做总结吸取经验，下次遇到同样的问题，又得重新审查一遍。</p><p>所以我觉得当我们能够从过去吸取经验，然后更好的专注于此刻，才能把过去的包袱丢掉。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/pexels-photo-1037995.jpeg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>年轻人和以前发生了许多变化，职位也比以前高了不少，但是他又遇到新的问题了，他发现他现在要做的事情越来越多。没办法做到每件事都尽善尽美，他发现自己花费太多时间在次要的事情上了，而对于重要的事情总是做不完的感觉，慢慢的年轻人对眼前的工作失去掌控，又被上级一顿怀疑，年轻人垂头丧气，只能再去找他的老朋友。</p><p>年轻人从老人那里得知自己还没有领悟到礼物的第三个重要因素，就是将来。</p><p>年轻人觉得如果老是想着自己的将来，想着自己什么时候能买上房，什么时候能买上车子，那就不能专注于此刻了，还会让自己更加迷茫。老人表示非常赞同，如果我们老是活在对将来的空想中，就会迷茫，但是我们可以<strong>着手创造未来</strong>，老人跟年轻人说：“如果你对将来的想法是消极的，那么你今天的行动就是消极的，而你明天创造出来的结果就是糟糕的。”</p><p>老人让年轻人想象自己的美好的将来，仔细的想着每个细节，越清晰越好，然后指定一个计划，这个计划可以让自己更清楚接下来怎么走，今天就按计划做一些事情，让它成真，这样的话我们对此刻的担忧就会减少，对未来的方向也会更明确。只要自己想将来比此刻更好，就可以着手创造未来。</p><p>年轻人回去之后，开始想象美好的将来，并制定每天的计划，对事情的轻重缓急安排进日程，年轻人不再像以前那样迷茫了，也越来越得到了认可。</p><p>以前我在做项目的时候，有时候项目比较多的功能，一开始看到是很懵逼的，一想到要搞完这个项目就头大，后来自己用了 todolist 的工具，每天给自己制定一些计划，今天完成什么功能，写什么文档。然后没做完一件事就划掉相关的事项，每划掉一次就感觉又离目标进了一点，不再像一开始那么懵逼了。我想这和老人说的着手创建未来有一点想通之处。</p><p>有时候我睡前也会常常想自己的未来，想很多乱七八糟的事情，除了让我更迷茫之外，没有一点好处。</p><p>不可避免的事情还是发生了，老人去世了。</p><p>年轻人已步入中年，他回到和老人一起谈话的地方，一个人思索着和老人的点点滴滴，明白了老人生前做的每件事情都是有明确的目标，年轻人此刻又明白了：把握现在，向过去学习和着手创建未来并不是全部。</p><p>只有当自己的生活和工作有了<strong>明确的目标</strong>，对过去，现在，将来重要的事情做出回应的时候，一切才有意义。</p><p>年轻人完全明白了这个礼物的含义。也领取了属于他自己独一无二的礼物。</p><h1 id="讲故事之后"><a href="#讲故事之后" class="headerlink" title="讲故事之后"></a>讲故事之后</h1><p>故事讲完了，这个礼物是：当你想过的更夸了更高效的时候，把握此刻。当你想让现在比过去更好的时候，向过去学习。当你想让将来比现在更好的时候，着手创建未来。当你想发掘让你工作和生活更有意义的时候，明确自己的目标。</p><p>我把这个礼物分享给你。希望你也可以获取属于你自己独一无二的礼物。</p><p>你愿意把这份礼物分享给你的朋友吗？</p><h1 id="相关"><a href="#相关" class="headerlink" title="相关"></a>相关</h1><p><a href="https://wistbean.github.io/spend-money.html">现在已经不像父母那个年代了,花钱也是一种学问</a><br><a href="https://wistbean.github.io/categories/肯定会电台/">肯定会电台节目</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="podcast" scheme="https://wistbean.github.io/categories/podcast/"/>
    
      <category term="肯定会电台" scheme="https://wistbean.github.io/categories/podcast/%E8%82%AF%E5%AE%9A%E4%BC%9A%E7%94%B5%E5%8F%B0/"/>
    
      <category term="个人提升" scheme="https://wistbean.github.io/categories/podcast/%E8%82%AF%E5%AE%9A%E4%BC%9A%E7%94%B5%E5%8F%B0/%E4%B8%AA%E4%BA%BA%E6%8F%90%E5%8D%87/"/>
    
    
      <category term="个人提升" scheme="https://wistbean.github.io/tags/%E4%B8%AA%E4%BA%BA%E6%8F%90%E5%8D%87/"/>
    
      <category term="肯定会电台" scheme="https://wistbean.github.io/tags/%E8%82%AF%E5%AE%9A%E4%BC%9A%E7%94%B5%E5%8F%B0/"/>
    
      <category term="精华分享" scheme="https://wistbean.github.io/tags/%E7%B2%BE%E5%8D%8E%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>Java进阶SSM分布式项目实战视频教程</title>
    <link href="https://wistbean.github.io/java-ssm-video.html"/>
    <id>https://wistbean.github.io/java-ssm-video.html</id>
    <published>2018-09-10T07:42:30.000Z</published>
    <updated>2019-02-24T13:45:35.559Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Java SSM视频实战教程，从0到1，打造一个电商的分布式高并发项目。</p><p>项目是我精心制作的视频教程，身为过来人，很理解在自学过程中遇到的困惑，你在这个 SSM视频教程 中能够很容易看懂，是因为我在背后花了很多时间，站在你的角度上考虑的。希望能帮助后来的Java开发者进阶，<br>助你一臂之力。</p><h1 id="SSM视频教程面向的人群"><a href="#SSM视频教程面向的人群" class="headerlink" title="SSM视频教程面向的人群"></a>SSM视频教程面向的人群</h1><ol><li>具备有一定的java基础</li><li>初级Java开发者 -&gt; 中高级Java开发者</li><li>具备一定的自学能力和执行能力</li></ol><h1 id="SSM视频教程的技术选型"><a href="#SSM视频教程的技术选型" class="headerlink" title="SSM视频教程的技术选型"></a>SSM视频教程的技术选型</h1><ol><li>Spring</li><li>Spring MVC</li><li>Mybatis</li><li>redis</li><li>solr</li><li>EasyUI</li><li>UEditor</li><li>JQuery</li><li>Freemark</li><li>activMQ</li><li>httpClient</li><li>MySQL</li></ol><h1 id="SSM视频教程的开发环境"><a href="#SSM视频教程的开发环境" class="headerlink" title="SSM视频教程的开发环境"></a>SSM视频教程的开发环境</h1><ol><li>InteliJ IDEA</li><li>Maven</li><li>Tomcat7</li><li>JDK</li><li>Nginx</li><li>Git</li><li>postman</li><li>sqlyog</li><li>win7</li></ol><h1 id="SSM视频教程的学习计划"><a href="#SSM视频教程的学习计划" class="headerlink" title="SSM视频教程的学习计划"></a>SSM视频教程的学习计划</h1><ul><li>技术架构 （集群和分布式架构的区别）</li><li>工程搭建 （maven）</li><li>SSM框架的整合</li><li>Mybatis逆向工程以及使用</li><li>日志的添加与使用</li><li>拦截器</li><li>后端功能 （系统的开发，图片系统，数据等等）</li><li>前端功能 （商品浏览，下订单，购物车等等。。）</li><li>redis使用以及集群搭建</li><li>solr使用和集群搭建</li><li>JMS 消息队列 （activMQ）</li><li>sso单点登录</li><li>restful服务</li><li>在Linux上部署</li></ul><h1 id="SSM视频教程目录"><a href="#SSM视频教程目录" class="headerlink" title="SSM视频教程目录"></a>SSM视频教程目录</h1><h2 id="Java进阶SSM第一期"><a href="#Java进阶SSM第一期" class="headerlink" title="Java进阶SSM第一期"></a>Java进阶SSM第一期</h2><ul><li><a href="https://wistbean.github.io/java-ssm-1-1.html">1.分布式高并发java web项目实战视频教程介绍</a></li><li><a href="https://wistbean.github.io/java-ssm-1-2.html">2.Java传统的集群架构和分布式架构区别</a></li><li><a href="https://wistbean.github.io/java-ssm-1-3.html">3.代码托管Git的使用</a></li><li><a href="https://wistbean.github.io/java-ssm-1-4.html">4.GitHub完全使用指南</a></li></ul><h2 id="Java进阶SSM第二期"><a href="#Java进阶SSM第二期" class="headerlink" title="Java进阶SSM第二期"></a>Java进阶SSM第二期</h2><ul><li><a href="https://wistbean.github.io/java-ssm-2-1.html">1.什么是Maven，Maven的配置</a></li><li><a href="https://wistbean.github.io/java-ssm-2-2.html">2.码农商城 SSM 系统所需的 Maven 模块简介</a></li><li><a href="https://wistbean.github.io/java-ssm-2-3.html">3.使用 InteliJ IDEA 创建 Maven 项目与相关配置</a></li><li><a href="https://wistbean.github.io/java-ssm-2-4.html">4.使用InteliJ IDEA 创建分布式多模块 Maven 项目</a></li><li><a href="https://wistbean.github.io/java-ssm-2-5.html">5.使用InteliJ IDEA 创建 Maven 聚合工程</a></li><li><a href="https://wistbean.github.io/java-ssm-2-6.html">6.Java SSM框架的整合与Mybatis逆向工程</a></li></ul><h2 id="Java进阶SSM第三期"><a href="#Java进阶SSM第三期" class="headerlink" title="Java进阶SSM第三期"></a>Java进阶SSM第三期</h2><ul><li><a href="https://wistbean.github.io/java-ssm-3-1.html">1.后台管理系统 EasyUI 的使用</a></li><li><a href="https://wistbean.github.io/java-ssm-3-2.html">2.使用 PowerDesigner 逆向生成 MySQL 数据库</a></li><li><a href="https://wistbean.github.io/java-ssm-3-3.html">3.对商品分类进行增删改查的操作(上)</a></li><li><a href="https://wistbean.github.io/java-ssm-3-4.html">4.对商品分类进行增删改查的操作(下)</a></li></ul><h2 id="Java进阶SSM第四期"><a href="#Java进阶SSM第四期" class="headerlink" title="Java进阶SSM第四期"></a>Java进阶SSM第四期</h2><ul><li><a href="https://wistbean.github.io/java-ssm-4-1.html">1.Java文件服务器 FastDFS 的搭建教程</a></li><li><a href="https://wistbean.github.io/java-ssm-4-2.html">2.使用 Nginx 访问 FastDSF 文件服务器</a></li><li><a href="https://wistbean.github.io/java-ssm-4-3.html">3.SpringMVC整合FastDFS实现文件的上传和访问</a></li><li><a href="https://wistbean.github.io/java-ssm-4-4.html">4.SpringMVC整合富文本编辑器百度UEditor的使用</a></li></ul><h2 id="Java进阶SSM第五期"><a href="#Java进阶SSM第五期" class="headerlink" title="Java进阶SSM第五期"></a>Java进阶SSM第五期</h2><ul><li><a href="https://wistbean.github.io/java-ssm-5-1.html">1.Java模板引擎FreeMarker整合到SSM</a></li><li><a href="https://wistbean.github.io/java-ssm-5-2.html">2.码农商城-实现商品添加界面</a></li><li><a href="https://wistbean.github.io/java-ssm-5-3.html">3.实现码农商城商品分类的添加数据交互</a></li><li><a href="https://wistbean.github.io/java-ssm-5-4.html">4.FastDFS+filebox+ajaxFileUpload实现商品图片上传</a></li><li><a href="https://wistbean.github.io/java-ssm-5-5.html">5.码农商城实现商品数据提交到Mysql数据库</a></li><li><a href="https://wistbean.github.io/java-ssm-5-6.html">6.Mybatis分页，DataGrid使用，实现商品列表分页展示</a></li></ul><h2 id="Java进阶SSM第六期"><a href="#Java进阶SSM第六期" class="headerlink" title="Java进阶SSM第六期"></a>Java进阶SSM第六期</h2><ul><li><a href="https://wistbean.github.io/java-ssm-6-1.html">1.SpringMVC+Spring+FreeMarker搭建门户系统Portal</a></li><li><a href="https://wistbean.github.io/java-ssm-6-2.html">2.门户系统 Portal 所涉及到的功能介绍及静态首页的添加</a></li><li><a href="https://wistbean.github.io/java-ssm-6-3.html">3.使用SSM搭建rest服务系统</a></li><li><a href="https://wistbean.github.io/java-ssm-6-4.html">4.rest系统提供商城首页分类导航的json数据</a></li><li><a href="https://wistbean.github.io/java-ssm-6-5.html">5.httpclient+freemarker实现商城首页分类的导航数据展示</a></li></ul><blockquote><p>持续更新中</p></blockquote><h1 id="相关阅读"><a href="#相关阅读" class="headerlink" title="相关阅读"></a>相关阅读</h1><ul><li><a href="https://wistbean.github.io/lean-java.html">Java初学者的学习路线</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Java" scheme="https://wistbean.github.io/categories/Java/"/>
    
      <category term="Java SSM视频教程" scheme="https://wistbean.github.io/categories/Java/Java-SSM%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Git" scheme="https://wistbean.github.io/tags/Git/"/>
    
      <category term="Nginx" scheme="https://wistbean.github.io/tags/Nginx/"/>
    
      <category term="Java" scheme="https://wistbean.github.io/tags/Java/"/>
    
      <category term="项目实战" scheme="https://wistbean.github.io/tags/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/"/>
    
      <category term="分布式" scheme="https://wistbean.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
      <category term="码农商城" scheme="https://wistbean.github.io/tags/%E7%A0%81%E5%86%9C%E5%95%86%E5%9F%8E/"/>
    
      <category term="Maven" scheme="https://wistbean.github.io/tags/Maven/"/>
    
      <category term="Spring" scheme="https://wistbean.github.io/tags/Spring/"/>
    
      <category term="Spring MVC" scheme="https://wistbean.github.io/tags/Spring-MVC/"/>
    
      <category term="Mybatis" scheme="https://wistbean.github.io/tags/Mybatis/"/>
    
      <category term="EasyUI" scheme="https://wistbean.github.io/tags/EasyUI/"/>
    
      <category term="postman" scheme="https://wistbean.github.io/tags/postman/"/>
    
      <category term="UEditor" scheme="https://wistbean.github.io/tags/UEditor/"/>
    
      <category term="SSM视频教程" scheme="https://wistbean.github.io/tags/SSM%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/"/>
    
      <category term="redis" scheme="https://wistbean.github.io/tags/redis/"/>
    
      <category term="solor" scheme="https://wistbean.github.io/tags/solor/"/>
    
      <category term="JQuery" scheme="https://wistbean.github.io/tags/JQuery/"/>
    
      <category term="Freemark" scheme="https://wistbean.github.io/tags/Freemark/"/>
    
      <category term="activMQ" scheme="https://wistbean.github.io/tags/activMQ/"/>
    
      <category term="httpClient" scheme="https://wistbean.github.io/tags/httpClient/"/>
    
      <category term="MySQL" scheme="https://wistbean.github.io/tags/MySQL/"/>
    
      <category term="InteliJ IDEA" scheme="https://wistbean.github.io/tags/InteliJ-IDEA/"/>
    
      <category term="Tomcat7" scheme="https://wistbean.github.io/tags/Tomcat7/"/>
    
      <category term="JDK" scheme="https://wistbean.github.io/tags/JDK/"/>
    
      <category term="sqlyog" scheme="https://wistbean.github.io/tags/sqlyog/"/>
    
  </entry>
  
  <entry>
    <title>现在已经不像父母那个年代了,花钱也是一种学问</title>
    <link href="https://wistbean.github.io/spend-money.html"/>
    <id>https://wistbean.github.io/spend-money.html</id>
    <published>2018-09-08T18:17:24.000Z</published>
    <updated>2018-11-02T08:52:34.781Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="读书那会的兼职体会"><a href="#读书那会的兼职体会" class="headerlink" title="读书那会的兼职体会"></a>读书那会的兼职体会</h2><p>给大家说下我在读书那会，农村孩子嘛，再加上自己性格要强，不到万不得已，不会跟家人要钱，<br>所以打过暑假工，做过兼职，那会做过快餐店的服务生，还做过厂工，那会说是体验生活，社会实践，其实还不是为了点钱（一不小心又说大实话了）。</p><p>我真的不相信有人去打暑假工或者兼职啥的单纯是为了社会实践。</p><p>在做快餐店服务员的时候，我那会除了厨师该干的事没干过之外，其它的诸如洗碗盘，擦桌子，端盘，给顾客加菜，帮忙打包，导购，拖地，擦玻璃等等都干了个遍。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/WeChat%20Image_20180807163101.jpg" alt="还好，现在知道这些也不晚" title="">                </div>                <div class="image-caption">还好，现在知道这些也不晚</div>            </figure><p>还记得有一次用蹩脚的英文给国外的友人介绍菜品，没想到我的小学生英语水平他们居然听懂了，现在的那句「chinese tofu」还回荡在耳边。</p><p>那时候的我仅仅是为了点钱，买点自己喜欢的东西。不过那会也有点体会，发了条朋友圈：</p><blockquote><p>「站久了就会觉得坐着好舒服，饿久了就会发现吃着好享受，困久了就会知道睡着很美好。。很多未满足后的满足，便是幸福！」</p></blockquote><p>感觉这特么可以作为 Hiphop 歌词了哈。</p><p>再说下在做厂工的时候，我直接住到工厂提供的宿舍去了，那段时间睡眠质量特好，吃饭特香，因为每天都累得半死，每天在那里焊电路板，装螺丝，还在流水线做了点包装。每天的生活就是：吃饭-干活-打卡-吃饭-干活-打卡-睡觉。</p><p>不过当时有一个没想到的体验，就是那会跟我同一个宿舍的是一个社会人，他之前开酒吧的，他说有几张桌子是给警察留的，有几张桌子是给黑社会的人留着的，真正赚钱的也是其它的几张桌子上的普通客户，有一回他跟别人打架被人用钢管捅了肚子，他肚子有几个洞，有时候看的我想用手指去戳他的肚子。</p><p>后来我跟他成为挺好的朋友，虽然他离婚了，但是他很想念自己的女儿，常常会拿手机上的照片给我看。和其它员工不同，他是个见过世面的人，也是个有文化的人，晚上没出去喝酒的话会在宿舍看书，时不时回来还会买饮料给我喝，人很nice。以后有时间在说下那会跟他的相处经历，挺有意思的。</p><p>那会我除了想挣点钱之外，算是有一点切实的体会吧，主要是看到了那些工人，他们真的习惯了，每天都这样苟且，那段时间看着他们我觉得有点可怕，所以我真的回去之后拿起书本，努力了起来，很怕跟他们一样。</p><p>那些员工，他们每天像个机器人重复的做着同样的事情，他们知道如果今天不干，就没有钱，甚至可能被炒，即使活得没了自己，他们也觉得这就是生活，他们的认知就这样了，眼界就这么低了。</p><p>这都是我读书那会真实的经历，那会的我实在 too simple，总觉得有的吃有的喝就行了。</p><h2 id="观念上的一些改变"><a href="#观念上的一些改变" class="headerlink" title="观念上的一些改变"></a>观念上的一些改变</h2><p>随着这些年的成长，我发现我变了许多，也比以前努力了许多，我读了些书，而且最近又赶上了付费的时代，我做些项目获得的报酬不再像以前去沐足按摩啥的了，我拿出一些费用去付费加入一些大佬的社群，努力的和他们建立连接，我从他们的身上学到了很多，这真的是对自己最好的投资。</p><p>想想在以前，当你什么都没有的时候，那些大佬哪有时间去鸟你？但是现在不同了，你能通过付费加入大佬的社区，0距离的接触，跟着大佬一起学习成长。有些人不会算账，平常吃喝拉撒的花费大手大脚，一旦到了加入付费社区就畏手畏脚了。</p><p>跟他们混多了，我渐渐发现我在其中被潜移默化的转变了一些认知，一些思维，一些观念。</p><p>我以前的观念是「凑合就好」，现在的观念是「尽量最好」。</p><p>比如现在如果我要买手机或者电脑，我会尽量选择在我承受范围之内，买最好的。能买 128G 的就不买 64G 的。</p><p>比如租房，能让我住的舒服，多花点钱不算什么。现在钱真的不是省出来的。</p><p>比如宽带，能买 200M 的就不买 100M 的，多花点钱，但是我不用忍受网络的卡顿，不用浪费这些时间，还影响了心情。</p><p>举这几个例子我想说的是：以前的我就是那么不会算账，我会觉得凑合就行，没必要，但现在不同了，花钱也是一种学问，现在已经不像父母那个年代了，现在钱不是省出来的了，节省时间才是正确的方式。</p><p>眼界要提高，格局要大。还好，现在知道这些也不晚。</p><p>同样的道理，如果你觉得在城市打拼多久也买不上房子，干脆回老家种种花草，做点小买卖，那么你这一辈子也就在那里卖假货，跟认知低的人一起混，就那样了。不是吗？</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="个人提升" scheme="https://wistbean.github.io/categories/%E4%B8%AA%E4%BA%BA%E6%8F%90%E5%8D%87/"/>
    
    
      <category term="个人提升" scheme="https://wistbean.github.io/tags/%E4%B8%AA%E4%BA%BA%E6%8F%90%E5%8D%87/"/>
    
      <category term="关于wistbean" scheme="https://wistbean.github.io/tags/%E5%85%B3%E4%BA%8Ewistbean/"/>
    
      <category term="认知" scheme="https://wistbean.github.io/tags/%E8%AE%A4%E7%9F%A5/"/>
    
  </entry>
  
  <entry>
    <title>为什么要搭建一个属于自己的个人网站</title>
    <link href="https://wistbean.github.io/why-do-we-need-to-build-a-website.html"/>
    <id>https://wistbean.github.io/why-do-we-need-to-build-a-website.html</id>
    <published>2018-09-06T17:45:26.000Z</published>
    <updated>2018-12-27T13:46:47.299Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=3&id=2056453965&auto=1&height=66"></iframe><h1 id="个人网站搭建教程"><a href="#个人网站搭建教程" class="headerlink" title="个人网站搭建教程"></a>个人网站搭建教程</h1><p><a href="https://wistbean.github.io/build-personal-website.html">hexo搭建个人网站博客完全教程</a></p><h1 id="肯定会电台相关"><a href="#肯定会电台相关" class="headerlink" title="肯定会电台相关"></a>肯定会电台相关</h1><p><a href="https://wistbean.github.io/categories/%E8%82%AF%E5%AE%9A%E4%BC%9A%E7%94%B5%E5%8F%B0/">肯定会电台</a><br><a href="https://wistbean.github.io/podcast.xml">肯定会电台RSS订阅</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="podcast" scheme="https://wistbean.github.io/categories/podcast/"/>
    
      <category term="肯定会电台" scheme="https://wistbean.github.io/categories/podcast/%E8%82%AF%E5%AE%9A%E4%BC%9A%E7%94%B5%E5%8F%B0/"/>
    
      <category term="个人网站" scheme="https://wistbean.github.io/categories/podcast/%E8%82%AF%E5%AE%9A%E4%BC%9A%E7%94%B5%E5%8F%B0/%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/"/>
    
    
      <category term="肯定会电台" scheme="https://wistbean.github.io/tags/%E8%82%AF%E5%AE%9A%E4%BC%9A%E7%94%B5%E5%8F%B0/"/>
    
      <category term="互联网" scheme="https://wistbean.github.io/tags/%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
      <category term="个人网站" scheme="https://wistbean.github.io/tags/%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/"/>
    
  </entry>
  
  <entry>
    <title>我的自学 Java 编程之路</title>
    <link href="https://wistbean.github.io/lean-java.html"/>
    <id>https://wistbean.github.io/lean-java.html</id>
    <published>2018-09-04T12:33:41.000Z</published>
    <updated>2019-03-03T10:31:21.302Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="学习Java之初"><a href="#学习Java之初" class="headerlink" title="学习Java之初"></a>学习Java之初</h2><p>我是大学的时候才开始接触编程的，不过我上的是一所三流的大学，高三的时候，因为我们班是重点班，所以有一些复读生也来我们班学习，高三开始不久我就和一个高四的学姐谈恋爱了，还是我的初恋，所以我高考就GG了…</p><p>偏题了，回来说说编程的事情吧，虽然说大学是个三流的学校，不过老师都是博士硕士级别的工程师，对于当时的我会觉得他们好像很厉害的样子，不过现在觉得有时候标签这种东西并不能说明什么吧。</p><p>那时候老师说「移动应用开发」会火，到时毕业一定可以找到工作，所以我就想着主攻「移动应用开发」，也就是 Android ，因为 Android 的应用层是用 java 写的，所以一开始学的是「java基础」。</p><p>虽然说去上课，但是真正听老师讲课的人寥寥无几，我也不例外，电脑前演示着老师讲课的PPT，但是视线一直停留在自己手机里的美女上。</p><p>不过有一次老师讲到一个「使用for循环打印星星的例子」，我觉得好好玩，这时候我才发现java并非那么无聊，我可以通过代码写出打印多少颗星星，打印成正三角形的形状，倒三角形的形状，正方形形状等等。第一次有了一种「有想法可以被java实现的感觉」，从那天起开始对编程产生了兴趣。</p><p>那一天虽然知道了「for循环」怎么写（跟着老师的例子照猫画虎），但是对于java环境变量怎么配置，二进制是什么，什么是Byte，Long都不懂，那时候可以说对于 java 只知道怎么拼写而已。</p><p>因为有些知识点之前没认真听，也发觉老师讲的很无聊，后来我决定自学，自我驱动的学习和被动的学习是两个完全不同的概念，我到现在依然认为：<strong>真正牛逼的人，都是自学能力极强的人！</strong></p><h2 id="自学Java基础"><a href="#自学Java基础" class="headerlink" title="自学Java基础"></a>自学Java基础</h2><p>我开始上网查询学习「java基础知识」的资料，无意间发现了某培训机构（是哪个机构就不说了，免得说我打广告）有免费的讲课视频资料，看了一下目录发现很全面，于是我下载下来试着看一下，没想到被讲师的幽默讲课方式深深吸引，感觉他不做相声演员都可惜了，于是边笑着看他的视频，边跟着他敲代码，自己也做一些笔记。那段时间有时候逃课其实是在宿舍里看他的视频哈哈！</p><p>那个视频课时分为三十来天，不过我是除了跟着他敲代码外，我还会自己做一些笔记，所以我大概花了两个多月才把视频学完的，也就这几个月的时间我从如何打印Hello World，到常量，变量，注释，运算，逻辑语句，再到面向对象（可能比较笨，当时想了好几天才明白这一概念），数组，函数，继承，内部类，多态，GUI等，再到集合，多线程，IO流，反射等等有一个全面的了解了。</p><p>感觉自己把 java 比较基础的知识学的差不多了，就想着能不能做点好玩的东西出来，记得有一个情人节，那时候我还是有女朋友的人，想给女朋友做一个程序，作为礼物送给她，有那么一个夜晚，我突然想到能不能用 java 做一款小游戏，游戏的主角就是她呢？</p><p>想想还是有点激动的，后来我模仿了「坦克游戏」，不过玩家的坦克是我女票的头像，而很多敌方坦克就是我的头像，然后子弹被我改成❤️（爱心子弹，害羞）。</p><p>用了几天的时间把它做出来觉得好有成就感，最后我把这个游戏打成jar包送给我女票当作礼物，然后看她玩的时候一直在互相发射爱心，不过敌方的“我”又多，射出的爱心子弹又快,每次玩不久她就“挂”了，老是叫我去修改一下游戏速度，让她赢哈哈。不过现在的她已经不属于我了，哎，想想还是有点小伤感呢，我是不是又跑题了 - -</p><p>因为我一开始就知道我学 java基础 是为了去开发 Android 应用，那时候觉得能在手机上把玩自己开发的 APP 是一种牛逼的存在。所以我又去找了一些「Android入门教程」的视频来学习，因为自己有了一定的 java基础知识 ，所以对「Android入门教程」视频学起来倒不觉得很难，反而是想着快点学完然后做个有意思的APP出来，所以那时候对Activity，Service的生命周期、一些诸如TextView，EditView基础的组件、诸如LinearLayout的容器组件、广播、Intent、内容提供者消费者、Sqlite等基础内容都学的比较认真。</p><p>慢慢的我开始写了一些demo，但是发现很不满意，原因是我感觉自己写的东西很简单，几个界面跳来跳去，几个增删改查，好像就没什么了，感觉自己没有什么项目经验，而且停留在很基础的层面。</p><p>于是我上网去搜索一些Android相关的资料，发现了CSDN上的「郭霖」大佬，发现他写的博客通俗易懂，那时候他每篇博客我都看，慢慢的我又认识到了「老罗」，他写的东西很深，有时候我看不懂 - -，发现了「阮一峰」的博客，再到后来我又发现在知乎上的 「stormzhang」， 我这才发现当时自己有多low，这些大佬们经验满满，我从他们身上学到了自定义View，性能优化，网络编程，第三方框架等等比较进阶的东西，不过更加让我学习到的是他们的执行力，他们的认知，他们对信息的敏感。</p><p>举个例子：记得 Android Studio 刚出来那会，我只是觉得 Android Studio 应该和 Eclipse 差不多吧，不就是个编辑器，而且Android Studio 刚出来的时候我下载体验了一下卡的要死，我二话不说就把它给卸载了，什么垃圾玩意。不过后来我发现大佬们都在用 Android Studio ，而且一直在建议更换为Android Studio，我记得之前大佬们还专门写了Android Studio的教程。受他们的影响，我把Android Studio下载回来，随着Android Studio的迭代，我才发现这编辑器简直了，这快捷键，这体验，简直完爆 Eclipse。现在还看到有些人还用Eclipse开发，没用过Android Studio或者<a href="https://www.jetbrains.com/idea/" target="_blank" rel="noopener">InteliJ IDEA</a>，说实话，我面试到这样的人一般会直接pass掉，并不是说Eclipse不好，而是认为，如果不拥抱新的事物，总是固步自封，那么很快会被淘汰！</p><p>也是那个时候，我发现了原来还有一个叫做「<a href="https://github.com/" target="_blank" rel="noopener">GitHub</a>」的东西，简直打开了新天地，上面有许多大牛分享代码，聚集了全世界的程序员，吓得我赶紧去学习了Git的操作命令，clone了几个觉得适合我当时学习的Android项目源码！</p><p>后来和朋友参加软件杯比赛，能写出比较像样的APP了，看着APP从想法到实现，确实能带来很多成就感，也许对别人来说并不完美，但是自己亲手写出来的，自己debug出来的APP，就是有不一样的感觉，觉得像自己的孩子一样哈哈！</p><p>在大学期间，自己用PS画UI，使用第三方的接口，琢磨着做了几个小众的APP，后来将这些APP都装在自己的手机上，面试的时候一边演示一边跟面试官吹吹牛逼，倒也拿了几个实习offer。</p><h2 id="开始用Java工作"><a href="#开始用Java工作" class="headerlink" title="开始用Java工作"></a>开始用Java工作</h2><p>后来自己选了初创公司，刚开始就让我接手一个比较大的项目，功能挺多的，商品上下架，第三方支付，商家入驻，到后来甚至还做了附近的人，聊天约炮交友，抽奖等功能，我和另一个小伙伴负责这个项目的Android端，虽然期间遇到了许多问题，如代码混淆打包闪退，不同手机兼容适配，支付配置不正确等等，也曾怀疑自己是不是能行过，但还是一一解决了，前前后后花了快一年时间也在应用市场上架了好几版，不过用户寥寥，可能你应该想到了，产品还没运营，就夭折了。现在回头想想，产品思维确实重要。</p><p>接着也做了几款别的APP，表现也是平平 - -</p><p>可能因为表现的还行，后来老大说有个公众号的小项目，后端让我来搞怎么样，当时自己也发现原生APP的开发趋势下降了，H5 越来越火，然后跟老大说给我三天熟悉一下 java 后端的，他说没问题，没想到这一决定让我开始转向后端开发了…</p><h2 id="Java后端开发"><a href="#Java后端开发" class="headerlink" title="Java后端开发"></a>Java后端开发</h2><p>其实这三天主要研究了下 JSP , Servlet ,还看了点 struts2 框架，然后也算按计划时间倒腾出来了那个小项目，也是因为这个小项目我对后端开发产生了些许兴趣，我觉得写逻辑接口提供给前端调用好像比较牛逼。</p><p>那段时间开始研究 SSH2 框架，使用它做了一个电商项目，接着发现很少人用 SSH2 了，然后研究了 SpringMVC 框架，JDBCTemplate，进一步学习 Mysql的索引、视图，使用 PowerDesigner 设计数据库，Nginx，Linux操作系统环境搭建，操作命令，网络协议等等。</p><p>不过之前做的很少涉及到高并发，后来比较流行SSM框架了，也使用过它来做一些分布式的项目，慢慢的了解到了连接池、消息队列、定时、缓存、搜索引擎、渲染模板引擎等等。</p><p>由于SSM配置繁琐，现在Spring Boot/Spring Cloud这样的高效框架也越来越多人开始使用了。</p><p>越往后越发现基础的东西很重要，比如多线程的同步异步，各种集合的实现原理，面向对象，反射技术等！</p><p>当然我非常不推崇那些对刚入门想学的同学推荐一堆诸如：各种设计模式，JVM调优，负载均衡，各种数据结构和算法，链表、排序树，分布式存储，对象池，连接池，网络三次握手过程等等。</p><p>人家还没开始学，就给吓跑了 - -</p><h2 id="给新手自学-Java-的建议"><a href="#给新手自学-Java-的建议" class="headerlink" title="给新手自学 Java 的建议"></a>给新手自学 Java 的建议</h2><p>所以我建议「java自学入门」先从基础开始，再进阶到会使用各种框架，再慢慢了解其原理，加以项目辅助练习，最后再回来补充自己的弱项例如操作系统，数据结构，算法，网络！</p><p>列个大纲吧：</p><p>初级入门知识点：</p><ul><li>基本的语法</li><li>数组</li><li>面向对象</li><li>IDEA工具使用，相信我，别用eclipse了！</li><li>常见对象的使用</li><li>集合框架</li><li>IO流</li><li>多线程</li><li>GUI（可选）</li><li>java网络编程</li><li>反射</li><li>《疯狂java讲义》类似书籍或视频教程</li></ul><p>进阶知识点：</p><ul><li>《Effective java》类似书籍</li><li>数据序列化 JSON</li><li>项目构建管理 Maven</li><li>托管利器 Git</li><li>Spring 容器</li><li>Spring MVC框架</li><li>安全框架 Shiro</li><li>ORM框架 MyBatis</li><li>数据库连接池</li><li>模板引擎</li><li>分布式缓存数据库 Redis</li><li>分布式全文搜索引擎 Solr</li><li>任务调度框架 Quartz</li><li>消息队列 MQ</li><li>日志组件 Log4J</li><li>分布式服务框架 Dubbo</li><li>分布式协调服务 ZooKeeper</li><li>微服务 Spring boot 、 Spring Clound</li></ul><p>完善知识点：</p><ul><li>《深入分析java Web技术内幕》类似书籍</li><li>JVM</li><li>NIO</li><li>设计模式</li><li>Linux操作系统</li><li>数据结构</li><li>算法</li><li>计算机网络</li><li>数据库优化</li></ul><p>我相信一个人去关注这一问题，或者看到这里，都是有一颗学习的心，不过很多人被所谓的过来人扔一堆「晦涩难懂的技术名词」吓到，我是非常讨厌这样的人的，自以为很牛逼，摧毁初学者的信心， 凸！</p><p>建议入门的童鞋可以先看视频教程，因为有老师在演示会比较好理解，记得总结，总结很重要！还有一点就是不要加入所谓的java开发讨论群，java学习群，因为十个有九个是在里面瞎逼逼，开车的！还有一点就是尽量使用Google。</p><p>希望以上的内容能给你带来帮助。</p><h1 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h1><ul><li><a href="https://wistbean.github.io/programing-experience.html">编程人生中的两个小经验</a></li><li><a href="/categories/Java/">Categories: Java</a></li><li><a href="/java-xue-xi-lu-xian.html">Java初学者的学习路线建议</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Java" scheme="https://wistbean.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="https://wistbean.github.io/tags/Java/"/>
    
      <category term="个人经验" scheme="https://wistbean.github.io/tags/%E4%B8%AA%E4%BA%BA%E7%BB%8F%E9%AA%8C/"/>
    
      <category term="Java初学者" scheme="https://wistbean.github.io/tags/Java%E5%88%9D%E5%AD%A6%E8%80%85/"/>
    
  </entry>
  
  <entry>
    <title>使用Payoneer将Paypal金额提现人民币到银行卡</title>
    <link href="https://wistbean.github.io/paypal-withdrawing-rmb.html"/>
    <id>https://wistbean.github.io/paypal-withdrawing-rmb.html</id>
    <published>2018-09-02T06:39:37.000Z</published>
    <updated>2019-03-01T07:29:15.946Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Paypal-现在的提现人民币方式"><a href="#Paypal-现在的提现人民币方式" class="headerlink" title="Paypal 现在的提现人民币方式"></a>Paypal 现在的提现人民币方式</h1><p>可能有些人做境外电商，或者和我一样<a href="https://wistbean.github.io/make-money-on-the-internet.html">通过互联网赚钱的 9 种渠道</a>,在一些国外的平台获取到的收入一般会存放到Paypal中，所以我们需要将钱提现到国内的银行来。</p><p>之前使用 Paypal 和 连连支付 合作的快捷人民币提现服务已经在2018年7月1日截止了，也就是说，中国的 PayPal 用户只可以通过电汇的方式以美金形式提现至中国的银行账户。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/0.png" alt="Paypal和连连支付截止" title="">                </div>                <div class="image-caption">Paypal和连连支付截止</div>            </figure><p>然而，手续费相当高，每次提现就要 <strong>35刀</strong> ，而且整个过程时间挺长，也挺麻烦的。</p><p>有时候转到国内银行入账失败会被打回 PayPal ，35 刀的手续费也就不翼而飞，想想就蛋疼。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/payoneer01.png" alt="Paypal提现方式" title="">                </div>                <div class="image-caption">Paypal提现方式</div>            </figure><h1 id="Payoneer的全球收款的账户"><a href="#Payoneer的全球收款的账户" class="headerlink" title="Payoneer的全球收款的账户"></a>Payoneer的全球收款的账户</h1><p>后来我了解到了<a href="https://share.payoneer.com/nav/64dSfzKiE2n8FvTxVIGviFIRyydUjqR71tCf2Ty1_e8jWPwuOnAdg8zkouLl6rbKeBGFxNtWR_9hLAr99D3R7Q2" target="_blank" rel="noopener">Payoneer</a>，在这里注册后平台会给你一个全球收款的账户，相当于拥有了一张全球的银行卡，我们知道，Paypal 提现美金是完全免费的，所以我们可以通过<a href="https://share.payoneer.com/nav/64dSfzKiE2n8FvTxVIGviFIRyydUjqR71tCf2Ty1_e8jWPwuOnAdg8zkouLl6rbKeBGFxNtWR_9hLAr99D3R7Q2" target="_blank" rel="noopener">payoneer</a>来接收 Paypal 的提现资金，然后再从<a href="https://share.payoneer.com/nav/64dSfzKiE2n8FvTxVIGviFIRyydUjqR71tCf2Ty1_e8jWPwuOnAdg8zkouLl6rbKeBGFxNtWR_9hLAr99D3R7Q2" target="_blank" rel="noopener">Payoneer</a>里面把钱转到我们的国内的银行账户。只需要 1.2% 的手续费，而且据说通过这种方式可以不占用外汇额度（每个中国公民每年只可以有 5w 美元的外汇额度）。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/p005.png" alt="Payoneer" title="">                </div>                <div class="image-caption">Payoneer</div>            </figure><h1 id="通过Payoneer来提现paypal人民币"><a href="#通过Payoneer来提现paypal人民币" class="headerlink" title="通过Payoneer来提现paypal人民币"></a>通过Payoneer来提现paypal人民币</h1><p>那么接下来就说说怎么操作。</p><h2 id="注册Payoneer"><a href="#注册Payoneer" class="headerlink" title="注册Payoneer"></a>注册Payoneer</h2><p>如果你之前没有注册过Payoneer，可以通过这里<a href="https://share.payoneer.com/nav/64dSfzKiE2n8FvTxVIGviFIRyydUjqR71tCf2Ty1_e8jWPwuOnAdg8zkouLl6rbKeBGFxNtWR_9hLAr99D3R7Q2" target="_blank" rel="noopener">Payoneer官网</a>进行注册，通过这里进入注册的，当你获得总共 $1000 的支付后，可以获取一笔 $25 的奖励。</p><h2 id="获取全球银行账户"><a href="#获取全球银行账户" class="headerlink" title="获取全球银行账户"></a>获取全球银行账户</h2><p>当你注册完毕之后，在收款菜单下有个 「Global Payment Service」：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/payoneer1.png" alt="Global Payment Service" title="">                </div>                <div class="image-caption">Global Payment Service</div>            </figure><p>USD 下的这个银行账户就是专门用来收美元的，一般 Payonner 给你签发的美元收款账户的银行是 「First Century Bank」：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/payoneer2.png" alt="First Century Bank" title="">                </div>                <div class="image-caption">First Century Bank</div>            </figure><h2 id="在-Paypal-关联-Payonner-银行账户"><a href="#在-Paypal-关联-Payonner-银行账户" class="headerlink" title="在 Paypal 关联 Payonner 银行账户"></a>在 Paypal 关联 Payonner 银行账户</h2><p>在你的 Paypal 中，点击「资金」，选择「关联新的银行账户」：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/payoneer3.png" alt="在 Paypal 关联 Payonner 银行账户" title="">                </div>                <div class="image-caption">在 Paypal 关联 Payonner 银行账户</div>            </figure><p>将你在Payonner的美元收款账户信息录入：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/payoneer4.png" alt="在 Paypal 关联 Payonner 银行账户" title="">                </div>                <div class="image-caption">在 Paypal 关联 Payonner 银行账户</div>            </figure><p>可能有些朋友在这里无法通过，那么需要在 Payonner 申请一个 「Community Federal Savings Bank」的美元收款账户。</p><ul><li><p>可以找<a href="https://payoneer-zh.custhelp.com/app/Contact_us" target="_blank" rel="noopener">Payonner客服</a>,跟她说给你的账户签发一个社区联邦储蓄银行账户(Community Federal Savings<br>Bank)的帐户。</p></li><li><p>或者在线申请签发,点击这里：<a href="https://wj.qq.com/s/2580735/bb88" target="_blank" rel="noopener">https://wj.qq.com/s/2580735/bb88</a> 信息没必要写的多认真，主要是在填写你的用户 id 别写错就行。</p></li></ul><p>一般过个一两天就会给你的账户签发多了一个账户了，我等了一天就给我签发了：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/5.png" alt="Community Federal Savings Bank" title="">                </div>                <div class="image-caption">Community Federal Savings Bank</div>            </figure><p>拿到了自己的「Community Federal Savings Bank」 账户就可以关联到 Paypal 了。<br>这里的信息填写如下：</p><ul><li>国家或地区 ： 美国</li><li>银行名称： Community Federal Savings Bank</li><li>账户类型 ： 支票账户</li><li>银行代号 ： 你 Community Federal Savings Bank 下的 路由（ABA）</li><li>账号： 你 Community Federal Savings Bank 下的 账号</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/8.png" alt="Paypal关联账户" title="">                </div>                <div class="image-caption">Paypal关联账户</div>            </figure><p>接着需要验证一下你的验证码：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/9.png" alt="Paypal验证" title="">                </div>                <div class="image-caption">Paypal验证</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/10.png" alt="Paypal验证" title="">                </div>                <div class="image-caption">Paypal验证</div>            </figure><h2 id="Paypal提现到Payonner"><a href="#Paypal提现到Payonner" class="headerlink" title="Paypal提现到Payonner"></a>Paypal提现到Payonner</h2><p>在 Paypal 中成功绑定了 Payonner 之后呢，就可以提现啦：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/payoneer11.png" alt="在资金下点击提现" title="">                </div>                <div class="image-caption">在资金下点击提现</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/12.png" alt="选择刚刚关联的Payonner收款账户" title="">                </div>                <div class="image-caption">选择刚刚关联的Payonner收款账户</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/13.png" alt="Paypal提现到Payonner" title="">                </div>                <div class="image-caption">Paypal提现到Payonner</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/14.png" alt="Paypal成功提现" title="">                </div>                <div class="image-caption">Paypal成功提现</div>            </figure><p>提现的过程中，Payonner会给你发送邮件，要求你认证你的个人信息，如实填写就好了：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/p001.jpg" alt="填写调查文件" title="">                </div>                <div class="image-caption">填写调查文件</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/p002.png" alt="提供信息" title="">                </div>                <div class="image-caption">提供信息</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/p003.jpg" alt="上传身份证" title="">                </div>                <div class="image-caption">上传身份证</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/p004.jpg" alt="详细信息" title="">                </div>                <div class="image-caption">详细信息</div>            </figure><p>等待个两三天左右，你的Payonner就会到账了：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/15.png" alt="Payonner到账" title="">                </div>                <div class="image-caption">Payonner到账</div>            </figure><h2 id="Payonner-提现到国内的银行"><a href="#Payonner-提现到国内的银行" class="headerlink" title="Payonner 提现到国内的银行"></a>Payonner 提现到国内的银行</h2><p>在你的 Payonner 选择提款到银行账户，如果你还没关联自己的银行就先在Payonner里面绑定你的银行卡，然后就可以提款了。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/16.png" alt="提款到银行账户" title="">                </div>                <div class="image-caption">提款到银行账户</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/17.png" alt="输入金额" title="">                </div>                <div class="image-caption">输入金额</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/18.png" alt="提款" title="">                </div>                <div class="image-caption">提款</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/19.png" alt="等它个三到五天" title="">                </div>                <div class="image-caption">等它个三到五天</div>            </figure><p>ok，以上，就完成了Paypal提现人民币，不仅拥有了自己的全球银行账户，还可以轻松提现到Paypal的钱，还省下了Paypal 35刀的手续费。</p><h1 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h1><ul><li><a href="https://www.paypal.com/c2/webapps/mpp/cny-withdrawal-disclaimer?locale.x=zh_C2" target="_blank" rel="noopener">PayPal 快捷人民币提现服务终止通知</a></li><li><a href="https://www.zhihu.com/question/40395743" target="_blank" rel="noopener">Paypal美金提现人民币有什么快捷到账的方式？</a></li><li><a href="https://pay.topworker.cn/" target="_blank" rel="noopener">payoneer收款博客</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="个人理财" scheme="https://wistbean.github.io/categories/%E4%B8%AA%E4%BA%BA%E7%90%86%E8%B4%A2/"/>
    
      <category term="互联网" scheme="https://wistbean.github.io/categories/%E4%B8%AA%E4%BA%BA%E7%90%86%E8%B4%A2/%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
    
      <category term="互联网" scheme="https://wistbean.github.io/tags/%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
      <category term="个人理财" scheme="https://wistbean.github.io/tags/%E4%B8%AA%E4%BA%BA%E7%90%86%E8%B4%A2/"/>
    
      <category term="赚钱" scheme="https://wistbean.github.io/tags/%E8%B5%9A%E9%92%B1/"/>
    
      <category term="Paypal提现人民币" scheme="https://wistbean.github.io/tags/Paypal%E6%8F%90%E7%8E%B0%E4%BA%BA%E6%B0%91%E5%B8%81/"/>
    
      <category term="Payoneer" scheme="https://wistbean.github.io/tags/Payoneer/"/>
    
  </entry>
  
  <entry>
    <title>python3入门基础有趣的教程</title>
    <link href="https://wistbean.github.io/python-tutorial.html"/>
    <id>https://wistbean.github.io/python-tutorial.html</id>
    <published>2018-09-01T09:07:44.000Z</published>
    <updated>2018-12-27T13:46:51.024Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="pick-up-Python"><a href="#pick-up-Python" class="headerlink" title="pick up Python"></a>pick up Python</h1><p>给大家说一下，我要开始学习 Python 了， Python 最近很火嘛（小样，别太膨胀），不过还好我是个程序员，只不过之前玩的不是 Python 语言，所以接下来我要 pick up Python了。是的，没错，pick up，以后你告诉别人说你要学 python，你可以很装逼的告诉他：“老子要pick up Python了！”</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py1.jpg" alt="人生苦短，我特么要pick up Python~~~" title="">                </div>                <div class="image-caption">人生苦短，我特么要pick up Python~~~</div>            </figure><p>而这里呢，和其它的学习 Python 的号不一样，不会乱七八糟，我会形成一个体系，也就是 Python 从0到1的整个体系，而且我也不想严肃，我要让我的这个教程呢，看起来好笑，好笑之中又能真正的学到Python的精髓，所以我会下功夫去学习，去消化，然后再转化成风趣幽默的文章，让大家看起来像看小黄文一样轻松，这是我想做的事情。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py2.png" alt="听到小黄文，想想还有点鸡动呢 (你可别乱来啊！)" title="">                </div>                <div class="image-caption">听到小黄文，想想还有点鸡动呢 (你可别乱来啊！)</div>            </figure><h2 id="为什么要学-Python"><a href="#为什么要学-Python" class="headerlink" title="为什么要学 Python"></a>为什么要学 Python</h2><p>对了，还没告诉你为什么要学 Python 呢，我来说说这几点就已经足够：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py3.png" alt="Python" title="">                </div>                <div class="image-caption">Python</div>            </figure><ol><li>现在 Python 已经成为世界上最流行的编程语言之一了，而且大部分的Linux系统，MacOS系统都直接内置了 Python ，就问你牛逼不？</li></ol><ol start="2"><li>现在连小学生都开始学习 Python 了，Python 已经纳入了某地区小学的教材了。Pyhon 已然成为了编程界的 “网红”，现在程序员们可能不知道Cobol，Basic，Pascal，Perl，Ruby，但没有一个程序员不知道Python的。</li></ol><ol start="3"><li>上手简单，现在很多从来没接触过编程的人都着手开始学习Python 了，我有一朋友，之前没有任何编程基础，学了半年多找到了份工作，工资12k妥妥的，不过不要去羡慕别人的数字，人家背后的努力你没看到而已，如果你现在也是没有任何基础或者想要从0学习 Python ，那么你来对地方了！因为人生苦短，我们一起搞 Python。</li></ol><ol start="4"><li>web开发，科学计算，3D建模，人工智能，嵌入式开发，云计算，大数据等等都特么能看到Python的身影，不知道你知不知道NASA（美国宇航局）使用Python来开发用于系统集成和卫星，火箭的测试自动化么？还有网易，腾讯，搜狐，金山，豆瓣，YouTube ，google，雅虎（太多，举例不完）都在用Python。所以这么牛逼，何不 pick up python 呢？</li></ol><ol start="5"><li>用 Python 可以做很多事情，可以爬取你想要的数据，可以做外挂，之前的微信跳一跳，12306抢票等都可以用Python实现，还有很多数据分析，项目系统，聊天系统，游戏等等多了去了。所以这么牛逼，何不 pick up Python 呢？</li></ol><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py5.jpg" alt="是不是真的啊？又想骗我学习~" title="">                </div>                <div class="image-caption">是不是真的啊？又想骗我学习~</div>            </figure><p>不妨再来看下<a href="https://www.python.org/" target="_blank" rel="noopener">Python官网</a>的介绍，<strong>他说这些是使用Python的人宁愿不使用其他任何东西的一些原因</strong>：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py6.jpg" alt="python" title="">                </div>                <div class="image-caption">python</div>            </figure><ol><li><p>Pyhon很牛逼…而且很快；</p></li><li><p>可以和别人一起P；</p></li><li><p>在哪都可以搞；</p></li><li><p>非常友好&amp;学习简单；</p></li><li><p>开放。</p></li></ol><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py7.jpg" alt="好棒！我要pick up Python了，接下来将是学习python的正确势！" title="">                </div>                <div class="image-caption">好棒！我要pick up Python了，接下来将是学习python的正确势！</div>            </figure><h2 id="别怕，Python-不是蟒蛇"><a href="#别怕，Python-不是蟒蛇" class="headerlink" title="别怕，Python 不是蟒蛇"></a>别怕，Python 不是蟒蛇</h2><p>PS：虽然 Python 的中文意思是「蟒蛇」，但是 Python 语言的创造者 Guido van Rossum 是因为超喜欢英国广播公司的节目「蟒蛇飞行马戏」而命名这个语言的，所以你可别以为Python 创造者是个喜欢蟒蛇的怪叔叔。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py8.jpg" alt="python 创始人" title="">                </div>                <div class="image-caption">python 创始人</div>            </figure><h1 id="Python-Hello-World"><a href="#Python-Hello-World" class="headerlink" title="Python : Hello World !"></a>Python : Hello World !</h1><p>不管学什么编程语言，在一开始入门的时候，都会从「Hello Wrold」开始，这已经成为编程界的不成文规定。</p><p>在1972年的时候，有个叫科比 布莱恩的人使用B语言撰写了第一个使用参数的 Hello World 相关程序。说明一下：此科比非彼科比，这哥们当然不是我的那位打NBA的偶像啊！</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py5.jpg" alt="如果科比不打NBA而去编程，会是怎么样呢？" title="">                </div>                <div class="image-caption">如果科比不打NBA而去编程，会是怎么样呢？</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py2.1.jpg" alt="科比：你们给我悠着点！！" title="">                </div>                <div class="image-caption">科比：你们给我悠着点！！</div>            </figure><p>看下图！这就是由 科比 布莱恩 撰写的「Hello Wrold」程序：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py2.2.jpg" alt="Hello Wrold" title="">                </div>                <div class="image-caption">Hello Wrold</div>            </figure><p>自此，Hello World 成为了计算机程序员学习新的编程语言的传统美德！</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py5.jpg" alt="当然说到传统美德，尊老爱幼也是必须的。其实我现在发现大多数年轻人素质都比较高，反而是那些年长的老人，倚老卖老，所以以后问路尽量找年轻人。" title="">                </div>                <div class="image-caption">当然说到传统美德，尊老爱幼也是必须的。其实我现在发现大多数年轻人素质都比较高，反而是那些年长的老人，倚老卖老，所以以后问路尽量找年轻人。</div>            </figure><p>那么，我们学习 Python 也从「Hello World」开始吧！</p><h2 id="安装-Python"><a href="#安装-Python" class="headerlink" title="安装 Python"></a>安装 Python</h2><p>如果你用的 Mac 或者 Linux 的话，那么你就不需要安装了，因为系统已经内置 Python 了，如果是 Windows 系统的话，安装也很简单，比安装 LOL 英雄联盟还简单。所以我相信不用我说，你也知道怎么安装，如果你连软件都不会安装，那么可以不用关注我了。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py5.jpg" alt="说的好屌啊，不知道是不是真的？" title="">                </div>                <div class="image-caption">说的好屌啊，不知道是不是真的？</div>            </figure><p>你可以直接访问 <a href="http://www.python.org" target="_blank" rel="noopener">Python 的官网</a> 下载最新的版本。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py2.3.jpg" alt="下载 python" title="">                </div>                <div class="image-caption">下载 python</div>            </figure><p>在这里告诉一下完全没经验的朋友们，千万不要去百度搜索 python 下载，然后去到类似这样的地方下载：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py2.4.png" alt="别在这里下载 python" title="">                </div>                <div class="image-caption">别在这里下载 python</div>            </figure><p>因为这样做<strong>很容易被人骂傻逼的</strong>。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py5.jpg" alt="听说现在骂百度是一种正确的价值观！" title="">                </div>                <div class="image-caption">听说现在骂百度是一种正确的价值观！</div>            </figure><h2 id="开始玩耍"><a href="#开始玩耍" class="headerlink" title="开始玩耍"></a>开始玩耍</h2><p>已经安装好Python之后呢，你可以在命令行里面输入「python」，然后你就会看到这样的东东：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py2.5.png" alt="python 版本" title="">                </div>                <div class="image-caption">python 版本</div>            </figure><p>有没有看到三道杠杠 「 &gt;&gt;&gt;」。是不是突然想到小学的时候，那些受老师爱戴，学生中的好榜样的队长袖口上的三道杠！</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py2.6.jpg" alt="三道杠，怕不怕" title="">                </div>                <div class="image-caption">三道杠，怕不怕</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py2.7.jpg" alt="大队长和大队委，牛逼牛逼，社会社会。" title="">                </div>                <div class="image-caption">大队长和大队委，牛逼牛逼，社会社会。</div>            </figure><p>不过在 Python 这里呢， &gt;&gt;&gt; 是一个提示符来的，也就是在它后面可以输入一些内容，更确切的说，<strong>这是交互式Pyhon解释器接收内容的符号</strong>。</p><p>比如我们要 Python 给我们打印 Hello World 的字样，那么你就可以这样子：在 “三道杠” 后面输入 print (“Hello World”) , 然后用力按一下回车键，你就可以看到 Python 解释器打印出 Hello World 这样的字符串了：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py2.8.png" alt="Hello World" title="">                </div>                <div class="image-caption">Hello World</div>            </figure><p>当然仅仅是打印 Hello World 你可能觉得没什么牛逼的，但是这不是才入门么，想要做更多有趣的事情么？跟着我一步一步来！</p><h1 id="Pythoner-：挑选一个Python编辑器"><a href="#Pythoner-：挑选一个Python编辑器" class="headerlink" title="Pythoner ：挑选一个Python编辑器"></a>Pythoner ：挑选一个Python编辑器</h1><p>各位 Pythoner 好啊！在这个烦躁的时代，相聚就是缘分，很高兴各位 Pythoner 能相聚于此，希望接下来的路，我们一起走下去，使用 Python 来做一些有趣的事情，有意义的事情。</p><p>我们在玩游戏的时候，我们通过层层努力的打怪升级，为的是什么？是女人么？是金钱么？ 当然不是，我们有那么肤浅么？我们为了能够拥有更牛逼的装备。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py3-1.jpg" alt="老话说的好：工欲善其事必先利其器！你的武器越牛逼，你的女人就越能够对你服服帖帖的。" title="">                </div>                <div class="image-caption">老话说的好：工欲善其事必先利其器！你的武器越牛逼，你的女人就越能够对你服服帖帖的。</div>            </figure><p>所以，我们在使用 Python 来编程的时候，我们也需要一个牛逼的武器，来编写我们的代码 —— 编辑器！</p><p>在这里跟大家说一下现在市面上比较主流的 Python 编辑器供你参考，要知道，适合自己的才是好的。如果你的丁丁很小，使用再大 size 的套套也是白搭！</p><h2 id="Sublime-Text"><a href="#Sublime-Text" class="headerlink" title="Sublime Text"></a>Sublime Text</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py3-2.jpg" alt="Sublime Text" title="">                </div>                <div class="image-caption">Sublime Text</div>            </figure><p><a href="https://www.sublimetext.com/" target="_blank" rel="noopener">Sublime Text</a> 比较适合 Python 新手使用，Sublime Text支持跨平台，而且可以使用其丰富的插件和主题。各种语法高亮和代码补全，整体看起来挺舒服的，而且主题配置起来也不难。</p><h2 id="IDLE"><a href="#IDLE" class="headerlink" title="IDLE"></a>IDLE</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py3-3.png" alt="IDLE" title="">                </div>                <div class="image-caption">IDLE</div>            </figure><p>如果你是 Windows 系统可以使用 <a href="https://docs.python.org/3/library/idle.html" target="_blank" rel="noopener">IDLE</a>, 它是 Pyhton 自带的一款编辑器，所以刚开始也可以使用它来玩玩，IDLE具备语法高亮功能，还允许你在IDLE中运行你的程序。许多事情它会自动帮你处理。比如debug什么的。</p><h2 id="VIM"><a href="#VIM" class="headerlink" title="VIM"></a>VIM</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py3-4.jpg" alt="VIM" title="">                </div>                <div class="image-caption">VIM</div>            </figure><p><a href="https://www.vim.org/" target="_blank" rel="noopener">Vim</a>是一款强大的编辑器，如果你熟练使用 Vim 的话，那么你完全可以脱离鼠标，双手在键盘上像弹钢琴那般酸爽，不过 Vim 需要一定的学习成本，需要花点时间去研究一下各种快捷命令和插件的使用，但是从长远来看，这都是大有所益的。</p><h2 id="PyCharm"><a href="#PyCharm" class="headerlink" title="PyCharm"></a>PyCharm</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py3-5.jpg" alt="PyCharm" title="">                </div>                <div class="image-caption">PyCharm</div>            </figure><p>我个人比较中意这个，如果你使用过 <a href="https://www.jetbrains.com/idea/" target="_blank" rel="noopener">IntelliJ IDEA</a> 的话，你应该会对其爱不释手，而这款 PyCharm 也是出自同一家公司，用起来会很顺手，现在很多公司，如Twitter，Groupon，Spotify，eBay和Telefonica等都在用 PyCharm 。不过你使用它的专业版需要花钱购买。</p><h2 id="Emacs"><a href="#Emacs" class="headerlink" title="Emacs"></a>Emacs</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py3-6.jpg" alt="Emacs" title="">                </div>                <div class="image-caption">Emacs</div>            </figure><p><a href="https://www.gnu.org/s/emacs/" target="_blank" rel="noopener">Emacs</a> 在 python 开发界也很受欢迎，它是一款开源的编辑器，支持插件扩展，可以配置一个 python 集成开发环境， Emacs 不仅仅是一个编辑器，他是一个整合环境，可以说是一个集成开发环境。</p><p>ok，就推荐这几个市面上比较流行的编辑器，当然还有其他的编辑器，最适合自己的才是最好的，用起来顺手不尴尬才爽嘛~</p><p>在这里给点建议就是新手可以先上手使用 IDLE 和 Sublime Text ，Vim是一款强大的编辑器，没事花点时间研究下，相信我，真的会受益匪浅的。</p><h1 id="自己写一个-Say-Hello-的-python-程序"><a href="#自己写一个-Say-Hello-的-python-程序" class="headerlink" title="自己写一个 Say Hello 的 python 程序"></a>自己写一个 Say Hello 的 python 程序</h1><p>是不是觉得我特么才安装了 Python 软件，这么快我就可以写出 python 程序了？</p><p>先别怀疑着先，一开始我就说了，Python语言简单，上手快，所以你跟着我呢，一步一步来，准没错的。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py4-1.jpg" alt="又他妈的不要脸了！" title="">                </div>                <div class="image-caption">又他妈的不要脸了！</div>            </figure><p>通过 <a href="https://wistbean.github.io/2018/09/01/python-tutorial/#Pythoner-%EF%BC%9A%E6%8C%91%E9%80%89%E4%B8%80%E4%B8%AAPython%E7%BC%96%E8%BE%91%E5%99%A8">Pythoner ：挑选一个Python编辑器</a>相信你已经知道使用什么样的编辑器了，因为这里力求从0到1，做一个完整 python 的体系，所以现在就先用 IDLE 这个编辑器，到时候你越来越牛逼了，咱们再换编辑器，没毛病。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py5.jpg" alt="好了，别废话了，快点带我写程序啊！" title="">                </div>                <div class="image-caption">好了，别废话了，快点带我写程序啊！</div>            </figure><h2 id="这个Python程序可以干嘛"><a href="#这个Python程序可以干嘛" class="headerlink" title="这个Python程序可以干嘛"></a>这个Python程序可以干嘛</h2><p>首先我们来想一下我们这个 Python 程序可以干嘛？</p><ol><li>可以让我们输入名字；</li><li>可以跟我们输入的这个名字say Hello！</li></ol><p>ok，我们要达到以上的功能，咱们说干就干！</p><h2 id="开始编写第一个python小程序"><a href="#开始编写第一个python小程序" class="headerlink" title="开始编写第一个python小程序"></a>开始编写第一个python小程序</h2><p>打开我们的编辑器：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py4-3.jpg" alt="IDLE编辑器" title="">                </div>                <div class="image-caption">IDLE编辑器</div>            </figure><p>现在的它是处于交互式解释器的状态，如果我们现在在这个交互解释器编写代码，那等下关掉所有的代码就不见了，我们当然是想要能够写出一个自己和别人都能够运行的程序，怎么能说代码丢掉就丢掉呢？</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py5.jpg" alt="我的小九九都被你发现了，是不是我的pp一抬，你就知道我是要拉尿还是拉shit。" title="">                </div>                <div class="image-caption">我的小九九都被你发现了，是不是我的pp一抬，你就知道我是要拉尿还是拉shit。</div>            </figure><p>那么我们就使用快捷键「Ctrl + N」来新建一个编辑窗口，可以看到这里没有「三道杠」提示符了吧，我们在这里写的代码待会可以保存，爱在哪里运行就哪里运行。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py4-5.jpg" alt="IDLE编辑器" title="">                </div>                <div class="image-caption">IDLE编辑器</div>            </figure><p>我们刚刚说了，想要这个程序可以让我们输入名字，那么我们可以用一个叫做 name 的变量来接收别人输入名字，可能你现在不知道变量是什么鬼，但是没关系，你现在把它理解为是一个桶，这个桶可以来存放用户输入的名字就好了，往后我会告诉你变量的使用，别急，咱们慢慢来。</p><p>ok，那么我们就可以写我们的第一行代码了：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name = input (<span class="string">"你他妈叫什么玩意儿？"</span>)</span><br></pre></td></tr></table></figure><p>解释一下这行代码的意思，input 是输入的意思，而「你他妈叫什么玩意儿？」就是显示给用户看的提示语。</p><p>我们已经完成了第一点，也就是这个程序可以让我们输入名字，那么我们继续完成第二点，可以跟我们输入的这个名字say Hello！</p><p>那么很简单，我们只要再写一行代码即可：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">"Hello"</span> + name)</span><br></pre></td></tr></table></figure><p>解释一下这行代码的意思， print 就是打印的意思，你可以理解为信息的输出，我们已经知道 name 这个 “桶” 已经装了用户输入的名字，所以 “Hello” + name 就是会输出 Hello xxx！</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py4-6.png" alt="IDLE编辑器" title="">                </div>                <div class="image-caption">IDLE编辑器</div>            </figure><p>ok，我们已经写完代码了，我们「Ctrl + S」保存一下文件到桌面，你可以把它命名为「Hello.py」。</p><p>接着我们就可以来运行我们的程序了，在我们的 IDLE 中用力的按一下 F5 开始运行程序：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py4-7.gif" alt="IDLE编辑器" title="">                </div>                <div class="image-caption">IDLE编辑器</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py4-8.jpg" alt="可以可以~" title="">                </div>                <div class="image-caption">可以可以~</div>            </figure><p>看到木有，我们的程序完成了。是不是挺好玩的！慢慢来，我们到时就可以写游戏，写网站，写爬虫了，是不是想想还有点小激动呢？</p><h1 id="什么是常量，什么是变量？"><a href="#什么是常量，什么是变量？" class="headerlink" title="什么是常量，什么是变量？"></a>什么是常量，什么是变量？</h1><p>这两个概念很简单理解，以后我们在使用 Python 编程的时候也会经常用到。</p><h2 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h2><p>我们知道，世界杯踢球每队会派出 11 名队员出场比赛，这里的 11 是固定不变的。我们高中的时候学的物理有个叫做重力加速度的概念，它是 9.8 m/s²，这里的 9.8 也是一样是固定不变的，<strong>对于这些固定不变的，具备字面上的意义的量我们就称为「常量」</strong>，它就像一座高高的大山，不会被轻而易举的改变，愚公移山？不存在的。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py5-1.jpg" alt="愚公移山" title="">                </div>                <div class="image-caption">愚公移山</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py3-1.jpg" alt="愚公不畏艰难，坚持不懈，挖山不止，最终感动天帝而将山挪走的故事。通过愚公的坚持不懈与智叟的胆小怯懦，以及“愚”与“智”的对比告诉人们，无论遇到什么困难，只要有恒心、有毅力地做下去，就有可能成功。" title="">                </div>                <div class="image-caption">愚公不畏艰难，坚持不懈，挖山不止，最终感动天帝而将山挪走的故事。通过愚公的坚持不懈与智叟的胆小怯懦，以及“愚”与“智”的对比告诉人们，无论遇到什么困难，只要有恒心、有毅力地做下去，就有可能成功。</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py5-2.png" alt="这特么跟常量有毛关系？" title="">                </div>                <div class="image-caption">这特么跟常量有毛关系？</div>            </figure><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><p>在<a href="https://wistbean.github.io/2018/09/01/python-tutorial/#%E8%87%AA%E5%B7%B1%E5%86%99%E4%B8%80%E4%B8%AA-Say-Hello-%E7%9A%84-python-%E7%A8%8B%E5%BA%8F">自己动手写一个会跟你 Say Hello 的 python 程序</a>中我们就谈到了变量这个玩意，我说变量可以把它理解为一个「桶」，你可以通过它来存储一些变化的值。</p><p>其实说白了变量只是你的计算机中存储信息的一部分内存，它可以存储所有可以变化的值。</p><p>比如说你想要用「 i 」 来表示一个变量，对python来说是一件很简单的事，你只要用 「i = 变化的值」就可以了。</p><p>举个例子：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py5-3.jpg" alt="python 变量" title="">                </div>                <div class="image-caption">python 变量</div>            </figure><p>这里使用 i 来表示一个变化的值 5，也就是说我们将 5 赋值给变量 i 。那么现在这个 i 指向的值就是 5 。</p><p>所以这里的 i+6 就是 5+6。</p><p>假如我们现在想让 i 来表示的值变成 2，这完全没问题，只要这样即可：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py5-6.png" alt="python 变量" title="">                </div>                <div class="image-caption">python 变量</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py5.jpg" alt="男人能屈能伸，可长可短，算不算变量？" title="">                </div>                <div class="image-caption">男人能屈能伸，可长可短，算不算变量？</div>            </figure><p>注意了，Python中的变量名称只能<strong>由字母、数字、下划线构成，而且不可以数字打头</strong>，像「xiaoshuaib_520」这样的是合法的，但是如果是「520_xiaoshuaib」那是不可以的。</p><p>不信你瞧：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py5-5.png" alt="python 变量" title="">                </div>                <div class="image-caption">python 变量</div>            </figure><h1 id="Python基本数据类型之「数」"><a href="#Python基本数据类型之「数」" class="headerlink" title="Python基本数据类型之「数」"></a>Python基本数据类型之「数」</h1><p>相信通过<a href="https://wistbean.github.io/python-tutorial.html#%E4%BB%80%E4%B9%88%E6%98%AF%E5%B8%B8%E9%87%8F%EF%BC%8C%E4%BB%80%E4%B9%88%E6%98%AF%E5%8F%98%E9%87%8F%EF%BC%9F">什么是常量，什么是变量？</a>你已经知道了变量是个什么玩意了，变量可以来处理变化的值，而这些变化的值呢，是可以对其分门别类的，也就是说每个变化的值它是有专属的类型的，你可以理解为这个值打一个标签。</p><p>在这里补充一点：Python 中的变量是不需要声明。每个变量在使用前都必须赋值，变量赋值以后这个变量才会被创建。</p><p>比如说 i = 5 ，在这里并不需要去定义这个 i 的类型，例如「整数类型 i = 5」，我们只要直接把 5 赋值给 i 就可以了，赋值后这个变量 i 就被创建了。这时候我们就可以说变量 i 现在所指的是一个为「整数类型的值5」。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py3-1.jpg" alt="Python除了基本数据类型「数」之外，还别的基本类型例如字符串，我们也可以自己定义数据类型，这个往后讲。" title="">                </div>                <div class="image-caption">Python除了基本数据类型「数」之外，还别的基本类型例如字符串，我们也可以自己定义数据类型，这个往后讲。</div>            </figure><p>接下来就来说说 Python 中基础数据类型中的「数」。</p><h2 id="数"><a href="#数" class="headerlink" title="数"></a>数</h2><p>在 Python 中的数有四种，分别是整数（int）、长整数（long）、浮点数（float）、复数（complex）。</p><h3 id="整数"><a href="#整数" class="headerlink" title="整数"></a>整数</h3><p>像 6 这样的数字就是整数，不带小数点的，而长整数只不过代表的是比较大一点的整数，现在 python3 中的整数（int）已经不限制数的大小限制了，所以整数类型也包括长整数。</p><p>我们可以通过 Python 交互式解释器来运算整数：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py6-1.jpg" alt="python运算整数" title="">                </div>                <div class="image-caption">python运算整数</div>            </figure><p>这里的 「6+6」没什么好说的吧，而 「6//2」就是6整除2的意思了，「1%2」的意思是说1除以2的余数，「%」有个专业名词叫做取余或者取模。而「2**3」就是2的三次方的意思。</p><p>怎么样？简单吧！</p><h3 id="浮点数"><a href="#浮点数" class="headerlink" title="浮点数"></a>浮点数</h3><p>但是如果你试试 「1/2」，这时候你会发现结果有小数点：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py6-2.jpg" alt="python运算浮点数" title="">                </div>                <div class="image-caption">python运算浮点数</div>            </figure><p>在这里的 「/」是除的意思，但是不会整除，你可以看到每次的结果都会有小数点。而这些像 「0.5」，「1.0」带有小数点的数我们就叫做浮点数。</p><h3 id="复数"><a href="#复数" class="headerlink" title="复数"></a>复数</h3><p>Python中的复数由实数部分和虚数部分组成。虚部的后缀为「j」。</p><p>例如：4+5j 就是一个复数，实数部分为 4.0，虚数部分为 5.0。</p><p>你可以把复数理解成为一个平面的一个点，例如上面这个例子你可以把它理解为平面上的点（4,5）。</p><p>Python连复数都支持，你说它能不强大么？</p><h1 id="二进制八进制十六进制的快速转化"><a href="#二进制八进制十六进制的快速转化" class="headerlink" title="二进制八进制十六进制的快速转化"></a>二进制八进制十六进制的快速转化</h1><h2 id="二进制"><a href="#二进制" class="headerlink" title="二进制"></a>二进制</h2><p>我们都知道，在计算机中，存储的数据都是像这样「010101010110010101…」的东东，这一串数字就是二进制。</p><p>想想你家里的灯，是不是只有两种状态，一种是开灯，一种是关灯。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py8-1.jpg" alt="开关灯" title="">                </div>                <div class="image-caption">开关灯</div>            </figure><p>而我们的计算机在表示数据的时候也是按照这样的状态来表示的。也就是一开一关两个状态。</p><p>我们把 0 当做关，把 1 当做开！</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py8-2.jpg" alt="0有点像把锁，1有点像把钥匙！emmmm.." title="">                </div>                <div class="image-caption">0有点像把锁，1有点像把钥匙！emmmm..</div>            </figure><p>但是现在想想啊，我们那么多数据，比如说一个 mp3 音乐，一部苍老师的教程视频，如果只让计算机仅仅以 0 和 1 这两种状态来表达这些数据，那是心有余而力不足的。</p><p>那么怎么办呢？这时候国际标准化组织就决定了，不够用是吧，那么用 8 个这样的状态来表达一个数据！</p><p>也就是：</p><p>一个数据 = 01010101 （8个状态）</p><p>那么这样的由8个状态组成的数据就叫做<strong>字节</strong>！</p><p>不信的话你可以随便点开的桌面的文件，右键打开属性看看，是不是都会给你显示这个文件的大小都会用字节来表示：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py8-3.jpg" alt="文件的大小" title="">                </div>                <div class="image-caption">文件的大小</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py8-4.gif" alt="你这小黄图能否图片分享一下？" title="">                </div>                <div class="image-caption">你这小黄图能否图片分享一下？</div>            </figure><p>所以知道以下的东东代表的是什么了吧：</p><pre><code>1byte（字节）= 8bit（位，状态）1kb = 1024byte1mb = 1024kb1g = 1024mb1tb = 1024g</code></pre><h2 id="二进制怎么转化成八进制？"><a href="#二进制怎么转化成八进制？" class="headerlink" title="二进制怎么转化成八进制？"></a>二进制怎么转化成八进制？</h2><p>我们已经知道了一个字节需要8个二进制位来表示，有点长了，那么用八进制来表示的话就会短一点，比如说有怎么一个字节：</p><p>0101101</p><p>如果我们想把它变成 八进制 的话，那就从右到左，每三位当做一个，最左边的不够就补0。也就是说上面这个可以这样：</p><p>000101101</p><p>把每三位的整体转化成十进制的数，就变成八进制了。至于怎么转换，下面会说到。这时候用八进制就只用3个数就可以表示了。</p><h2 id="二进制怎么转化成十六进制？"><a href="#二进制怎么转化成十六进制？" class="headerlink" title="二进制怎么转化成十六进制？"></a>二进制怎么转化成十六进制？</h2><p>同理，十六进制可以用更少的位数来表示，如果我们想把0101101变成 十六进制 的话，那就从右到左，每四位当做一个，最左边的不够就补0。也就是说上面这个可以这样：</p><p>00101101</p><p>把每四位的整体转化成十进制的数，就变成十六进制了。至于这么转换，下面也会说到。这时候用十六进制就只用2个数就可以表示了。</p><h2 id="不同的进制表达方式"><a href="#不同的进制表达方式" class="headerlink" title="不同的进制表达方式"></a>不同的进制表达方式</h2><p>二进制是由 「0,1」 组成，通常以 0b 开头。</p><p>八进制是由 「0,1,2,3,4,5,6,7」 组成，以 0 开头。</p><p>十进制是由 「0,1,2,3,4,5,6，7,8,9,0」 组成。</p><p>十六进制是由 「0,1,2,3,4,5,6,7,8,9,a,b,c,d,e,f」 组成，以0x开头的。</p><h2 id="进制之间的相互转化"><a href="#进制之间的相互转化" class="headerlink" title="进制之间的相互转化"></a>进制之间的相互转化</h2><p>在这里告诉大家一个进制之间快速转化的方法，当然，不是使用计算器啊 - -</p><p>首先你只要记住以下对应关系即可：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1    1    1    1    1    1    1    1</span><br><span class="line"></span><br><span class="line">128 64  32  16   8    4    2    1</span><br></pre></td></tr></table></figure><h3 id="二进制转化为十进制"><a href="#二进制转化为十进制" class="headerlink" title="二进制转化为十进制"></a>二进制转化为十进制</h3><p>那么如果告诉你一个二进制 如 0b11111111，转化成十进制，怎么做呢？把对应的数加起来就可以了。</p><p>0b11111111 = 128+64+32+16+8+4+2+1 = 255</p><p>看到 255 有没有一种熟悉的感觉？</p><p>所以这时候再给你出道题，把 0b010110 转化成十进制你应该会了吧？</p><p>0b010110 = 16 + 4 + 2 = 22</p><h3 id="十进制转化为二进制"><a href="#十进制转化为二进制" class="headerlink" title="十进制转化为二进制"></a>十进制转化为二进制</h3><p>同样的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1    1    1    1    1    1    1    1</span><br><span class="line"></span><br><span class="line">128 64  32  16   8    4    2    1</span><br></pre></td></tr></table></figure><p>我们要把十进制如22，转为二进制就是：</p><p>22之内16有没有？ 那么在16对应的地方就有1。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/8-1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>22-16=6，那么8对应的就不存在了。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/8-2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>6之内有4对吧，那么4对应的就有1，6-4=2，那么2也有，2-2=0，所以1就没了。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/8-3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>所以最后的答案就是 22 = 0b10110。</p><h3 id="二进制转化为八进制"><a href="#二进制转化为八进制" class="headerlink" title="二进制转化为八进制"></a>二进制转化为八进制</h3><p>我们已经知道了在二进制中每三位的十进制代表一个八进制位：</p><p>000101101</p><p>那么这时候只要把这个二进制拆成三份，每一份转化成十进制，再组合起来就是八进制了。</p><p>000 = 0；</p><p>101 = 4+1 = 5；</p><p>101 = 4+1 = 5；</p><p>所以二进制 0b000101101 = 八进制0055。</p><h3 id="二进制转化为十六进制"><a href="#二进制转化为十六进制" class="headerlink" title="二进制转化为十六进制"></a>二进制转化为十六进制</h3><p>我们已经知道了在二进制中每四位的十进制代表一个十六进制位：</p><p>00101101</p><p>那么这时候只要把这个二进制拆成两份，每一份转化成十进制，再组合起来就是十六进制了。</p><p>0010 = 2；</p><p>1101 = 8+4+1 = D；</p><p>所以二进制 0b00101101 = 十六进制0x2D。</p><p>ok，以上，其实说实话，如果不懂这个也不影响后面使用 Python 来编程，但是懂的多一些总归没有什么坏处。</p><h1 id="各种符号的意义及用法"><a href="#各种符号的意义及用法" class="headerlink" title="各种符号的意义及用法"></a>各种符号的意义及用法</h1><p>我们小时候，老师都教过我们 1+1=2 ，这个 「1+1」 就是表达式， 「+」 就是运算符。</p><p>咱们接下来就来了解一下，在 python 中，那些运算符是什么意思，怎么用？ 相信看完，你就能够明白了。</p><h2 id="加减乘除"><a href="#加减乘除" class="headerlink" title="加减乘除(+-/*)"></a>加减乘除(+-/*)</h2><p>对于 +-*/ 我们都知道它们是什么含义了吧，就算你的数学是体育老师教的，你也会懂加减乘除吧。</p><p>不过有两个小细节值得你去注意，就是字符串之间的相加和相乘：</p><p><img src="https://wistbean.github.io/images/7-1.jpg" alt="python运算浮点数"></p><p>看懂是啥意思了么？</p><p>字符串之间的相加会被”拼接”起来，而字符串和数字相乘就会重复多次相同的字符串。</p><p>其它的大于、小于、大于等于、小于等于就不说了，因为我们小学老师都跟我们说过了。接下来说几个比较少见的符号。</p><h2 id="幂"><a href="#幂" class="headerlink" title="幂(**)"></a>幂(**)</h2><p>幂就是以前我们学数学的时候老师讲的什么什么几次方，别一看到幂就想到杨幂。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://c1.yaofangwang.net/Common/Upload/guide/0/2e5d2989-a526-4aaa-b7cc-61e24e4ac8ea8928.jpg" alt="杨幂" title="">                </div>                <div class="image-caption">杨幂</div>            </figure><p>用符号 <code>**</code> 表示， 比如 <code>2**3 = 8</code>。</p><h2 id="整除（-）"><a href="#整除（-）" class="headerlink" title="整除（//）"></a>整除（//）</h2><p>我们知道 / 是除的意思，你知道 6/3 等于多少么？你可能会觉得在侮辱你的智商对不对，不是 2 么？ 在 python 中得出的结果是 2.0 ， 也就是它返回的是浮点数。 那么我们只想得到整数部分怎么玩呢？</p><p>用 // 这个 ： 6//3 = 2。</p><h2 id="取模（-）"><a href="#取模（-）" class="headerlink" title="取模（%）"></a>取模（%）</h2><p>取模的意思不是让你去获取个模特，是得到除法的余数，比如 8%5 = 3 ，因为 8/5 = 1余3。</p><h2 id="左移（-lt-lt-）和右移-gt-gt"><a href="#左移（-lt-lt-）和右移-gt-gt" class="headerlink" title="左移（&lt;&lt;）和右移(&gt;&gt;)"></a>左移（&lt;&lt;）和右移(&gt;&gt;)</h2><p>移的意思就是把一个数的二进制移动多少个位。</p><p>比如 2 &lt;&lt; 2 = 8 。这是为什么呢？</p><p>首先 2 的 二进制 是 0b00000010 ，然后将它左移2位（虚位补0）就变成这样： 0b00001000 ，它对应的十进制就是 8 。</p><p>同样的道理：</p><p>8 &gt;&gt; 2 的意思就是将 8 的二进制向右移动2位：</p><p>0b00001000 右移动2位：0b00000010 也就是对应十进制的 2。</p><p>那么下次有人问你2*8怎么样写代码比较高效，你就直接甩给它： 2&lt;&lt;3 就好了。</p><h2 id="与（-amp-）"><a href="#与（-amp-）" class="headerlink" title="与（&amp;）"></a>与（&amp;）</h2><p>记住一句话：”同真与真”，什么意思呢？ 比如 1&amp;1=1,1&amp;0=0,</p><p>1就是真，0就是假。也就是只有 1&amp;1=1，其它的都等于0。</p><p>那么 2 &amp; 3 怎么算？</p><p>先将它们转化为二进制：</p><p>2对应的二进制 ： 0b00000010</p><p>3对应的二进制 ： 0b00000011</p><p>那么从右往左： 0&amp;1=0 ，1&amp;1=1，0&amp;0=0，所以结果为</p><p>0b00000010，转化为十进制就是2，所以 2&amp;3=2。</p><h2 id="或（-）"><a href="#或（-）" class="headerlink" title="或（|）"></a>或（|）</h2><p>记住一句话：”同假或假”，什么意思呢？ 比如 1|1=1,0|0=0,</p><p>1就是真，0就是假。也就是只有 0|0=0，其它的都等于1。</p><p>那么 2 | 3 怎么算？</p><p>先将它们转化为二进制：</p><p>2对应的二进制 ： 0b00000010</p><p>3对应的二进制 ： 0b00000011</p><p>那么从右往左： 0|1=1 ，1&amp;1=1，0&amp;0=0，所以结果为</p><p>0b00000011，转化为十进制就是3，所以 2|3=3。</p><h2 id="异或（-）"><a href="#异或（-）" class="headerlink" title="异或（^）"></a>异或（^）</h2><p>相同者假，不同者真，什么意思呢？就是 1^1=0, 1^0=1。</p><p>那么 2^3 怎么算？</p><p>先将它们转化为二进制：</p><p>2对应的二进制 ： 0b00000010</p><p>3对应的二进制 ： 0b00000011</p><p>那么从右往左： 0^1=1 ，1^1=0，0&amp;0=0，所以结果为</p><p>0b00000001，转化为十进制就是1，所以 2^3=1。</p><h2 id="翻转（-）"><a href="#翻转（-）" class="headerlink" title="翻转（~）"></a>翻转（~）</h2><p>x的按位翻转就是是-(x+1)。</p><p>那么 ~2 怎么算？</p><p>~2 = -（2+1） ； 所以答案就是-3。</p><p>ok，以上，其实没必要去记住，了解一下就这些符号是什么意思，怎么算的就好了。</p><h1 id="Python基本数据类型之「字符串」"><a href="#Python基本数据类型之「字符串」" class="headerlink" title="Python基本数据类型之「字符串」"></a>Python基本数据类型之「字符串」</h1><h2 id="单引号（’）字符串"><a href="#单引号（’）字符串" class="headerlink" title="单引号（’）字符串"></a>单引号（’）字符串</h2><p>把一段文本用单引号「’」包围起来，它就变成了字符串，和数一样是一个值。比如：</p><p>text = ‘世界上最帅的人是wistbean’</p><p>这里的变量名就是text，而对应的值就是字符串「世界上最帅的人是wistbean」。</p><h2 id="双引号-“-字符串"><a href="#双引号-“-字符串" class="headerlink" title="双引号(“)字符串"></a>双引号(“)字符串</h2><p>把一段文本用双引号「”」包围起来，它就变成了字符串，和数一样是一个值。比如：</p><p>text = “世界上最帅的人是wistbean”</p><p>这里的变量名就是text，而对应的值就是字符串「世界上最帅的人是wistbean」。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py9-1.webp" alt="挖槽，这不是和单引号一样么？别特么逗我啊！" title="">                </div>                <div class="image-caption">挖槽，这不是和单引号一样么？别特么逗我啊！</div>            </figure><p>哈哈，是的，其实单引号的字符串和双引号的字符串是一样的，不过为什么Python要支持单引号又支持双引号呢？</p><p>那是因为，有时候我们的文本里面，不一定就只用双引号或者单引号啊，比如说：</p><p>“包钟480，包夜1200”，她说。</p><p>这句话对于 Python 解释器来说，他只认识引号里面的内容，也就是说 python 只知道字符串「包钟480，包夜1200」，而后面的「，她说。」对于 Python 来说不认识。</p><p>那么如果是这样的话：</p><p>‘“包钟480，包夜1200”，她说。’</p><p>Python 就能懂！</p><p><img src="https://wistbean.github.io/images/py9-2.webp" alt=""></p><p>所以你应该理解为什么 Python 同时支持双引号和单引号了吧。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py9-3.webp" alt="包夜太贵了，能不能便宜点啊？" title="">                </div>                <div class="image-caption">包夜太贵了，能不能便宜点啊？</div>            </figure><h2 id="三引号字符串（’’’或者”””）"><a href="#三引号字符串（’’’或者”””）" class="headerlink" title="三引号字符串（’’’或者”””）"></a>三引号字符串（’’’或者”””）</h2><p>这三引号是来干嘛的呢？如果你要表示一个很长很长的字符串，那么这个三引号就可以派上用场了，因为它支持跨多行，而且在这个三引号的字符串里面你要用单引号和双引号都无所谓。</p><p>像这样：</p><p>“”” MM：”噢，请你不要吻我”MM：”噢，请你不要吻”MM：”噢，请你不要”MM：”噢，请你不”MM：”噢，请你”MM：”噢，请”MM：”噢” “””</p><p>Python 是完全看得懂的。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py9-4.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py9-5.webp" alt="我好像发现了什么不得了的事情！！！" title="">                </div>                <div class="image-caption">我好像发现了什么不得了的事情！！！</div>            </figure><h2 id="转义"><a href="#转义" class="headerlink" title="转义"></a>转义</h2><p>可能你会对这样的字符串「’”包钟480，包夜1200”，她说。’」感到别扭，老子就想都用一种引号，不想要一下双引号一下单引号的行不行？</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py9-6.webp" alt="行行行，老子说什么就是什么！" title="">                </div>                <div class="image-caption">行行行，老子说什么就是什么！</div>            </figure><p>那么这时候就可以用「转义」来解决，转义的符号是反斜杠「\」。</p><p>比如这句话「’”包钟480，包夜1200”，她说。’」我们通过转义可以变成这样：</p><p>‘ \’包钟480，包夜1200\’，她说。’</p><p>那么这个时候 Python 就能够看懂了， 现在这玩意「\’」在 Python 眼中就是「’」。</p><p><img src="https://wistbean.github.io/images/py9-7.webp" alt=""></p><p>所以你可以把转义「\」理解为是为了让 Python 看的到我们想要表达的东西。</p><h2 id="字符串的拼接"><a href="#字符串的拼接" class="headerlink" title="字符串的拼接"></a>字符串的拼接</h2><p>有时候我们需要两段话拼接在一起，对于 Python 来说so easy，只要像两个数字一样相加即可。</p><p>像这样：</p><pre><code>x = &quot;Hello, &quot;y = &quot;World!&quot;x+y</code></pre><p>这时候呢，「+」这个符号就把两个字符串连接起来了，在这里的 x+y 就等于 Hello，World！</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py9-8.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="原始字符串"><a href="#原始字符串" class="headerlink" title="原始字符串"></a>原始字符串</h2><p>有一些符号是代表特殊意义的，比如说 「\n」就代表换行。比如像这样：</p><p>print(“小帅b\n我爱死你了。”)</p><p>那么这时候在 Python 眼中就是：</p><p>小帅b</p><p>我爱死你了。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py9-9.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py9-10.webp" alt="这很好啊， Python 很聪明还帮忙换行啦！" title="">                </div>                <div class="image-caption">这很好啊， Python 很聪明还帮忙换行啦！</div>            </figure><p>可是，有时候 Python 自作聪明了，比如说我们有这么一个在 c 盘下的一个叫做niubi的文件夹「C:\niubi」，那么我们这样打印的话：</p><p>print(“C:\niubi”)</p><p>结果你也知道了，路径被拆掉了。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py9-11.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>这就尴尬了，不过还好，有个叫做原始字符串的东西，我们只要在前面加个「r」就相安无事了，这时候 Python 就知道，哦，原来你要的是原始字符串啊，那老子不帮你换行了，省的被说自作聪明。</p><p>我们只需要这样：</p><p>print(r”C:\niubi”)</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py9-12.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>ok，Python基本数据类型之「字符串」就到这里，当然字符串的使用以后会经常用到的，对字符串的操作，字符串的序列，Unicode等是接下来需要了解使用的。</p><h1 id="Python-的控制流条件语句"><a href="#Python-的控制流条件语句" class="headerlink" title="Python 的控制流条件语句"></a>Python 的控制流条件语句</h1><h2 id="if…else"><a href="#if…else" class="headerlink" title="if…else"></a>if…else</h2><p>还记的你以前小学的时候老师问你用「如果…那么…否则…」来造句么？每当想起这个的时候，我就会想到费玉清老师的经典名句：</p><p>「你追我，如果你追到我，我就跟你嘿嘿嘿。」</p><p>那么在Python如何表示的呢？ 其实很简单，就是 if 和 else：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">if</span> 你追到我：   （如果的条件语句）</span><br><span class="line"></span><br><span class="line">    我就跟你嘿嘿嘿  （如果为真，就执行这里）</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span> ：           （否则）</span><br><span class="line"></span><br><span class="line">    我就不跟你嘿嘿嘿  （如果为假，就执行这里）</span><br></pre></td></tr></table></figure><h2 id="if…elif…else"><a href="#if…elif…else" class="headerlink" title="if…elif…else"></a>if…elif…else</h2><p>此外，如果老师要你用「如果…否则如果..否则..」来造句的话，比如说：如果你很持久，那么我嫁给你，否则如果你很有钱，那么我考虑一下，否则滚蛋。那么对应于 python 来说就是：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">if</span> 你很持久：</span><br><span class="line"></span><br><span class="line">    嫁给你</span><br><span class="line"></span><br><span class="line"><span class="keyword">elif</span> 你很有钱：</span><br><span class="line"></span><br><span class="line">    考虑一下</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span>：</span><br><span class="line"></span><br><span class="line">    滚蛋。</span><br></pre></td></tr></table></figure><p>好了，我们已经知道怎么用Python去使用我们的条件语句了，那么如果你想开发一个猜数字的小程序对你来说不在话下了。</p><p>我们这就来开发一个python猜数字小游戏，首先我们自己在程序定义好一个数字，然后让用户去猜，如果猜中了我们就恭喜他，猜不中就告诉他猜的数字偏大还是偏小。</p><p>打开我们的idle，撸起我们的代码：</p><p>首先定义一个变量，把我们要被猜的数字先写好：</p><p><code>number = 520</code></p><p>接着让用户输入数字：</p><p><code>guessNumber = int(input(&#39;请输入你要猜的数字： &#39;))</code></p><p>接着我们来判断：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">if</span> guessNumber == number :</span><br><span class="line"></span><br><span class="line">    print(<span class="string">"哇塞，牛逼啊，这就被你猜中了"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">elif</span> guessNumber &lt; number :</span><br><span class="line"></span><br><span class="line">    print(<span class="string">"你猜的数字小了，再往高了猜"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span> :</span><br><span class="line"></span><br><span class="line">    print(<span class="string">"你猜的数字大了，再往低了猜"</span>)</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py10-1.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py10-2.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="and"><a href="#and" class="headerlink" title="and"></a>and</h2><p>如果你想要一个又有钱又帅的男人，怎么用 python 表示呢？</p><p>可以这样：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if 有钱 and 帅 ：</span><br><span class="line"></span><br><span class="line">    嫁给你。</span><br></pre></td></tr></table></figure><p>在这里就用到了「and」这个逻辑符，就是并且的意思，如果有钱和帅同时成立，那么就执行 if 下的语句。如果他没钱，那么立即返回，不会再管他帅不帅了，不会去执行 if 下面的语句。</p><h2 id="or"><a href="#or" class="headerlink" title="or"></a>or</h2><p>那么这时候你可能会问：那么我想要嫁给一个有钱或者帅就行了，也就是满足其一我都嫁，怎么表示呢？</p><p>可以这样：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if 有钱 or 帅 ：</span><br><span class="line"></span><br><span class="line">    嫁给你。</span><br></pre></td></tr></table></figure><p>这里用到的「or」逻辑符，它代表的意思就是或者，如果他是一个有钱的人，那么就直接执行 if 下面的语句，不需要再去判断帅不帅了，如果他没钱，就会再去判断他帅不帅，如果帅才执行 if 下面的语句。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py11-1.webp" alt="虽然我没钱也不帅，但是我骚，可不可以嫁给我？" title="">                </div>                <div class="image-caption">虽然我没钱也不帅，但是我骚，可不可以嫁给我？</div>            </figure><h1 id="Python中的循环语句"><a href="#Python中的循环语句" class="headerlink" title="Python中的循环语句"></a>Python中的循环语句</h1><p>不知道你有没有听过这么个东西：除去睡眠，我们每个人只能活1万多天，有些人活了1万多次，而有些人呢，则只是活了1天，而重复了1万多次。</p><p>我希望我的读者不要成为后者，咱们每天提升自己一点点，活出个样子来。</p><p><img src="https://wistbean.github.io/images/py11-2.webp" alt="好阔怕，我不要重复~~"></p><p>在 Python 的世界里面，可以用 while 和 for 来表示重复，也就是循环。</p><h2 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">while 活着：</span><br><span class="line"></span><br><span class="line">   每天做着一样的事情。</span><br></pre></td></tr></table></figure><p>这样写的意思就是，只要你活着，就一直不断的执行while下面的语句。</p><p>我们可以来写一个抛硬币的 python 程序，我们事先定义好硬币的正反面，然后让用户猜，如果用户猜对了就奖励一个吻，猜错了就继续猜，直到让他猜中为止。</p><p>打开我们的 IDLE，代码撸起来：</p><p>首先定义一个变量，我们的值定义为正面：</p><p><code>coin = &quot;正面&quot;</code></p><p>接着定义一个 flag ：</p><p><code>flag = True</code></p><p>然后我们写一个循环：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> flag :</span><br><span class="line"></span><br><span class="line">    guess = input(<span class="string">"请猜一下是正面还是反面："</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(guess == <span class="string">"反面"</span>) :</span><br><span class="line">        print(<span class="string">"你猜错了，继续猜"</span>)</span><br><span class="line">    <span class="keyword">elif</span>(guess == <span class="string">"正面"</span>) :</span><br><span class="line">        print(<span class="string">"恭喜你猜对了，奖励你一个吻"</span>)</span><br><span class="line">        flag = <span class="keyword">False</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py11-3.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>执行：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py11-4.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>解释一下：当 while 发现 flag 为 true 的时候，就会一次又一次的执行执行 while 下面的一句，直到我们猜中之后，我们就将flag 这个变量改为 false ，while 发现为 false 的时候就不往下循环了。</p><h2 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h2><p>while 可以做到在条件为真的时候反复的执行，不过有时候我们需要在特定范围循环，比如说我们要在第一天到第五天每天啪啪啪一次，那么这时候用 for 就再适合不过了：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">days = [1,2,3,4,5]</span><br><span class="line"></span><br><span class="line">for day in days :</span><br><span class="line">    print(&quot;第&quot; + str(day) + &quot;天啪啪啪&quot;)</span><br></pre></td></tr></table></figure><p>我们来运行下：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py11-5.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>可以看到第一次执行，day就是1，第二次执行day就是2，它就这样一直循环下去，没有一点念想。</p><h2 id="终止循环break"><a href="#终止循环break" class="headerlink" title="终止循环break"></a>终止循环break</h2><p>有一天你突然发现，我不能再这么下去了，不能再重复的过这样的日子了，得有点改变，跳出这个重复的怪圈，那么对于 Python 来说，用break：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">while 活着：</span><br><span class="line">    重复的过日子。</span><br><span class="line">    if（醒悟）：</span><br><span class="line">    break</span><br></pre></td></tr></table></figure><p>通过 break 呢，就可以跳出这个循环了。</p><h2 id="continue"><a href="#continue" class="headerlink" title="continue"></a>continue</h2><p>有时候我们在循环里面，在某个地方不希望它循环下去，先跳过本次接下来的东西，直接执行下一次，这时候我们就可以用 continue了，来试试：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py11-6.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h1 id="Python中的函数"><a href="#Python中的函数" class="headerlink" title="Python中的函数"></a>Python中的函数</h1><p>你可以把函数当做是一个「特定的小程序」，可以用它们来执行特定的事情。</p><p>Python中有内置了许多「特定的小程序」，我们可以非常方便的直接调用它们来执行我们想要操作的东西，这叫内置函数。</p><p>另外我们也可以根据我们自己的需要来创造「特定的小程序」，这叫自定义函数。</p><h2 id="定义函数"><a href="#定义函数" class="headerlink" title="定义函数"></a>定义函数</h2><p>假设我们要自己定义一个函数，这个函数用来叫：亚麻跌，哈哈，想想我们一调用这个函数，它就叫「亚麻跌」。是不是很好玩。</p><p>像这样定义一个函数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">def jiao（）：</span><br><span class="line">    print（&quot;亚麻跌~~~&quot;）</span><br></pre></td></tr></table></figure><p>那么当我们要调用它的时候只要这样「jiao（）」就可以了。</p><p>用 IDLE 来试一试吧：</p><p><img src="https://wistbean.github.io/images/py12-1.webp" alt=""><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py12-2.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></p><p>来解释一下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">def jiao（）：</span><br><span class="line">    print（&quot;亚麻跌~~~&quot;）</span><br></pre></td></tr></table></figure><p>这里的 def 就是一个关键字来的，代表我们要去定义一个函数，而 jiao 就是函数名称，当我们要使用这个函数的时候直接调用它就可以了。而  print（”亚麻跌~~~”） 就是<strong>函数体</strong>，也就是它所具备的功能实现。</p><h2 id="函数的形参和实参"><a href="#函数的形参和实参" class="headerlink" title="函数的形参和实参"></a>函数的形参和实参</h2><p>我们既然定义了一个会叫床的函数了，那么每调用一下它就叫一下是不是不太爽？如果我们能调用这个函数，然后传个数字给它，这个数字是多少，它就叫多少次，岂不是更好？</p><p>可以这样：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">def jiao(times) :</span><br><span class="line">    for time in range(times) :</span><br><span class="line">        print(&quot;亚麻跌~~~&quot;)</span><br></pre></td></tr></table></figure><p>在这里我们定义了一个 times 的参数，接下来我们通过这个range用内置函数生成一个序列，接着用 for 循环，这样子当我们调用函数并传一个数字进去，它就能根据这个数字，去叫相应的次数了。</p><p>比如我们调用 jiao（5），那么它就会叫 5 次。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py12-3.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py12-4.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>那么如果我们想要用户输入多少次，就让它叫多少次，怎么玩呢？想必你看过之前的文章也知道怎么玩了：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py12-5.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py12-6.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>可以看到我们这里的 jiao（int（time）） 传入的是一个变量，那么这样传递的参数叫做<strong>形参</strong>。而我们刚刚 jiao（5）传递的是一个实实在在的数字，我们叫<strong>实参</strong>。</p><h2 id="局部变量和全局变量"><a href="#局部变量和全局变量" class="headerlink" title="局部变量和全局变量"></a>局部变量和全局变量</h2><p>我们在函数里面定义的变量，只有函数里面才可以用，在函数外面是使用不到这个变量的，所以这个变量存在函数这个局部里，我们叫这个变量为局部变量。</p><p>比如说：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">def jiao(times):</span><br><span class="line">    x = 1</span><br><span class="line"></span><br><span class="line">    for time in range(times+x):</span><br><span class="line">        print(&quot;亚麻跌~~~&quot;)</span><br></pre></td></tr></table></figure></p><p>这里的x就是局部变量啦。</p><p>知道了什么是局部变量之后我们在来了解一下什么是全局变量，其实顾名思义，全局嘛~ 那么就是哪里都可以使用这个变量咯。比如说我们在函数内想要更改外边的变量，怎么办呢？这时候我们可以使用 global：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">def jiao(times):</span><br><span class="line"></span><br><span class="line">    global x</span><br><span class="line">    x = 5</span><br><span class="line"></span><br><span class="line">    for time in range(times+x):</span><br><span class="line">        print(&quot;亚麻跌~~~&quot;)</span><br><span class="line"></span><br><span class="line">x = 2</span><br><span class="line">jiao(5)</span><br></pre></td></tr></table></figure><p>那么这里 x 就是全局变量。</p><h2 id="return返回值"><a href="#return返回值" class="headerlink" title="return返回值"></a>return返回值</h2><p>有时候我们需要调用一个函数返回给我们结果，比如我们定义了一个加法计算的函数，我们希望扔两个数给它，它直接计算好然后返回给我们，那么这时候我们就可以用到 return：</p><p>定义一个加法的函数，并返回结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">def addition(x,y):</span><br><span class="line">    return x+y</span><br></pre></td></tr></table></figure><p>那么我们调用的时候：</p><p><code>print(addition(5,6))</code></p><p>直接返回 11 。</p><h2 id="docString"><a href="#docString" class="headerlink" title="docString"></a>docString</h2><p>很多程序员其实不太喜欢写文档的，因为觉得文档这事儿好像不关自己的事情，代码才是。老子写个代码而已，凭什么还要我写文档？</p><p>Python 有个叫做 docString 的东西完美解决了这问题，让你直接在代码中写文档，其实说白了就是给代码写点注释，什么语言都会有给代码写注释的，不过 Python 的 docString 可以直接把你的注释变成文档，是不是很厉害？</p><p>我们可以通过 help(requests) 或者 requests.<strong>doc</strong> 就可以访问到它的文档了。</p><p>接下来我们自己写一个docString吧。</p><p>我们定义一个叫 myDoc 的函数，传入两个参数，再写一下docString，告诉别人我们的函数是干嘛的，传入的参数是什么，返回什么。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">def myDoc(param1 ,param2):</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    this is myDoc function</span><br><span class="line">    :param param1:  this is a first param</span><br><span class="line">    :param param2: this is a second param</span><br><span class="line">    :return: param1 + param2</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    print(param1 + param2)</span><br><span class="line">    return param1 + param2</span><br></pre></td></tr></table></figure><p>是不是一目了然。</p><p>而且我们还可以使用 sphinx 的 autodoc 自动从docString生产api文档。是不是很方便呢？</p><h1 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h1><p>你可以把模块理解为一个 .py文件，这个文件里面包含了所需要的函数和变量，那么下次我们任何一个程序要使用这里面的东西，我们只需要把这个模块导入到我们的程序里面来，就可以直接用了，简直不要太爽。造轮子多麻烦啊，拿来就用是了。</p><p>其实 Python 有内置了一些模块，我们可以直接引用，还有一些第三方模块，也就是我们可以自己创建模块，安装好模块就可以直接使用了。</p><h2 id="使用模块"><a href="#使用模块" class="headerlink" title="使用模块"></a>使用模块</h2><p>如果我们要使用一个模块，可以将这个模块导入，使用 import ，比如我们要导入 Python 的内置的 sys 模块（sys模块包含了与Python解释器和它的环境有关的函数），那么我们就可以使用 import sys:</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py13-1.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py13-2.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="创建自己的模块"><a href="#创建自己的模块" class="headerlink" title="创建自己的模块"></a>创建自己的模块</h2><p>创建自己的模块其实就是自己写了个程序，然后给别人import，我们来写一个模块：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py13-3.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>记住，这模块要保存到和你即将要用的 Python 程序的同一目录下，然后这文件必须是 .py 结尾不用我说了吧。</p><p>接着我们就来使用我们自己的模块吧：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py13-4.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>运行一下：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py13-5.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>可以看到我们不仅会使用模块，而且会自己创建模块了，真是越来越牛逼了。</p><h2 id="安装第三方模块"><a href="#安装第三方模块" class="headerlink" title="安装第三方模块"></a>安装第三方模块</h2><p>世界那么大，牛人那么多，牛人写的模块，我们直接拿来用，不是很爽吗？</p><p>那么我们要使用他们写的模块之前要先将他们的模块安装到我们的 Python 环境来，然后才可以使用。</p><p>首先你要确保你的电脑已经安装好了 pip，如果你在命令行工具中输入 pip 可以像我这样那就说明你已经安装好了 pip：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py13-6.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>推荐一个网站给你们：<a href="https://pypi.org/" target="_blank" rel="noopener">https://pypi.org/</a> 这个网站聚集了一堆牛逼的模块，你可以通过搜索任何你想要的模块：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py13-7.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>比如说我要安装一个叫做 BTrees 的模块，那么我只需要使用「pip install BTrees」  这个命令就可以安装了。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py13-8.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>安装完之后呢，你就可以通过 import 直接使用模块了。</p><h1 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h1><h2 id="python创建一个类"><a href="#python创建一个类" class="headerlink" title="python创建一个类"></a>python创建一个类</h2><p>为了让你更好的理解类和对象，我来举一个例子，哆啦A梦大家都很熟悉吧，那个矮胖矮胖的家伙，口袋里面有着许多我们梦寐以求的东西。</p><p>我们可以把哆啦A梦理解为它是一个对象。如果我们创建一个叫做哆啦A梦的类，那么这个类的实例，我们就叫做哆啦A梦对象。</p><p>在 python 中，可以用 class 来定义一个类，比如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">class DuoLaAMeng：</span><br></pre></td></tr></table></figure><p>那么当我们要去使用这个类的对象的时候我们可以这样：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">duola = DuoLaAMeng（）</span><br></pre></td></tr></table></figure><p>在这里呢，我们定义了一个叫做 duola 的变量，指向的是哆啦A梦这个实例。</p><h2 id="类中的方法使用"><a href="#类中的方法使用" class="headerlink" title="类中的方法使用"></a>类中的方法使用</h2><p>我们的对象肯定是有一些属性给我们用的，比如说哆啦A梦这个对象可以给我们提供竹蜻蜓，所以我们可以在类中定义一些方法给别人去使用。</p><p>我们创建一个类，并且给它定义一个获取竹蜻蜓的方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">class DuoLaAMeng:</span><br><span class="line">    def getZhuQingTing(self):</span><br><span class="line">        print(&quot;给一个竹蜻蜓&quot;)</span><br></pre></td></tr></table></figure><p>那么当我们要调用的时候就可以这样子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">duola = DuoLaAMeng()</span><br><span class="line">duola.getZhuQingTing()</span><br></pre></td></tr></table></figure><p>我们可以看到在定义 getZhuQingTing 这个方法的时候，定义了一个 self 这个参数，其实这个参数指的是DuoLaAMeng对象本身，这就和我们普通定义的函数有些许区别。</p><h2 id="init函数"><a href="#init函数" class="headerlink" title="init函数"></a><strong>init</strong>函数</h2><p>我们在调用对象的时候，有些东西是可以初始化的，这个时候 Python 就给我们提供了一个初始化函数，也就是当我们去调用这个对象的时候，它会先去执行 <strong>init</strong> 这个函数。举个例子你就明白了：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">class DuoLaAMeng:</span><br><span class="line">    def __init__(self, name):</span><br><span class="line">        self.name = name</span><br><span class="line"></span><br><span class="line">    def getZhuQingTing(self):</span><br><span class="line">        print(&quot;给&quot;+self.name+&quot;一个竹蜻蜓&quot;)</span><br><span class="line"></span><br><span class="line">duola = DuoLaAMeng(&quot;大雄&quot;)</span><br><span class="line">duola.getZhuQingTing()</span><br></pre></td></tr></table></figure><p>我们定义了一个 DuoLaAMeng 类， 并且给了一个初始化函数，当别人调用这个类的时候呢，传一个 name 进来，我们就可以对这个名字进行初始化了。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py14-1.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h2><p>如果我们想要再定义一个类似哆啦A梦的对象，比如说哆啦A梦的儿子对象，那么这时候我们用继承来实现，继承就是实现代码重用的方式。</p><p>如果说哆啦A梦的儿子叫做哆啦B梦，那么当我们的哆啦B梦继承了它的爸爸哆啦A梦的时候，哆啦B梦拥有哆啦A梦的所有功能。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py14-2.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>在 Python 中继承的表现形式只这样的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">class 哆啦B梦（哆啦A梦）：</span><br></pre></td></tr></table></figure><p>这样就说明了哆啦B梦是哆啦A梦的儿子。</p><p>举个例子：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py14-3.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py14-4.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>我们在这里定义了一个叫做 DuoLaAMeng 的类，然后定义了两个方法，一个是初始化，一个是获取竹蜻蜓。</p><p>接着我们创建了 DuoLaBMeng 这个类来继承 DuoLaAMeng ，可以看到 DuoLaBMeng 其实啥也没做，但是它就是拥有了DuoLaBMeng 的所有功能。</p><p>这种继承的方式很好，比如我们以后要创建 DuoLaCMeng ，直接继承 DuoLaAMeng 就可以用所属的方法，以后我们要增加什么共同的功能的时候，只需要在父类 DuoLaAMeng 添加就好了，它的子类们都可以使用。</p><h2 id="多态"><a href="#多态" class="headerlink" title="多态"></a>多态</h2><p>DuoLaBMeng 和 DuoLaCMeng 是 DuoLaAMeng 的儿子，我们也可以把它的儿子当做 DuoLaAMeng 对象来使用，比如说有一天 DuoLaAMeng在忙，这时候大雄完全可以把它的儿子们当做是 DuoLaAMeng 来使用，完全木有问题，这就是面向对象中多态的意思。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py14-5.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>但是有些子类是独具特色的，比如 DuoLaBMeng 可以从口袋中拿出充气娃娃，而它的父亲 DuoLaAMeng 没有这个功能。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py14-6.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>这时候父类 DuoLaAMeng 是不可以把它当做子类DuoLaBMeng 来用的，也就是子类可以用父类的方法，但是父类不能用子类的方法。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py14-7.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py14-8.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h1 id="异常"><a href="#异常" class="headerlink" title="异常"></a>异常</h1><p>知道代码有错还狂往下写？是的没错，就是明明知道可能代码会有错误，但是我们还是往下写。就是这么任性！</p><h2 id="异常捕获"><a href="#异常捕获" class="headerlink" title="异常捕获"></a>异常捕获</h2><p>有时候我们对我们的代码的报错是可预知的，比如我们想让 Python 帮我们打开一个小黄文的文件，比如 yellow.txt，可是我们的电脑不一定有，如果这个时候没有的话我们的代码会报错的对吧？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">document = open(&apos;yellow.txt&apos;)</span><br><span class="line">print(&apos;filename:&apos; + document.name)</span><br></pre></td></tr></table></figure><p>运行之后可以看到这里报错:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FileNotFoundError: [Errno 2] No such file or directory: &apos;yellow.txt&apos;</span><br></pre></td></tr></table></figure><p>告诉我们没有这个文件。</p><p>但是如果这时候我们还想往下运行怎么办呢？</p><p>那就可以把这异常给捕获掉，使用 <code>try...except...finally...</code></p><blockquote><p>try：用来包裹我们可能存在错误的代码；<br>except：当发现错了就会执行这里<br>finally：无论怎么样最后都会执行到的。</p></blockquote><p>举个例子你就明白了：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">try:</span><br><span class="line">    document = open(&apos;yellow.txt&apos;)</span><br><span class="line">    print(&apos;filename:&apos; + document.name)</span><br><span class="line">except FileNotFoundError as e:</span><br><span class="line">    print(&quot;error:&quot; , e)</span><br><span class="line">finally:</span><br><span class="line">    print(&quot;最后执行的语句&quot;)</span><br></pre></td></tr></table></figure></p><p>我们这里打开 yellow.txt ,Python发现不存在，那么就执行except下的语句，finally最后也会被执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">error: [Errno 2] No such file or directory: &apos;yellow.txt&apos;</span><br><span class="line">最后执行的语句</span><br></pre></td></tr></table></figure><p>那么这样子的话，以后我们就可以将预料到的错误进行捕获，然后对其进行操作。</p><h2 id="抛出异常"><a href="#抛出异常" class="headerlink" title="抛出异常"></a>抛出异常</h2><p>有时候我们没有去处理异常， Python 也会给我们报出错误，这是因为 Python 有个 BaseException 的异常基类，当Python发现我们的代码错误的时候，又没人去处理，它就会层层的往上抛出错误，直到最上级。</p><p>我们可以自己定义一个异常类：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">class MyError(Exception):</span><br><span class="line">    pass</span><br><span class="line"></span><br><span class="line">def foo(value):</span><br><span class="line">    if(value==0):</span><br><span class="line">        raise MyError(&apos;ERROR %s&apos; % value)</span><br><span class="line"></span><br><span class="line">foo(0)</span><br></pre></td></tr></table></figure><p>可以看到我们自定义了一个叫做MyError的异常类，继承与Exception，当我们传入 0 的时候就会抛出异常。在这里我们使用到的<strong>关键字是raise，就是用来抛出异常的意思</strong>。</p><p>放个异常让你心情疙瘩一下，哈哈哈：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;G:/test.py&quot;, line 11, in &lt;module&gt;</span><br><span class="line">    foo(0)</span><br><span class="line">  File &quot;G:/test.py&quot;, line 9, in foo</span><br><span class="line">    raise MyError(&apos;ERROR %s&apos; % value)</span><br><span class="line">__main__.MyError: ERROR 0</span><br></pre></td></tr></table></figure><p>ok，有了这两招，妈妈再也不用担心，我错误的代码该如何安放了。</p><h1 id="python-中的数据结构"><a href="#python-中的数据结构" class="headerlink" title="python 中的数据结构"></a>python 中的数据结构</h1><p>什么是数据结构呢？就是存储一组相关数据的结构。</p><p>在 python 里面呢，有三种内置好了的数据结构，它们分别是「列表」、「元组」、「字典」。</p><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p>我们应该都很熟悉列表吧，一个列表里面，有多个列表项，每一项就是具体的内容：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py15-1.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>看，这个列表是不是很熟悉？那么在 python 中要表示一个列表可以用到 list 这个对象。例如：</p><p><code>avlist = [&#39;亞洲無碼原創區&#39;,&#39;亞洲有碼原創區&#39;,&#39;歐美原創區&#39;,&#39;動漫原創區&#39;]</code></p><p>可以看到，我们用中括号把每个列表项的内容用逗号隔开，就成了一个 list 对象，然后我们将这个对象赋值给 avlist 这个变量。</p><p>在 python 中想要知道怎么运用 list 这个对象，我们可以在python 解释器中输入 help(list) 得到帮助：</p><p><img src="https://wistbean.github.io/images/py15-2.webp" alt=""></p><p>来看看这里例子怎么使用 list 的吧：</p><p><img src="https://wistbean.github.io/images/py15-3.webp" alt=""></p><p>运行一下：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py15-4.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>讲讲过程：</p><blockquote><p>首先我们定义了一个叫做 avlist 的列表对象，这个列表中有一些内容 [‘亞洲無碼原創區’ ,’亞洲有碼原創區’ ,’歐美原創區’ ,’動漫原創區’ ]</p></blockquote><blockquote><p>我们通过 len 这个列表对象的方法可以得到列表中的条目数。</p></blockquote><blockquote><p>可以通过 for 循环来获取列表中每一个项的内容。</p></blockquote><blockquote><p>我们可以通过 append 方法在列表中添加条目。</p></blockquote><blockquote><p>使用了 sort 对列表中的内容进行排序。</p></blockquote><blockquote><p>列表中的内容可以通过下标索引获取，从0开始，例如avlist[0] 就是获取avlist这个列表的第一个条目。</p></blockquote><p>通过上面我们可以看到， list 这个列表对象是可变的数据类型，什么意思呢？就是我们可以对列表里面的内容进行修改，删除，添加等操作。</p><h2 id="元组"><a href="#元组" class="headerlink" title="元组"></a>元组</h2><p>其实元组和列表是差不多的，不过它们有一点区别就是：元组是不可变的数据类型，也就是说元组里面的内容是不能进行修改，删除，添加等操作的。</p><p>元组使用圆括号来表示，例如：avlist = （’亞洲無碼原創區’ ,’亞洲有碼原創區’ ,’歐美原創區’ ,’動漫原創區’ ）</p><p>元组通常被用来打印语句：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py15-5.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py15-6.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="字典"><a href="#字典" class="headerlink" title="字典"></a>字典</h2><p>如果你想描述 苍井空 的特点是怎么样怎么样，波多野结衣的特点是怎么样怎么样，那么你就可以用到字典啦。</p><p>字典是以键和值组成的，键呢，是不可变的，而值可变。</p><p>字典的表示如下：</p><p>nvyou = {‘苍井空’:’美丽大方’，’波多野结衣’:’身材特好’}</p><p>接下来看看怎么使用字典吧：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py15-7.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py15-8.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>可以看到，我们可以通过字典对象用[键]来获取对应的值，也可以往字典里面添加数据，我们可以用字典的items（）方法获取字典中的具体内容。</p><h1 id="序列"><a href="#序列" class="headerlink" title="序列"></a>序列</h1><p>我们之前所说的 列表，元组都是序列，序列还有一个叫做 字符串，为什么它们会被叫做序列呢？</p><p>那是因为它们有一些特别的地方，比如：索引，切片，相加相乘，成员资格。</p><h2 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h2><p>对于序列来说，序列里面的每个元素都有一个编号，而这个编号是从 0 开始的，例如下面的这个序列，第 0 号就是：亞洲無碼原創區，第 1 号就是亞洲有碼原創區，以此类推。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py16-1.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>这里我们所说的编号就是索引，我们可以通过索引去获取列表的具体想要的内容，如果我们的索引是负数的时候，那么 Python 就会从序列的最后一个元素开始数起，比如说上面这个序列，如果我们用索引  -1 ，那么就可以获取得到「在线成人电影」这个元素。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py16-2.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="切片"><a href="#切片" class="headerlink" title="切片"></a>切片</h2><p>可能你这时候想说了，我用索引只能获取到一个元素，那如果我想在一个序列里面获取部分元素怎么玩？那么这时候就可以用切片来获取。</p><p>比如 <code>[1:3]</code>，就代表我要获取序列中第一个元素（包含）到第三个元素（不包含）的所有内容：</p><p>这里定义一个列表：</p><p><code>avlist = [&#39;亞洲無碼原創區&#39;,&#39;亞洲有碼原創區&#39;,&#39;歐美原創區&#39;,&#39;動漫原創區&#39;]</code></p><p>然后我们通过 <code>avlist[1:3]</code> 就可以获取到：</p><p><code>[&#39;亞洲有碼原創區&#39;, &#39;歐美原創區&#39;]</code></p><p>切片最常用的还是在使用字符串这个序列中，比如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">url = input(&quot;请输入你的网站：&quot;)</span><br><span class="line">print(&quot;主机名是：&quot;+ url[11:-4])</span><br></pre></td></tr></table></figure><p>在这里我们就可以通过切片的方式，来获取字符串这个序列的部分内容，比如这里我们输入：<code>http://www.google.com</code>，那么这个时候我们就可以获取到[11:-4]之间的内容，也就是 google。</p><p>切片还有个叫做步长的东西，还是拿刚刚那个序列为例：</p><p><code>avlist = [&#39;亞洲無碼原創區&#39;,&#39;亞洲有碼原創區&#39;,&#39;歐美原創區&#39;,&#39;動漫原創區&#39;,&#39;國產原創區&#39;,&#39;在綫成人影院 &#39;]</code></p><p>在这个序列中我们如果通过 <code>avlist[1,-1]</code>，那么python会从第一个元素逐一的去获取范围内的内容，也就是一步一步一个脚印的获取，那如果我们想要让它的步伐跨的大一点呢？每一步跨两个元素，那就可以这样：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py16-3.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="相加相乘"><a href="#相加相乘" class="headerlink" title="相加相乘"></a>相加相乘</h2><p>序列是可以相加相乘的，比如我们之前在说Python : Hello World !中就知道了字符串的拼接，其实就是序列的相加。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py16-4.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py16-5.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py16-6.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="成员资格"><a href="#成员资格" class="headerlink" title="成员资格"></a>成员资格</h2><p>如果我们想要判断一个元素是不是在这个列表中，那么我们就可以用到 in 这个关键字，如果存在的话， python 就会给我们返回 True ，如果不存在的话，那么 Python 就会给我们返回 Fasle：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py16-7.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h1 id="Python中的IO"><a href="#Python中的IO" class="headerlink" title="Python中的IO"></a>Python中的IO</h1><p>我们到时候肯定是需要用到对文件进行读写操作的，也就是IO，但是我们不能直接去操作文件，我们需要去告诉操作系统，我们想操作什么文件，然后操作系统帮我们操作。</p><h2 id="读取文件"><a href="#读取文件" class="headerlink" title="读取文件"></a>读取文件</h2><p>我们先创建个叫做 xiaohuangwen.txt 的文件吧：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py17-02.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>python有个内置的函数叫做 open() , 我们可以通过它直接打开文件，打开完文件就可以读取了，但是有可能会报错，就是文件不存在，这个时候我们可以用到上次说的 try…finally 来处理异常：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">try:</span><br><span class="line">    f = open(&quot;G:/xiaohuangwen.txt&quot;,&quot;r&quot;,encoding=&quot;UTF-8&quot;)</span><br><span class="line">    print(f.read())</span><br><span class="line">finally:</span><br><span class="line">    if f:</span><br><span class="line">        f.close()</span><br></pre></td></tr></table></figure><p>我们通过 open 打开了 xiaohuangwen.txt 这个文件。 r 就是读的意思， encoding就是定义好文件编码。</p><p>接着我们就打印出我们 read 出来的文件啦：</p><p><img src="https://wistbean.github.io/images/py17-03.webp" alt=""></p><p>最后一定要记得将文件 close 掉，这样才不会造成系统浪费资源。</p><p>有时候你在读取文件的时候，是不是觉得每次都要 try…finally 很麻烦？ 贴心的 Python 帮我们简化了流程，我们只要直接这样写就可以了：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">with open(&quot;G:/spider/xiaohuangwen.txt&quot;,&quot;r&quot;,encoding=&quot;UTF-8&quot;) as f:</span><br><span class="line">    print(f.read())</span><br></pre></td></tr></table></figure><p>是不是简化了很多？？</p><h2 id="写入文件"><a href="#写入文件" class="headerlink" title="写入文件"></a>写入文件</h2><p>写入文件内容也是一个道理，我们首先要打开文件，然后往里写内容，如果我们传入的参数是 ‘w’ 的话，它会覆盖原来的文件，而我们传入 ‘a’ 则可以在文件末尾追加内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">with open(&quot;G:/spider/xiaohuangwen.txt&quot;,&quot;a&quot;,encoding=&quot;UTF-8&quot;) as f:</span><br><span class="line">    print(f.write(&quot;\n我想看苍老师啊！&quot;))</span><br></pre></td></tr></table></figure><p>ok，运行之后你会发现，你已经把内容写进去了，是不是很简单？</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py17-02.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="文件存储器"><a href="#文件存储器" class="headerlink" title="文件存储器"></a>文件存储器</h2><p>Python 有一个叫做 pickle 的模块，有了它，我们就可以在一个文件中持久的存储我们的女朋友，哦，不是，可以持久的存储我们的对象。</p><p>还有一个叫做 cPickle 的模块，它是用 C 写的，所以它更加牛逼一点，比 pickle 速度快，要快上 1000 倍，所以我么用 cPickle 这个模块会好点。</p><p>不过在 Python3 已经将 cPickle 改名为 pickle 了，所以我们就可以直接 import pickle 就可以啦。</p><p>写个文件存储器的例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">import pickle as p</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 我们要存储内容的文件名</span><br><span class="line">girlfriendlistfile = &apos;girlfriend.data&apos;</span><br><span class="line"></span><br><span class="line">girlfriends = [&apos;波多野结衣&apos;, &apos;苍井空&apos;, &apos;小泽玛利亚&apos;]</span><br><span class="line"></span><br><span class="line"># 把我们的女朋友写到文件里，然后存储器存储</span><br><span class="line">with open(girlfriendlistfile,&apos;wb+&apos;) as f:</span><br><span class="line">    p.dump(girlfriends, f)</span><br><span class="line">    f.close()</span><br><span class="line"></span><br><span class="line">del girlfriends # 删掉我们的女朋友</span><br><span class="line"></span><br><span class="line"># 把我们的女朋友读回来！！</span><br><span class="line">with open(girlfriendlistfile,&apos;rb+&apos;) as f:</span><br><span class="line">    list = p.load(f)</span><br><span class="line">    print (list)</span><br></pre></td></tr></table></figure><p>这就是存储器的使用，是不是so easy？</p><h1 id="用python给自己写一个操作界面"><a href="#用python给自己写一个操作界面" class="headerlink" title="用python给自己写一个操作界面"></a>用python给自己写一个操作界面</h1><p>Python 有一个自带的库叫做 tkinter ，用它我们可以写出系统的操作界面，不管你是 Mac OS 系统，还是 Windows 系统，它都可以生成相对应的操作界面。这就是所谓的跨平台。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py18-01.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>原理就是我们使用 Python 的代码去调用 Tkinter， Tkinter 已经封装了访问TK的接口，这个接口是一个图形库，支持多个操作系统，通过它我们就可以调用我们系统本身的GUI接口了。</p><p>接下来我们用代码玩一下吧：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">from tkinter import *</span><br><span class="line">import tkinter.messagebox as messagebox</span><br><span class="line"></span><br><span class="line">class MyApp(Frame):</span><br><span class="line"></span><br><span class="line">    def __init__(self,master=None):</span><br><span class="line">        Frame.__init__(self,master)</span><br><span class="line">        self.pack()</span><br><span class="line">        self.createWidgets()</span><br><span class="line"></span><br><span class="line">    def createWidgets(self):</span><br><span class="line">        self.helloLabel = Label(self,text=&quot;世界上最帅的人是谁？&quot;)</span><br><span class="line">        self.helloLabel.pack()</span><br><span class="line">        self.quitButton = Button(self,text=&quot;谁呢？&quot;,command=self.who)</span><br><span class="line">        self.quitButton.pack()</span><br><span class="line"></span><br><span class="line">    def who(self):</span><br><span class="line">        messagebox.showinfo(&quot;答案&quot;,&quot;当然是小帅b啦&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">myapp = MyApp()</span><br><span class="line">myapp.master.title(&apos;hello&apos;)</span><br><span class="line">myapp.mainloop()</span><br></pre></td></tr></table></figure><p>在这里：</p><ol><li>我们导入了 tkinter 的相关模块</li></ol><ol start="2"><li>定义了初始化函数，通过 pack（） 方法将我们的组件传给父容器</li></ol><ol start="3"><li>自定义一个创建组件的方法，我们创建了一个标签和一个按钮，这个按钮被点击后就会触发 who 这个方法</li></ol><ol start="4"><li>我们通过 messagebox 来显示一个提示框</li></ol><ol start="5"><li>实例化我们的 APP，然后通过主线程来监听我们的界面操作</li></ol><p>运行后如下：<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py18-02.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py18-03.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></p><h1 id="Python的互联网编程"><a href="#Python的互联网编程" class="headerlink" title="Python的互联网编程"></a>Python的互联网编程</h1><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py5.jpg" alt="你怎么还在用Python写的单机版程序？" title="">                </div>                <div class="image-caption">你怎么还在用Python写的单机版程序？</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py2.png" alt="因为我现在才刚学不久" title="">                </div>                <div class="image-caption">因为我现在才刚学不久</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py5.jpg" alt="现在开发的基本上都是互联网程序了，你要不要跟我一起学一下用Python网络编程？" title="">                </div>                <div class="image-caption">现在开发的基本上都是互联网程序了，你要不要跟我一起学一下用Python网络编程？</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py2.png" alt="哇！真的吗？大佬求带！" title="">                </div>                <div class="image-caption">哇！真的吗？大佬求带！</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py5.jpg" alt="低调低调，说到网络编程，那么我们先要了解互联网。" title="">                </div>                <div class="image-caption">低调低调，说到网络编程，那么我们先要了解互联网。</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py2.png" alt="我了解，互联网就是把许多网络连接起来。" title="">                </div>                <div class="image-caption">我了解，互联网就是把许多网络连接起来。</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py5.jpg" alt="恩，不错，那你知道什么是TCP，UDP吗？" title="">                </div>                <div class="image-caption">恩，不错，那你知道什么是TCP，UDP吗？</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py2.png" alt="em，以前听过，现在有点忘了，你可以给我说道说道吗？" title="">                </div>                <div class="image-caption">em，以前听过，现在有点忘了，你可以给我说道说道吗？</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py5.jpg" alt="可以，我们以前的计算机网络，为了能够互相通信，很多厂商都有自己的一套协议，这就弄得很乱，因为互不兼容，所以通信起来很费劲。后来呢，为了让成千上万的计算机连接起来，定义了两个标准的协议，一个是TCP，一个是 IP，也就是我们现在简称的 TCP/IP 协议。" title="">                </div>                <div class="image-caption">可以，我们以前的计算机网络，为了能够互相通信，很多厂商都有自己的一套协议，这就弄得很乱，因为互不兼容，所以通信起来很费劲。后来呢，为了让成千上万的计算机连接起来，定义了两个标准的协议，一个是TCP，一个是 IP，也就是我们现在简称的 TCP/IP 协议。</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py2.png" alt="也就是说我们遵循 TCP/IP 协议就可以互联了是吧！" title="">                </div>                <div class="image-caption">也就是说我们遵循 TCP/IP 协议就可以互联了是吧！</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py5.jpg" alt="恩，通信的时候，双方要知道对方的标识，才能通信。" title="">                </div>                <div class="image-caption">恩，通信的时候，双方要知道对方的标识，才能通信。</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py2.png" alt="那。。大佬能告诉我下 TCP 和 IP 的区别吗？" title="">                </div>                <div class="image-caption">那。。大佬能告诉我下 TCP 和 IP 的区别吗？</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py5.jpg" alt="当然可以，那我先告诉你 IP 协议吧，假如我要发信息给你，我们都在互联网上，都有自己的 IP 地址和路由，那么当我发信息给你的时候呢，IP 协议就负责将数据进行传输，这些数据被分割成一小块一小块的，通过 IP 包给发送过去。因为们之间在互联网上是有很多链路的，所以路由就会将一小块一小块的数据包逐个进行转发，直到发送到你的IP地址。但是它不能够保证数据都能到达，也保证不了能够按顺序的到达。" title="">                </div>                <div class="image-caption">当然可以，那我先告诉你 IP 协议吧，假如我要发信息给你，我们都在互联网上，都有自己的 IP 地址和路由，那么当我发信息给你的时候呢，IP 协议就负责将数据进行传输，这些数据被分割成一小块一小块的，通过 IP 包给发送过去。因为们之间在互联网上是有很多链路的，所以路由就会将一小块一小块的数据包逐个进行转发，直到发送到你的IP地址。但是它不能够保证数据都能到达，也保证不了能够按顺序的到达。</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py2.png" alt="啊~那如果丢失怎么办？有什么办法吗？" title="">                </div>                <div class="image-caption">啊~那如果丢失怎么办？有什么办法吗？</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py5.jpg" alt="有！那就是 TCP 协议，TCP协议建立在IP协议之上的。TCP协议会建立可靠连接，保证数据包按顺序到达。TCP协议会通过握手建立连接，确保对方按顺序收到，如果包丢掉了，就自动的重新再发。" title="">                </div>                <div class="image-caption">有！那就是 TCP 协议，TCP协议建立在IP协议之上的。TCP协议会建立可靠连接，保证数据包按顺序到达。TCP协议会通过握手建立连接，确保对方按顺序收到，如果包丢掉了，就自动的重新再发。</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py2.png" alt="哦，明白了，那刚刚你说的 UDP 又是？" title="">                </div>                <div class="image-caption">哦，明白了，那刚刚你说的 UDP 又是？</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py5.jpg" alt="我们已经知道了 TCP 是面向连接的，比较可靠，而UDP协议呢，它是面向无连接的，也就是我只要知道你的IP地址和端口就可以直接给你发送数据了，不需要先跟你握手，不过数据能不能到达就不知道了。" title="">                </div>                <div class="image-caption">我们已经知道了 TCP 是面向连接的，比较可靠，而UDP协议呢，它是面向无连接的，也就是我只要知道你的IP地址和端口就可以直接给你发送数据了，不需要先跟你握手，不过数据能不能到达就不知道了。</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py2.png" alt="哦，明白，就是TCP可靠，UDP传输效率高。" title="">                </div>                <div class="image-caption">哦，明白，就是TCP可靠，UDP传输效率高。</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py5.jpg" alt="对头，所以呢，如果不要求数据可靠到达的话就可以用UDP。那么接下来我们就用 Python 来进行 TCP 和 UDP 的编程吧。" title="">                </div>                <div class="image-caption">对头，所以呢，如果不要求数据可靠到达的话就可以用UDP。那么接下来我们就用 Python 来进行 TCP 和 UDP 的编程吧。</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py2.png" alt="太好了！！" title="">                </div>                <div class="image-caption">太好了！！</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py5.jpg" alt="不过在此之前跟你讲一下 Socket 的东西，因为等下我们要用到，Socket 在互联网编程中表示建立了一个互联网连接，Socket知道了对方的IP地址、端口号、协议，就可以建立连接了。" title="">                </div>                <div class="image-caption">不过在此之前跟你讲一下 Socket 的东西，因为等下我们要用到，Socket 在互联网编程中表示建立了一个互联网连接，Socket知道了对方的IP地址、端口号、协议，就可以建立连接了。</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/py2.png" alt="恩，感谢大佬，明白了。" title="">                </div>                <div class="image-caption">恩，感谢大佬，明白了。</div>            </figure><h2 id="Python-中的-TCP-编程"><a href="#Python-中的-TCP-编程" class="headerlink" title="Python 中的 TCP 编程"></a>Python 中的 TCP 编程</h2><p>###TCP客户端的编写<br>我们现在访问一些网页什么的，这些网页是在服务器端的，而我们访问的设备属于客户端。</p><p>比如我们现在通过浏览器访问这个地址：</p><p><a href="http://www.meizitu.com/" target="_blank" rel="noopener">http://www.meizitu.com/</a></p><p>那么会得到好多小姐姐的图片哈哈：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/19-01.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>那么我们怎么通过 Python 来建立可靠的 TCP 连接，获取到这些图片呢？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"># 导入socket这个库</span><br><span class="line">import socket</span><br><span class="line"></span><br><span class="line"># 创建一个socket对象</span><br><span class="line">s = socket.socket(socket.AF_INET,socket.SOCK_STREAM)</span><br><span class="line"># 开始建立TCP连接</span><br><span class="line">s.connect((&quot;www.meizitu.com&quot;,80))</span><br><span class="line"># 连接后，发送请求</span><br><span class="line">s.send(b&apos;GET / HTTP/1.1\r\nHost: www.meizitu.com\r\nConnection: close\r\n\r\n&apos;)</span><br><span class="line"># 接收数据</span><br><span class="line">buffer = []</span><br><span class="line">while True:</span><br><span class="line">    d = s.recv(1024)</span><br><span class="line">    if d:</span><br><span class="line">        buffer.append(d)</span><br><span class="line">    else:</span><br><span class="line">        break</span><br><span class="line"># 把字节连接起来</span><br><span class="line">data = b&apos;&apos;.join(buffer)</span><br><span class="line"></span><br><span class="line"># 关闭连接</span><br><span class="line">s.close()</span><br><span class="line"></span><br><span class="line"># 把数据读取出来</span><br><span class="line"></span><br><span class="line">with open(&apos;meizi.html&apos;,&apos;wb&apos;) as f:</span><br><span class="line">    f.write(data)</span><br></pre></td></tr></table></figure><p>运行之后，我么就有了咱们的妹纸文件：<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/19-02.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></p><p>打开有惊喜。</p><h3 id="TCP-服务端的编写"><a href="#TCP-服务端的编写" class="headerlink" title="TCP 服务端的编写"></a>TCP 服务端的编写</h3><p>服务端一般都是一直在运行着的，等待着客户端来连接，然后给出请求响应，服务端需要提供 ip 地址和端口给客户端去连接。</p><p>首先我们来写一个简单服务端的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">import socket</span><br><span class="line"></span><br><span class="line"># 创建socket对象</span><br><span class="line">s = socket.socket(socket.AF_INET,socket.SOCK_STREAM)</span><br><span class="line"></span><br><span class="line"># 绑定监听端口</span><br><span class="line">s.bind((&apos;127.0.0.1&apos;,8888))</span><br><span class="line"></span><br><span class="line"># 监听</span><br><span class="line">s.listen(1)</span><br><span class="line"></span><br><span class="line">while True:</span><br><span class="line">    # 接收连接</span><br><span class="line">   sock,addr = s.accept()</span><br><span class="line">    print(&quot;有人连进来了&quot;)</span><br><span class="line">    sock.send(b&apos;hei man, are you ok?&apos;)</span><br><span class="line">    sock.close</span><br></pre></td></tr></table></figure><p>当有人连接进来我们就给他发一句：hei man，are you ok ？</p><p>接着我们再来写个客户端的连接过去：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># 导入socket这个库</span><br><span class="line">import socket</span><br><span class="line"></span><br><span class="line"># 创建一个socket对象</span><br><span class="line">s = socket.socket(socket.AF_INET,socket.SOCK_STREAM)</span><br><span class="line"># 开始建立TCP连接</span><br><span class="line">s.connect((&quot;127.0.0.1&quot;,8888))</span><br><span class="line"># 接收数据</span><br><span class="line">buffer = []</span><br><span class="line">d = s.recv(1024)</span><br><span class="line">buffer.append(d)</span><br><span class="line"></span><br><span class="line"># 把字节连接起来</span><br><span class="line">data = b&apos;&apos;.join(buffer)</span><br><span class="line">print(data)</span><br><span class="line"></span><br><span class="line"># 关闭连接</span><br><span class="line">s.close()</span><br></pre></td></tr></table></figure></p><p>然后先运行我们的服务端，再运行客户端：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/19-03.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/19-04.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="Python中的-UDP-编程"><a href="#Python中的-UDP-编程" class="headerlink" title="Python中的 UDP 编程"></a>Python中的 UDP 编程</h2><p>我们来先写服务端：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">import socket</span><br><span class="line"></span><br><span class="line"># 创建socket对象,这里传入的是SOCK_DGRAM，代表UDP</span><br><span class="line">s = socket.socket(socket.AF_INET,socket.SOCK_DGRAM)</span><br><span class="line"></span><br><span class="line"># 绑定监听端口</span><br><span class="line">s.bind((&apos;127.0.0.1&apos;,8090))</span><br><span class="line"></span><br><span class="line">while True:</span><br><span class="line">    # 接收连接</span><br><span class="line">   data,addr = s.recvfrom(1024)</span><br><span class="line">    print(addr)</span><br><span class="line">    s.sendto(b&apos;hei man, are you ok?&apos;,addr)</span><br></pre></td></tr></table></figure><p>可以看到，在这里我们不需要跟对方连接，只要知道地址就直接发送过去就可以了。</p><p>客户端：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">import socket</span><br><span class="line"></span><br><span class="line"># 创建一个socket对象</span><br><span class="line">s = socket.socket(socket.AF_INET,socket.SOCK_DGRAM)</span><br><span class="line"></span><br><span class="line">s.sendto(b&apos;ha&apos;,(&quot;127.0.0.1&quot;,8090))</span><br><span class="line"># 接收数据</span><br><span class="line">print(s.recv(1024).decode(&apos;utf-8&apos;))</span><br><span class="line"></span><br><span class="line"># 关闭连接</span><br><span class="line">s.close()</span><br></pre></td></tr></table></figure><p>运行如下：<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/19-05.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/19-06.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></p><h1 id="把你的Python程序打包成exe可执行文件"><a href="#把你的Python程序打包成exe可执行文件" class="headerlink" title="把你的Python程序打包成exe可执行文件"></a>把你的Python程序打包成exe可执行文件</h1><p>在这篇文章我们就说到了怎么使用<a href="https://wistbean.github.io/python-apider-meizi.html">Python爬取性感美女并保存到本地</a>。还没了解的童鞋可以先看一下。</p><p>在这里呢，我们要使用 PyInstaller 来将我们的爬虫小程序打包成一个 exe 执行文件，然后在没有安装python环境的情况下也可以双击直接运行。</p><p>首先我们要通过 pip 来安装 PyInstaller。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install pyinstaller</span><br></pre></td></tr></table></figure><p>可以先去喝杯茶，等它一顿安装：<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/pp5.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></p><p>喝完茶，差不多也安装完成了。</p><p>我们可以使用 Pyinstaller 的 F 选项来打包：</p><blockquote><p>-F, –onefile         Create a one-file bundled executable.</p></blockquote><p>以我们的爬虫小程序为例，我们要将其打包成一个 exe ，那么我们就可以这样：</p><p>pyinstaller -F .\meizi.py</p><p>这里的 meizi.py 就是我们的项目名称。在执行的时候，Pyinstall帮我们在当前目录创建了 meizi.spec、build文件夹、dist文件夹、<strong>pycache</strong>文件夹。</p><p><img src="https://wistbean.github.io/images/pp6.webp" alt=""></p><p>双击dist文件夹进去一看，你会发现有一个exe执行文件。它就是一个应用程序啦。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/pp7.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>接着我们双击一下，就开始运行啦~</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/pp8.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>可以看到它按我们的程序执行，创建了一个 meizi 的文件夹，并且去妹子网站爬取美女图片然后下载到我们这个文件夹里面。</p><p>爽！！！</p><p>打开我们的meizi文件夹，看看图片爬的怎么样了：<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/pp9.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></p><p>(完)</p><h1 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h1><p>你能看到这里也是厉害的了，我特别为了Python开了一个公众号，名字叫做「学习python的正确姿势」，里面放了一堆福利，在里面发送python有惊喜。快关注一波。</p><h1 id="我的相关文章"><a href="#我的相关文章" class="headerlink" title="我的相关文章"></a>我的相关文章</h1><ul><li><a href="https://wistbean.github.io/categories/python/">python3教程</a></li></ul><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><ul><li><a href="www.runoob.com/python/python-tutorial.html">Python 基础教程| 菜鸟教程</a></li><li><a href="https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000" target="_blank" rel="noopener">Python教程- 廖雪峰的官方网站</a></li><li><a href="https://www.w3cschool.cn/python/" target="_blank" rel="noopener">python基础教程_w3cschool</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="python" scheme="https://wistbean.github.io/categories/python/"/>
    
    
      <category term="教程" scheme="https://wistbean.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="python" scheme="https://wistbean.github.io/tags/python/"/>
    
      <category term="python基础" scheme="https://wistbean.github.io/tags/python%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>通过互联网赚钱的 9 种渠道</title>
    <link href="https://wistbean.github.io/make-money-on-the-internet.html"/>
    <id>https://wistbean.github.io/make-money-on-the-internet.html</id>
    <published>2018-09-01T07:28:10.000Z</published>
    <updated>2018-11-05T07:28:32.044Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>我一直很庆幸能活在这个互联网的时代，给我们带来太多的便利，就像你现在看到的这篇文章，我把文字码出来，转化为 bit 信息，通过互联网秒传到你眼前。</p><p>互联网不仅给我们提供诸多的生活便利，还能让我们从中赚到钱。</p><p>谈到钱，有些人会觉得很俗，好像钱不应该拿上台面说似的,觉得丢人。</p><p>我倒不觉得，首先我承认我爱钱，我觉得钱可以给我带来物质上的基本需求满足，如果连最基本的物质都没有，谈什么理想。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://wx2.sinaimg.cn/bmiddle/006APoFYly1fr2nh8895tj30ee0hs793.jpg" alt="互联网赚钱" title="">                </div>                <div class="image-caption">互联网赚钱</div>            </figure><p>君子爱财，取之有道就行了，所以在不犯法不违反道德的前提下，所有通过自己努力赚到的钱，我都不觉得丢人。</p><p>真正丢人的是那种表面一套，背地里一套的人。</p><p>接下来就来给大家分享一下通过互联网赚钱的 9 种方式，相信如果你动动脑筋，付出点时间精力，每个月赚点零花钱，买个范冰冰版的充气娃娃啥的不成问题。</p><h1 id="文章投稿"><a href="#文章投稿" class="headerlink" title="文章投稿"></a>文章投稿</h1><p>现在是新媒体的发展迅猛，像微信说的：「再小的个体，也有自己的品牌」。所以现在很多新媒体公司都需要文案，如果你有一定的写作能力的话，不妨去找些 大v 投稿，看你的文章质量，一般 1000 字有两三百块钱。读书那会我就有投过稿，写了篇技术文，赚了 150 块钱，当时开心的不要不要的。</p><p>后来还有人找我入驻他们的平台，写写区块链的文章，给我虚拟币。但是我拒绝了 - -</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/WeChat%20Image_20180805221238.jpg" alt="互联网赚钱" title="">                </div>                <div class="image-caption">互联网赚钱</div>            </figure><h1 id="头条号、Youtuebe"><a href="#头条号、Youtuebe" class="headerlink" title="头条号、Youtuebe"></a>头条号、Youtuebe</h1><p>以前，互联网还没普及的时候，人们大多都是通过电视去获取信息，那会电视明星就是现在所说的大V，但是现在互联网普及了，那些通过直播的，做视频的顺势而为，成为了草根明星,他们也赚了好多钱。但是不是说只有 大V 才能在网络上赚钱，今日头条有个叫头条号的平台，你可以在上面写文章，上传视频，头条号会帮你投放广告，如果多人看你的视频或者文章，那么你就可以获取广告费。</p><p>教大家一个套路，之前我试了一下，去 YouTuebe 找了一个热门视频，把视频抓取下来然后发到头条号上，结果有 330k+ 的播放量，通过头条号的广告获得了 50 多元，不过我后来就没玩这个了，主要因为没时间去找视频啥的，如果你是个学生党可以去操作一下，每天赚点零花钱还是不错的。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/WeChat%20Screenshot_20180805164925.png" alt="互联网赚钱" title="">                </div>                <div class="image-caption">互联网赚钱</div>            </figure><p>Youtuebe 也是同样的道理，如果你有什么 idea 制作成视频，上传到 Youtuebe ，也会有广告分成的，前提是你有一定的播放量。</p><h1 id="薅羊毛"><a href="#薅羊毛" class="headerlink" title="薅羊毛"></a>薅羊毛</h1><p>不知道大家知不知道国外有个叫做 PayPal 的东西，这个产品一开始获取用户的方式就是砸钱，新用户注册可以获取 $10 , 推荐一个用户可以再获取 $10 , 现在很多互联网产品一开始也是采用这种方式，比如之前很多的 P2P 产品，如今大多都暴雷，跑路了，可是一开始很多羊毛党都在这些平台薅羊毛，有些专业的羊毛党搞了很多手机号，从而薅了一笔。像之前的饿了么，美团，滴滴打车那些优惠券啥的，有人就通过获取这些优惠券拿去帮人优惠点餐，从而赚取差价，月入几w。 很多人看不起，但是人家就是把钱给赚了。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/WeChat%20Screenshot_20180805221818.png" alt="互联网赚钱" title="">                </div>                <div class="image-caption">互联网赚钱</div>            </figure><p>像现在知识付费时代，有很多平台有活动，通过你分享的链接让你的朋友付费加入学习，你就能从中获取一定的佣金，这也算是薅羊毛的方式。</p><h1 id="照片卖钱"><a href="#照片卖钱" class="headerlink" title="照片卖钱"></a>照片卖钱</h1><p>照片也可以卖钱，如果你拍照技术不错的话，除了晒朋友圈之外，不妨把照片上传到类似 stockphoto 的平台，别人看到不错的照片，又很想要的话，只愿意付费购买的。这个我没玩过，因为我比较喜欢自拍。我怕卖出的价格太高。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/WeChat%20Image_20180805221959.png" alt="互联网赚钱" title="">                </div>                <div class="image-caption">互联网赚钱</div>            </figure><h1 id="淘宝客，affiliate"><a href="#淘宝客，affiliate" class="headerlink" title="淘宝客，affiliate"></a>淘宝客，affiliate</h1><p>你可以通过 阿里妈妈 这个平台注册成为一个淘宝客，当然其它平台也有，例如京东联盟，亚马逊的 affiliate 等，然后你就可以从里面推荐一些商品给别人，如果别人购买了你推荐的商品，相当于帮别人卖产品。那么你就可以从中获取一定的佣金，不同的商品佣金比例不同。我一朋友在上次双十一通过淘宝客赚了台mac电脑。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/WeChat%20Screenshot_20180805222236.png" alt="互联网赚钱" title="">                </div>                <div class="image-caption">互联网赚钱</div>            </figure><h1 id="接单"><a href="#接单" class="headerlink" title="接单"></a>接单</h1><p>如果你是设计师，或者程序员接单应该不陌生吧，因为我是程序员出身，所以身边的朋友有时候有需求会找我做，一般给个项目估价和时间评估，然后达成合作就开干了。除了跟朋友合作之外，网上还有一些平台可以接单，不过国内的就算了，坑人的比较多，动不动就让你付费弄个会员啥的，在这里给大家推荐三个国外的平台，在这里赚的可是美金哦。一个是<a href="http://www.fiverr.com/s2/576829329b" target="_blank" rel="noopener">fiverr</a>一个是 upwork，一个是Freelancer，这三个平台是目前比较多人用，而且知名度也比较高的，很多人在上面发布需求，你可以在上面写好自己的profile，然后去找适合自己的项目。最好懂点英语，想想我以前一边拿着翻译软件一边跟老外聊需求就搞笑。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/WeChat%20Screenshot_20180805222821.png" alt="互联网赚钱" title="">                </div>                <div class="image-caption">互联网赚钱</div>            </figure><h1 id="做产品"><a href="#做产品" class="headerlink" title="做产品"></a>做产品</h1><p>程序员都有一个梦想，就是「Write the code. Change the world」。如果能找到用户的痛点，并且实时的推出一款应用(这也是我之后想干的事)，让用户用的爽，人家很愿意付费购买的。还有一种收入方式就是在自己的产品中投放广告，比如Google AdSense。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/WeChat%20Screenshot_20180805223050.png" alt="互联网赚钱" title="">                </div>                <div class="image-caption">互联网赚钱</div>            </figure><h1 id="买币、股票理财"><a href="#买币、股票理财" class="headerlink" title="买币、股票理财"></a>买币、股票理财</h1><p>这种理财投资方式属于被动收入了，也就是躺着赚钱，但是前提需要你有钱而且风险也很高，对于理财这方面我在学习中，投的钱不多，等过阵子有经验了再跟大家分享吧。</p><h1 id="知识付费"><a href="#知识付费" class="headerlink" title="知识付费"></a>知识付费</h1><p>现在中国人有一个让国外的人惊了个呆的就是，中国人越来越喜欢和认可为知识买单，本质就在于「知识本身不值钱，但知识的表达方式、能让人懂的表达方式，非常值钱」，我的知识星球也算是知识付费的一种，如果你想做知识付费的话，你前期有付出的比你想象的要多的多，如果你还没那个执行力和责任心的话，劝你打消这个念头吧。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/WeChat%20Image_20180805223155.jpg" alt="互联网赚钱" title="">                </div>                <div class="image-caption">互联网赚钱</div>            </figure><p>ok，以上，那些开淘宝店啥的就不说了，现在来说已经饱和了，不建议搞，倒不如多花点时间提升下自己。</p><p>最后希望关注我的朋友能获取到有价值的信息之外，也希望大家发大财哈哈哈。</p><p>哦对了，还有一件事，问下大家，我的手机屏幕坏了，请问哪里可以修啊？？<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/WeChat%20Image_20180805223515.jpg" alt="互联网赚钱" title="">                </div>                <div class="image-caption">互联网赚钱</div>            </figure></p><h1 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h1><ul><li><a href="https://www.zhihu.com/question/20239780" target="_blank" rel="noopener">能通过互联网赚钱的网站平台有哪些？</a></li><li><a href="http://lusongsong.com/reed/9247.html" target="_blank" rel="noopener">如何来实现自动赚钱，互联网赚钱的思维</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="个人理财" scheme="https://wistbean.github.io/categories/%E4%B8%AA%E4%BA%BA%E7%90%86%E8%B4%A2/"/>
    
      <category term="互联网" scheme="https://wistbean.github.io/categories/%E4%B8%AA%E4%BA%BA%E7%90%86%E8%B4%A2/%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
    
      <category term="互联网" scheme="https://wistbean.github.io/tags/%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
      <category term="个人理财" scheme="https://wistbean.github.io/tags/%E4%B8%AA%E4%BA%BA%E7%90%86%E8%B4%A2/"/>
    
      <category term="赚钱" scheme="https://wistbean.github.io/tags/%E8%B5%9A%E9%92%B1/"/>
    
  </entry>
  
  <entry>
    <title>对于宅男来说，硬盘里的数据就是命</title>
    <link href="https://wistbean.github.io/backups.html"/>
    <id>https://wistbean.github.io/backups.html</id>
    <published>2018-08-30T17:45:26.000Z</published>
    <updated>2018-12-27T13:46:51.345Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=3&id=2056192381&auto=1&height=66"></iframe><h1 id="概要"><a href="#概要" class="headerlink" title="概要"></a>概要</h1><h2 id="个人隐私泄露现象"><a href="#个人隐私泄露现象" class="headerlink" title="个人隐私泄露现象"></a>个人隐私泄露现象</h2><h3 id="微博被自动关注了不认识的账号"><a href="#微博被自动关注了不认识的账号" class="headerlink" title="微博被自动关注了不认识的账号"></a>微博被自动关注了不认识的账号</h3><h3 id="淘宝自动收藏了商品"><a href="#淘宝自动收藏了商品" class="headerlink" title="淘宝自动收藏了商品"></a>淘宝自动收藏了商品</h3><h3 id="老是收到垃圾短信"><a href="#老是收到垃圾短信" class="headerlink" title="老是收到垃圾短信"></a>老是收到垃圾短信</h3><h3 id="QQ无缘无故进了陌生群"><a href="#QQ无缘无故进了陌生群" class="headerlink" title="QQ无缘无故进了陌生群"></a>QQ无缘无故进了陌生群</h3><h2 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h2><h3 id="北京瑞智华胜公司窃取-30-亿条个人信息，非法牟利千万元"><a href="#北京瑞智华胜公司窃取-30-亿条个人信息，非法牟利千万元" class="headerlink" title="北京瑞智华胜公司窃取 30 亿条个人信息，非法牟利千万元"></a>北京瑞智华胜公司窃取 30 亿条个人信息，非法牟利千万元</h3><h3 id="阿里巴巴安全部协助警方破获了一起数据窃取案件"><a href="#阿里巴巴安全部协助警方破获了一起数据窃取案件" class="headerlink" title="阿里巴巴安全部协助警方破获了一起数据窃取案件"></a>阿里巴巴安全部协助警方破获了一起数据窃取案件</h3><h2 id="我们的信息怎么被泄露的呢？"><a href="#我们的信息怎么被泄露的呢？" class="headerlink" title="我们的信息怎么被泄露的呢？"></a>我们的信息怎么被泄露的呢？</h2><h3 id="这些公司和运营商们合作中，截取到了用户的-cookie-权限"><a href="#这些公司和运营商们合作中，截取到了用户的-cookie-权限" class="headerlink" title="这些公司和运营商们合作中，截取到了用户的 cookie 权限"></a>这些公司和运营商们合作中，截取到了用户的 cookie 权限</h3><h4 id="cookie"><a href="#cookie" class="headerlink" title="cookie"></a>cookie</h4><h5 id="用户上网过程中都会产生cookie"><a href="#用户上网过程中都会产生cookie" class="headerlink" title="用户上网过程中都会产生cookie"></a>用户上网过程中都会产生cookie</h5><h6 id="网站辨别用户身份而存储在用户本地电脑的数据"><a href="#网站辨别用户身份而存储在用户本地电脑的数据" class="headerlink" title="网站辨别用户身份而存储在用户本地电脑的数据"></a>网站辨别用户身份而存储在用户本地电脑的数据</h6><p>####### 记录用户凭证</p><p>####### 记录用户上网行为</p><h3 id="数据"><a href="#数据" class="headerlink" title="数据"></a>数据</h3><h4 id="上网行为"><a href="#上网行为" class="headerlink" title="上网行为"></a>上网行为</h4><h4 id="在登录过的网站中的账号密码"><a href="#在登录过的网站中的账号密码" class="headerlink" title="在登录过的网站中的账号密码"></a>在登录过的网站中的账号密码</h4><h3 id="谋取利润"><a href="#谋取利润" class="headerlink" title="谋取利润"></a>谋取利润</h3><h4 id="导粉"><a href="#导粉" class="headerlink" title="导粉"></a>导粉</h4><h4 id="刷量"><a href="#刷量" class="headerlink" title="刷量"></a>刷量</h4><h4 id="恶意推广"><a href="#恶意推广" class="headerlink" title="恶意推广"></a>恶意推广</h4><h2 id="我们应该警惕"><a href="#我们应该警惕" class="headerlink" title="我们应该警惕"></a>我们应该警惕</h2><h3 id="账号被盗"><a href="#账号被盗" class="headerlink" title="账号被盗"></a>账号被盗</h3><h3 id="个人财产安全"><a href="#个人财产安全" class="headerlink" title="个人财产安全"></a>个人财产安全</h3><h3 id="生活受到不必要的麻烦"><a href="#生活受到不必要的麻烦" class="headerlink" title="生活受到不必要的麻烦"></a>生活受到不必要的麻烦</h3><h3 id="信息被卖"><a href="#信息被卖" class="headerlink" title="信息被卖"></a>信息被卖</h3><h2 id="我们应该怎么做？"><a href="#我们应该怎么做？" class="headerlink" title="我们应该怎么做？"></a>我们应该怎么做？</h2><h3 id="别以为网络是虚拟的你就很安全"><a href="#别以为网络是虚拟的你就很安全" class="headerlink" title="别以为网络是虚拟的你就很安全"></a>别以为网络是虚拟的你就很安全</h3><h3 id="使用APP的时候非必要的权限不要开启"><a href="#使用APP的时候非必要的权限不要开启" class="headerlink" title="使用APP的时候非必要的权限不要开启"></a>使用APP的时候非必要的权限不要开启</h3><h3 id="开启的权限只在应用运行的时候授权"><a href="#开启的权限只在应用运行的时候授权" class="headerlink" title="开启的权限只在应用运行的时候授权"></a>开启的权限只在应用运行的时候授权</h3><h3 id="密码不要都设置成一样的，也不要设置的过于简单-防止被人撞库和暴力破解"><a href="#密码不要都设置成一样的，也不要设置的过于简单-防止被人撞库和暴力破解" class="headerlink" title="密码不要都设置成一样的，也不要设置的过于简单,防止被人撞库和暴力破解"></a>密码不要都设置成一样的，也不要设置的过于简单,防止被人撞库和暴力破解</h3><h4 id="推荐使用密码管理器lastpass"><a href="#推荐使用密码管理器lastpass" class="headerlink" title="推荐使用密码管理器lastpass"></a>推荐使用密码管理器lastpass</h4><h5 id="https-www-lastpass-com-zh"><a href="#https-www-lastpass-com-zh" class="headerlink" title="https://www.lastpass.com/zh"></a><a href="https://www.lastpass.com/zh" target="_blank" rel="noopener">https://www.lastpass.com/zh</a></h5><h5 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h5><h5 id="设置主密码"><a href="#设置主密码" class="headerlink" title="设置主密码"></a>设置主密码</h5><h3 id="天下没有免费的午餐，免费的WIFI不要随便连"><a href="#天下没有免费的午餐，免费的WIFI不要随便连" class="headerlink" title="天下没有免费的午餐，免费的WIFI不要随便连"></a>天下没有免费的午餐，免费的WIFI不要随便连</h3><h3 id="在网上尽量用昵称，能不填真实信息就不填真实信息"><a href="#在网上尽量用昵称，能不填真实信息就不填真实信息" class="headerlink" title="在网上尽量用昵称，能不填真实信息就不填真实信息"></a>在网上尽量用昵称，能不填真实信息就不填真实信息</h3><h3 id="手机拍照关掉定位功能，因为你如果没关掉的话，发给别人看的照片人家能清楚的知道你是在哪里拍的"><a href="#手机拍照关掉定位功能，因为你如果没关掉的话，发给别人看的照片人家能清楚的知道你是在哪里拍的" class="headerlink" title="手机拍照关掉定位功能，因为你如果没关掉的话，发给别人看的照片人家能清楚的知道你是在哪里拍的"></a>手机拍照关掉定位功能，因为你如果没关掉的话，发给别人看的照片人家能清楚的知道你是在哪里拍的</h3><h4 id="iphone用户在设置–隐私–定位服务–相机–关闭"><a href="#iphone用户在设置–隐私–定位服务–相机–关闭" class="headerlink" title="iphone用户在设置–隐私–定位服务–相机–关闭"></a>iphone用户在设置–隐私–定位服务–相机–关闭</h4><h3 id="对不太信任的软件使用虚拟机运行"><a href="#对不太信任的软件使用虚拟机运行" class="headerlink" title="对不太信任的软件使用虚拟机运行"></a>对不太信任的软件使用虚拟机运行</h3><h3 id="搭建个VPN代理访问"><a href="#搭建个VPN代理访问" class="headerlink" title="搭建个VPN代理访问"></a>搭建个VPN代理访问</h3><h3 id="不要贪小便宜，办理正规的宽带"><a href="#不要贪小便宜，办理正规的宽带" class="headerlink" title="不要贪小便宜，办理正规的宽带"></a>不要贪小便宜，办理正规的宽带</h3><h1 id="肯定会电台相关"><a href="#肯定会电台相关" class="headerlink" title="肯定会电台相关"></a>肯定会电台相关</h1><p><a href="https://wistbean.github.io/categories/%E8%82%AF%E5%AE%9A%E4%BC%9A%E7%94%B5%E5%8F%B0/">肯定会电台</a><br><a href="https://wistbean.github.io/podcast.xml">肯定会电台RSS订阅</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="podcast" scheme="https://wistbean.github.io/categories/podcast/"/>
    
      <category term="肯定会电台" scheme="https://wistbean.github.io/categories/podcast/%E8%82%AF%E5%AE%9A%E4%BC%9A%E7%94%B5%E5%8F%B0/"/>
    
      <category term="互联网" scheme="https://wistbean.github.io/categories/podcast/%E8%82%AF%E5%AE%9A%E4%BC%9A%E7%94%B5%E5%8F%B0/%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
    
      <category term="肯定会电台" scheme="https://wistbean.github.io/tags/%E8%82%AF%E5%AE%9A%E4%BC%9A%E7%94%B5%E5%8F%B0/"/>
    
      <category term="互联网" scheme="https://wistbean.github.io/tags/%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
      <category term="数据备份" scheme="https://wistbean.github.io/tags/%E6%95%B0%E6%8D%AE%E5%A4%87%E4%BB%BD/"/>
    
  </entry>
  
  <entry>
    <title>hexo搭建个人网站博客完全教程</title>
    <link href="https://wistbean.github.io/build-personal-website.html"/>
    <id>https://wistbean.github.io/build-personal-website.html</id>
    <published>2018-08-30T11:38:13.000Z</published>
    <updated>2019-02-27T12:14:17.045Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="为什么要有自己的个人网站呢？"><a href="#为什么要有自己的个人网站呢？" class="headerlink" title="为什么要有自己的个人网站呢？"></a>为什么要有自己的个人网站呢？</h1><p>我觉得现在身处于互联网时代，有自己的个人网站其实就和互联网上的一张名片差不多了，在这里可以不断的记录自己的生活，总结自己的知识，人生思考什么的，以后介绍自己直接把网站扔给对方。一来是可以装下逼，二来是可以让对方更好的了解自己。</p><p>再者就是相对的自由了，现在市面上有很多 Blog 系统，你只要注册一下，就可以直接在他们的平台生成一个你自己的blog，虽然很方便，但是你要付出的代价就是：<strong>忍受他们平台在你的 Blog 嵌入一堆广告。受他们的限制与监管，人家不爽就随随便便删了你的文章，没得商量</strong>。</p><p>比如这样：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/blog01.png" alt="知乎" title="">                </div>                <div class="image-caption">知乎</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/blog02.png" alt="简书" title="">                </div>                <div class="image-caption">简书</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/blog03.png" alt="微信" title="">                </div>                <div class="image-caption">微信</div>            </figure><p>爽吗？反正我是不爽。</p><p>所以自己搞一个完全属于自己的网站，相对来说，没那么苦逼。为什么说相对？ 因为我们也要看大佬的眼色啊。</p><p>但是总比被各种平台恶心好吧。也别幻想什么区块链博客系统，对于目前来说，不现实。</p><h1 id="使用-Hexo-框架来搭建个人网站"><a href="#使用-Hexo-框架来搭建个人网站" class="headerlink" title="使用 Hexo 框架来搭建个人网站"></a>使用 Hexo 框架来搭建个人网站</h1><p>这两天我重新整理了一下自己的 Blog ，因为我之前用的是 Octopress 框架，有些年头了，一些主题和插件并不是很多。</p><p>后来对比了几个框架，发现 Hexo 不错，和 Octopress 差不多，也是可以用 Markdown 写文章，然后生成静态网站，Hexo 主题丰富一些。</p><p>Hexo 是基于 <a href="https://nodejs.cn" target="_blank" rel="noopener">nodejs</a> 的,搭建起来很简单。那么接下来就说说如何从 0 开始使用 Hexo 搭建个人博客吧。</p><h2 id="开始搭建"><a href="#开始搭建" class="headerlink" title="开始搭建"></a>开始搭建</h2><ol><li><p>因为 hexo 是基于 node 框架的，所以呢，我们首先需要下载安装node，下载地址：<a href="nodejs.cn">nodejs</a></p></li><li><p>安装完之后，我们打开命令窗口，输入 <code>node -v</code> ，如果返回下图所示，那么就说明你安装 node 成功了。</p></li></ol><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/blog1.png" alt="node 版本" title="">                </div>                <div class="image-caption">node 版本</div>            </figure><ol start="3"><li><p>安装成功后，我们在命令行窗口运行如下命令来安装hexo：</p><pre><code>npm install hexo-cli -g</code></pre></li><li><p>初始化博客目录：</p><pre><code>hexo init wistbean.github.io (这里的wistbean换成你自己的英文名)</code></pre></li><li><p>初始化完成后，我们就进入我们的目录：</p><pre><code>cd wistbean.github.io</code></pre></li><li><p>安装</p><pre><code>npm install</code></pre></li><li><p>clean一下，然后生成静态页面</p><pre><code>hexo cleanhexo g</code></pre></li></ol><blockquote><p>g 就是<code>generate</code> ,生成的意思</p></blockquote><ol start="8"><li><p>把你的网站运行起来</p><p>   hexo s</p></li></ol><blockquote><p>s 就是<code>server</code> ,在服务器运行的意思</p></blockquote><ol start="9"><li>打开你的浏览器，输入 <code>localhost:4000</code> 。 自此，你的个人网站就这么速度的搭建起来了！</li></ol><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/blog2.png" alt="hexo" title="">                </div>                <div class="image-caption">hexo</div>            </figure><h2 id="优化-hexo-博客主题"><a href="#优化-hexo-博客主题" class="headerlink" title="优化 hexo 博客主题"></a>优化 hexo 博客主题</h2><h3 id="修改你的网站中的个人信息"><a href="#修改你的网站中的个人信息" class="headerlink" title="修改你的网站中的个人信息"></a>修改你的网站中的个人信息</h3><p>进入你的网站目录，打开 _config 文件，这个文件是用来配置你的网站信息的。</p><p>这里列出我的简单配置，具体可以看这个<a href="https://hexo.io/docs/configuration.html" target="_blank" rel="noopener">Hexo配置文档</a></p><pre><code>title: wistbeansubtitle: 肯定会description: wistbean的个人博客，主要涉及到编程（Java，Python，Linux等），个人提升学习，视频教程，《肯定会软件技术》电台节目keywords: wistbean，肯定会，java，python，电台，教程author: wistbeanlanguage: zh</code></pre><h3 id="选一个Hexo主题"><a href="#选一个Hexo主题" class="headerlink" title="选一个Hexo主题"></a>选一个Hexo主题</h3><p>刚搭建完的网站，是不是觉得有点丑，不符合你的漂亮的脸庞？ 反正我是这么觉得的，那么就选一个主题来装饰一下吧，在这里可以选择你要的主题：<a href="https://www.zhihu.com/question/24422335" target="_blank" rel="noopener">知乎答主们推荐的hexo主题大全</a></p><h3 id="下载Hexo主题"><a href="#下载Hexo主题" class="headerlink" title="下载Hexo主题"></a>下载Hexo主题</h3><p>选择好了你的主题之后，就可以下载主题资源了，比如我这里选择一个 <a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="noopener">NEXT</a> 主题来演示一下,在你的目录中输入以下命令：</p><pre><code>git clone https://github.com/iissnan/hexo-theme-next themes/next</code></pre><p>这里主要就是将主题下载到我们的themes目录下。</p><p>如果你还不熟悉 Git 的使用的话，可以看看我之前的 Git 视频教程：<a href="/2018/08/29/java-ssm-1-3/">代码托管Git的使用</a></p><h3 id="配置主题"><a href="#配置主题" class="headerlink" title="配置主题"></a>配置主题</h3><p>主题下载完之后，在你根目录下的 _config.yml 文件中，修改 theme 为你的主题名字：</p><pre><code>theme: next</code></pre><h3 id="重新生成和运行"><a href="#重新生成和运行" class="headerlink" title="重新生成和运行"></a>重新生成和运行</h3><pre><code>hexo ghexo s</code></pre><h3 id="访问一下看看，是不是比之前好看多了？"><a href="#访问一下看看，是不是比之前好看多了？" class="headerlink" title="访问一下看看，是不是比之前好看多了？"></a>访问一下看看，是不是比之前好看多了？</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/blog3.png" alt="hexo next主题" title="">                </div>                <div class="image-caption">hexo next主题</div>            </figure><h2 id="hexo博客的第一篇文章，打上标签和分类"><a href="#hexo博客的第一篇文章，打上标签和分类" class="headerlink" title="hexo博客的第一篇文章，打上标签和分类"></a>hexo博客的第一篇文章，打上标签和分类</h2><p>你已经把你的网站打扮的漂亮大方简洁惹人爱了，那么接下来就要好好去写内容了，内容才是重要的。</p><h3 id="两种方式来新建你的博文"><a href="#两种方式来新建你的博文" class="headerlink" title="两种方式来新建你的博文"></a>两种方式来新建你的博文</h3><h4 id="命令形式"><a href="#命令形式" class="headerlink" title="命令形式"></a>命令形式</h4><p>   在你的 blog 目录下使用如下命令：</p><pre><code>hexo new article （这里的article写上你的文章的名称）</code></pre><p>输入这样的命令之后你的 source/_posts 下就会生成一个 article.md 文件，在这个文件下就可以写上你的博客内容了。用 <a href="https://baike.baidu.com/item/markdown" target="_blank" rel="noopener">Markdown</a> 的语法去写。</p><h4 id="直接新建方式"><a href="#直接新建方式" class="headerlink" title="直接新建方式"></a>直接新建方式</h4><p>直接点的方式就是直接在<code>source/_posts</code>新建一个 Markdown 文件，其实和命令形式是一个道理，只不过命令形式用了命令来创建。推荐使用命令的方式，毕竟 Geek 一点。</p><h3 id="给你的文章打上标签"><a href="#给你的文章打上标签" class="headerlink" title="给你的文章打上标签"></a>给你的文章打上标签</h3><p>在你的博客中打标签能让你的文章方便检索。</p><p>hexo打开标签功能：</p><pre><code>hexo new page tags</code></pre><p>这时候你的 source/ 下生成 tags/index.md 文件，我们将其打开，然后把它改成：</p><pre><code>type: &quot;tags&quot;comments: false</code></pre><p>这时候你要为你的文章打上标签就可以在文章的头部写上：</p><pre><code>tags:    - Tag1    - Tag2    - Tag3</code></pre><p>比如我现在的这篇文章打的标签就是这样的：</p><pre><code>tags:    - 个人网站    - 教程    - hexo    - blog    - 搬瓦工    - Git    - Nginx</code></pre><h3 id="给你的文章添加分类"><a href="#给你的文章添加分类" class="headerlink" title="给你的文章添加分类"></a>给你的文章添加分类</h3><p>分类，归档，是你博客的特性之一。把文章分门别类，方便查看。</p><p>打开hexo分类功能：</p><pre><code>hexo new page categories</code></pre><p>同样的，你的 source 目录下生成 categories/index.md 文件，我们将其打开，把它改成：</p><pre><code>type: &quot;categories&quot;comments: false</code></pre><p>这时候你就可以给你的文章归类存档了，使用方式就是在你的文章的头部加上：</p><pre><code>categories:         - 分类1         - 分类2</code></pre><p>比如我现在的这篇文章的分类就是这样的：</p><pre><code>categories:    - 个人网站    - 教程</code></pre><p>注意：标签和分类要确定你的配置文件 _config.yml 是否有打开了 tag_dir: tags 和 category_dir: categories。另外，Markdown 的语法是写作最优雅最简洁最简单的，如果之前没用过的建议去学一下<a href="https://www.appinn.com/markdown/" target="_blank" rel="noopener">Markdown 语法说明</a>，一般一个钟左右就能掌握。因为它和 HTML 那样简单。</p><h2 id="给你的文章添加评论"><a href="#给你的文章添加评论" class="headerlink" title="给你的文章添加评论"></a>给你的文章添加评论</h2><p>当别人看了你的文章，有问题想跟你探讨，没评论怎么行？评论也是你的 Blog 交互的重要方式之一。</p><p>现在很多 hexo 主题都内置了第三方评论的系统。比较常用的有：</p><ul><li>多说 ：<a href="http://duoshuo.com/" target="_blank" rel="noopener">http://duoshuo.com/</a></li><li>畅言 ：<a href="https://changyan.kuaizhan.com/" target="_blank" rel="noopener">https://changyan.kuaizhan.com/</a></li><li>Valine：<a href="https://github.com/xcss/Valine" target="_blank" rel="noopener">https://github.com/xcss/Valine</a></li><li>Disqus：<a href="https://disqus.com/" target="_blank" rel="noopener">https://disqus.com/</a></li><li>友言: <a href="http://www.uyan.cc/" target="_blank" rel="noopener">http://www.uyan.cc/</a></li><li>gitment: <a href="https://github.com/imsun/gitment" target="_blank" rel="noopener">https://github.com/imsun/gitment</a></li></ul><p>自己去看一下，喜欢哪个用哪个，自己的 Blog 就是要自由。</p><p>选好你的评论系统之后，进入平台注册后，平台会给你一个 APPID 和 appkey。拿到这些信息到你的主题下的配置文件下设置。</p><p>以 next 主题和畅言评论为例：进入你的<code>themes/next</code>,打开_config.yml，定位到 changyan ，把 enable 改为 true。</p><pre><code>changyan:  enable: true  appid: 这里写上你的畅言在appid  appkey: 这里写上你的畅言在appkey</code></pre><p>设置好之后，重新clean生成一下就有评论啦：</p><pre><code>hexo cleanhexo ghexo s</code></pre><p>打开你的预览连接看看你的文章下方，已经有评论功能啦。如下图就是我博客的评论功能：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/blog4.png" alt="评论" title="">                </div>                <div class="image-caption">评论</div>            </figure><h1 id="让全世界的人都认识你"><a href="#让全世界的人都认识你" class="headerlink" title="让全世界的人都认识你"></a>让全世界的人都认识你</h1><p>已经搞定了个人blog，接下来当然是要部署到网上让人家访问了，如果不想花钱，可以使用<code>GitHub Pages</code>，使用它就可以部署自己的网站啦。</p><p>对于 GitHub 不知道怎么用的童鞋，可以看一下我的这个视频教程：<a href="/2018/08/29/java-ssm-1-4/">GitHub完全使用指南</a></p><h2 id="创建-Github-pages-仓库"><a href="#创建-Github-pages-仓库" class="headerlink" title="创建 Github pages 仓库"></a>创建 Github pages 仓库</h2><p>接着创建一个 xxx.github.io 的 public 仓库，这里的xxx写你的名字，比如我写的是 wistbean.github.io,那么到时我就可以通过 <code>wistbean.github.io</code> 来访问我的网站了。</p><p>创建完成之后，那么你就有自己的 Git 地址了。</p><h2 id="安装-hexo-deployer-git"><a href="#安装-hexo-deployer-git" class="headerlink" title="安装 hexo-deployer-git"></a>安装 hexo-deployer-git</h2><p>在你的博客目录下输入如下命令，这样你在本地写的文章才能 push 到 <a href="https://github.com/wistbean/wistbean.github.io" target="_blank" rel="noopener">GitHub</a> 上面去。</p><pre><code>npm install hexo-deployer-git --save</code></pre><h2 id="配置你的Git"><a href="#配置你的Git" class="headerlink" title="配置你的Git"></a>配置你的Git</h2><p>打开你的配置文件，然后输入你的 git 地址：</p><pre><code>deploy:    type: git    repo: https://github.com/xxx/xxxx.github.io.git</code></pre><h2 id="推送你的网站到Github上"><a href="#推送你的网站到Github上" class="headerlink" title="推送你的网站到Github上"></a>推送你的网站到Github上</h2><p>直接输入命令 ： hexo d</p><blockquote><p>d 就是 deploy ， 部署上去的意思。</p></blockquote><h2 id="访问你的网站"><a href="#访问你的网站" class="headerlink" title="访问你的网站"></a>访问你的网站</h2><p>push上去之后，你就可以直接在浏览器输入你的 <code>xxx.github.io</code> 就可以访问啦！</p><h1 id="要有点个性，绑上你的域名"><a href="#要有点个性，绑上你的域名" class="headerlink" title="要有点个性，绑上你的域名"></a>要有点个性，绑上你的域名</h1><p>有了自己的网站，当然是要自己的网址，这样才帅嘛，当然有自己的服务器就更帅了。</p><h2 id="购买域名"><a href="#购买域名" class="headerlink" title="购买域名"></a>购买域名</h2><p>关于域名的购买我比较推荐去<a href="https://sso.godaddy.com" target="_blank" rel="noopener">godaddy</a>，这是国外的域名商，可以使用支付宝购买，不需要备案，使用起来不错的。我的域名 <code>www.wistbean.com</code> 就是在这里买的。</p><h2 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h2><p>买完你的域名之后，接下来几个步骤轻松搞定：</p><h3 id="添加-CNAME-文件"><a href="#添加-CNAME-文件" class="headerlink" title="添加 CNAME 文件"></a>添加 CNAME 文件</h3><p>在你的博客的 sources 目录下新建一个 CNAME 文件，这个文件里面就写你的域名就可以了，比如我就写： <a href="http://www.wistbean.com。" target="_blank" rel="noopener">www.wistbean.com。</a> 接着将文件push到你的GitHub上，可以使用 <code>hexo d</code> 命令。</p><h3 id="在你的域名商后台进行-DNS-解析添加两条记录："><a href="#在你的域名商后台进行-DNS-解析添加两条记录：" class="headerlink" title="在你的域名商后台进行 DNS 解析添加两条记录："></a>在你的域名商后台进行 DNS 解析添加两条记录：</h3><pre><code>1. 主机记录： @    记录类型：A    记录值：192.30.252.154 或者 192.30.252.1532. 主机记录： www     记录类型： CNAME     记录值： xxx.github.io  (这里就是你的github仓库名称)</code></pre><h3 id="GitHub-设置域名"><a href="#GitHub-设置域名" class="headerlink" title="GitHub 设置域名"></a>GitHub 设置域名</h3><p>在你的 GitHub 设置域名，在你的 GitHub 博客项目中点击 Settings，在 GitHub Pages 下的 Custom domain 写上你的域名，然后 save。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://wistbean.github.io/images/domains.png" alt="GitHub 设置域名" title="">                </div>                <div class="image-caption">GitHub 设置域名</div>            </figure><p>至此，你已经搭建好了自己的博客，托管你的网站到 GitHub 了，也绑定了你自己的域名了，那么这时候你的网站就可以被全世界的人看到了。</p><p>but！！！</p><p>因为 GitHub 不让百度爬取索引，也就是说，如果你的朋友想通过百度来搜索你的博客或者你写的文章，是搜索不到的。所以得搞一台自己的服务器，把自己的博客部署到自己的服务器上。</p><h1 id="服务器搞起，完全自主权"><a href="#服务器搞起，完全自主权" class="headerlink" title="服务器搞起，完全自主权"></a>服务器搞起，完全自主权</h1><p>虽然你现在已经可以使用你的域名访问你的网站，但是呢，有自己的服务器托管自己的网站还是爽一点的，GitHub屏蔽了百度的爬虫，也就是说别人通过百度搜索不到你的网站，这你能忍？</p><p>有自己的服务器的话就可以被更多搜索引擎收录，还有呢就是有自己的服务器还可以干些其它的事情。</p><h3 id="购买服务器"><a href="#购买服务器" class="headerlink" title="购买服务器"></a>购买服务器</h3><p>这里的服务器当然推荐要买国外的，这样的话你的域名就不需要备案，不需要被监管，而且还可以搭建 VPN ，一举三得，酸爽。</p><p>我使用的云服务器是<a href="https://bwh88.net/aff.php?aff=32874" target="_blank" rel="noopener">搬瓦工</a>，因为这是我用过觉得性价比最好的，而且呢，还可以领取到优惠码，很多人不知道的，领取优惠码可以看这里：<a href="https://wistbean.github.io/banwagong-coupon.html">购买搬瓦工VPS省钱攻略：获取搬瓦工优惠码</a></p><h3 id="使用-Nginx"><a href="#使用-Nginx" class="headerlink" title="使用 Nginx"></a>使用 Nginx</h3><p>买了服务器之后，那么你就可以用 Nginx 来当做你网站的 web 服务器，搭建也很简单，关于Nginx搭建和配置就不多说了，如果之前没玩过可以看这里：<a href="https://www.jianshu.com/p/ea5316b4d7e9" target="_blank" rel="noopener">Nginx搭建静态网页服务器</a></p><h3 id="DNS解析到你的服务器"><a href="#DNS解析到你的服务器" class="headerlink" title="DNS解析到你的服务器"></a>DNS解析到你的服务器</h3><p>在你的域名商，使用 DNS 解析，添加一条 A 记录就可以了，记录值就是你这台服务器的 IP 地址，一般启用后 30 分钟左右就可以访问啦。</p><p>以上你就完全拥有属于自己的个人网站啦。</p><h1 id="hexo参考文章"><a href="#hexo参考文章" class="headerlink" title="hexo参考文章"></a>hexo参考文章</h1><ul><li><a href="https://zhuanlan.zhihu.com/p/26625249" target="_blank" rel="noopener">GitHub+Hexo 搭建个人网站详细教程</a></li><li><a href="https://www.jianshu.com/p/f4dce0e76886" target="_blank" rel="noopener">使用Hexo搭建个人博客</a></li><li><a href="https://juejin.im/post/590b451a0ce46300588c43a0" target="_blank" rel="noopener">hexo高阶教程：教你怎么让你的hexo博客在搜索引擎中排第一</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="个人网站" scheme="https://wistbean.github.io/categories/%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/"/>
    
      <category term="教程" scheme="https://wistbean.github.io/categories/%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="个人网站" scheme="https://wistbean.github.io/tags/%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/"/>
    
      <category term="搬瓦工" scheme="https://wistbean.github.io/tags/%E6%90%AC%E7%93%A6%E5%B7%A5/"/>
    
      <category term="教程" scheme="https://wistbean.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="hexo" scheme="https://wistbean.github.io/tags/hexo/"/>
    
      <category term="blog" scheme="https://wistbean.github.io/tags/blog/"/>
    
      <category term="Git" scheme="https://wistbean.github.io/tags/Git/"/>
    
      <category term="Nginx" scheme="https://wistbean.github.io/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>「2-6」Java SSM框架的整合与Mybatis逆向工程</title>
    <link href="https://wistbean.github.io/java-ssm-2-6.html"/>
    <id>https://wistbean.github.io/java-ssm-2-6.html</id>
    <published>2018-08-29T09:25:26.000Z</published>
    <updated>2019-02-23T17:53:55.954Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="SSM视频教程第2-6节-SSM框架的整合与Mybatis逆向工程"><a href="#SSM视频教程第2-6节-SSM框架的整合与Mybatis逆向工程" class="headerlink" title="SSM视频教程第2-6节:SSM框架的整合与Mybatis逆向工程"></a>SSM视频教程第2-6节:SSM框架的整合与Mybatis逆向工程</h1><p><iframe width="100%" height="315" src="https://www.youtube.com/embed/geCP49y_Rts" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe></p><blockquote><p>访问不了Youtube？<br>1.点击<a href="/banwagong-ss.html">搭建自己的ss教程</a>轻松访问1080p高清Youtube视频。<br>2.或者点击<a href="https://www.bilibili.com/video/av31282630/" target="_blank" rel="noopener">本节b站视频教程地址</a>观看。</p></blockquote><h1 id="SSM视频教程第2-6节课程概要"><a href="#SSM视频教程第2-6节课程概要" class="headerlink" title="SSM视频教程第2-6节课程概要"></a>SSM视频教程第2-6节课程概要</h1><h2 id="SSM-的整合"><a href="#SSM-的整合" class="headerlink" title="SSM 的整合"></a>SSM 的整合</h2><p>Spring –&gt; Service</p><p>Spring MVC –&gt; 表现层</p><p>Mybatis –&gt; Dao</p><h2 id="Spring-事务管理XML配置"><a href="#Spring-事务管理XML配置" class="headerlink" title="Spring 事务管理XML配置"></a>Spring 事务管理XML配置</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;bean id=&quot;transactionManager&quot;</span><br><span class="line">class=&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;&gt;</span><br><span class="line">&lt;property name=&quot;dataSource&quot; ref=&quot;dataSource&quot; /&gt;</span><br><span class="line">&lt;/bean&gt;</span><br><span class="line">&lt;tx:advice id=&quot;txAdvice&quot; transaction-manager=&quot;transactionManager&quot;&gt;</span><br><span class="line">&lt;tx:attributes&gt;</span><br><span class="line">&lt;tx:method name=&quot;save*&quot; propagation=&quot;REQUIRED&quot; /&gt;</span><br><span class="line">&lt;tx:method name=&quot;insert*&quot; propagation=&quot;REQUIRED&quot; /&gt;</span><br><span class="line">&lt;tx:method name=&quot;add*&quot; propagation=&quot;REQUIRED&quot; /&gt;</span><br><span class="line">&lt;tx:method name=&quot;create*&quot; propagation=&quot;REQUIRED&quot; /&gt;</span><br><span class="line">&lt;tx:method name=&quot;delete*&quot; propagation=&quot;REQUIRED&quot; /&gt;</span><br><span class="line">&lt;tx:method name=&quot;update*&quot; propagation=&quot;REQUIRED&quot; /&gt;</span><br><span class="line">&lt;tx:method name=&quot;find*&quot; propagation=&quot;SUPPORTS&quot; read-only=&quot;true&quot; /&gt;</span><br><span class="line">&lt;tx:method name=&quot;select*&quot; propagation=&quot;SUPPORTS&quot; read-only=&quot;true&quot; /&gt;</span><br><span class="line">&lt;tx:method name=&quot;get*&quot; propagation=&quot;SUPPORTS&quot; read-only=&quot;true&quot; /&gt;</span><br><span class="line">&lt;/tx:attributes&gt;</span><br><span class="line">&lt;/tx:advice&gt;</span><br><span class="line">&lt;aop:config&gt;</span><br><span class="line">&lt;aop:advisor advice-ref=&quot;txAdvice&quot;</span><br><span class="line">pointcut=&quot;execution(* com.manong.service.*.*(..))&quot; /&gt;</span><br><span class="line">&lt;/aop:config&gt;</span><br></pre></td></tr></table></figure><h2 id="web-xml配置"><a href="#web-xml配置" class="headerlink" title="web.xml配置"></a>web.xml配置</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;web-app xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line">         xmlns=&quot;http://java.sun.com/xml/ns/javaee&quot; xmlns:web=&quot;http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd&quot;</span><br><span class="line">         xsi:schemaLocation=&quot;http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd&quot;</span><br><span class="line">         id=&quot;manong&quot; version=&quot;2.5&quot;&gt;</span><br><span class="line">    &lt;display-name&gt;manong-manager&lt;/display-name&gt;</span><br><span class="line">    &lt;welcome-file-list&gt;</span><br><span class="line">        &lt;welcome-file&gt;index.html&lt;/welcome-file&gt;</span><br><span class="line">        &lt;welcome-file&gt;index.htm&lt;/welcome-file&gt;</span><br><span class="line">        &lt;welcome-file&gt;index.jsp&lt;/welcome-file&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/welcome-file-list&gt;</span><br><span class="line">    &lt;!-- 加载spring容器 --&gt;</span><br><span class="line">    &lt;context-param&gt;</span><br><span class="line">        &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;</span><br><span class="line">        &lt;param-value&gt;classpath:spring/applicationContext-*.xml&lt;/param-value&gt;</span><br><span class="line">    &lt;/context-param&gt;</span><br><span class="line">    &lt;listener&gt;</span><br><span class="line">        &lt;listener-class&gt;org.springframework.web.context.ContextLoaderListener&lt;/listener-class&gt;</span><br><span class="line">    &lt;/listener&gt;</span><br><span class="line">    &lt;!-- 解决post乱码 --&gt;</span><br><span class="line">    &lt;filter&gt;</span><br><span class="line">        &lt;filter-name&gt;CharacterEncodingFilter&lt;/filter-name&gt;</span><br><span class="line">        &lt;filter-class&gt;org.springframework.web.filter.CharacterEncodingFilter&lt;/filter-class&gt;</span><br><span class="line">        &lt;init-param&gt;</span><br><span class="line">            &lt;param-name&gt;encoding&lt;/param-name&gt;</span><br><span class="line">            &lt;param-value&gt;utf-8&lt;/param-value&gt;</span><br><span class="line">        &lt;/init-param&gt;</span><br><span class="line">    &lt;/filter&gt;</span><br><span class="line">    &lt;filter-mapping&gt;</span><br><span class="line">        &lt;filter-name&gt;CharacterEncodingFilter&lt;/filter-name&gt;</span><br><span class="line">        &lt;url-pattern&gt;/*&lt;/url-pattern&gt;</span><br><span class="line">    &lt;/filter-mapping&gt;</span><br><span class="line">    &lt;!-- springmvc的前端控制器 --&gt;</span><br><span class="line">    &lt;servlet&gt;</span><br><span class="line">        &lt;servlet-name&gt;manong-manager&lt;/servlet-name&gt;</span><br><span class="line">        &lt;servlet-class&gt;org.springframework.web.servlet.DispatcherServlet&lt;/servlet-class&gt;</span><br><span class="line"></span><br><span class="line">        &lt;init-param&gt;</span><br><span class="line">            &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;</span><br><span class="line">            &lt;param-value&gt;classpath:spring/springmvc.xml&lt;/param-value&gt;</span><br><span class="line">        &lt;/init-param&gt;</span><br><span class="line">        &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;</span><br><span class="line">    &lt;/servlet&gt;</span><br><span class="line">    &lt;servlet-mapping&gt;</span><br><span class="line">        &lt;servlet-name&gt;manong-manager&lt;/servlet-name&gt;</span><br><span class="line">        &lt;url-pattern&gt;/&lt;/url-pattern&gt;</span><br><span class="line">    &lt;/servlet-mapping&gt;</span><br><span class="line">&lt;/web-app&gt;</span><br></pre></td></tr></table></figure><h1 id="SSM视频教程目录"><a href="#SSM视频教程目录" class="headerlink" title="SSM视频教程目录"></a>SSM视频教程目录</h1><ul><li><a href="https://wistbean.github.io/java-ssm-video.html#SSM%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B%E7%9B%AE%E5%BD%95">SSM视频教程目录</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Java" scheme="https://wistbean.github.io/categories/Java/"/>
    
      <category term="Java SSM视频教程" scheme="https://wistbean.github.io/categories/Java/Java-SSM%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/"/>
    
      <category term="Maven" scheme="https://wistbean.github.io/categories/Java/Java-SSM%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/Maven/"/>
    
    
      <category term="教程" scheme="https://wistbean.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Java" scheme="https://wistbean.github.io/tags/Java/"/>
    
      <category term="Java视频教程" scheme="https://wistbean.github.io/tags/Java%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/"/>
    
      <category term="项目实战" scheme="https://wistbean.github.io/tags/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/"/>
    
      <category term="分布式" scheme="https://wistbean.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
      <category term="SSM" scheme="https://wistbean.github.io/tags/SSM/"/>
    
      <category term="IntelliJ IDEA" scheme="https://wistbean.github.io/tags/IntelliJ-IDEA/"/>
    
      <category term="码农商城" scheme="https://wistbean.github.io/tags/%E7%A0%81%E5%86%9C%E5%95%86%E5%9F%8E/"/>
    
      <category term="Maven" scheme="https://wistbean.github.io/tags/Maven/"/>
    
      <category term="Spring" scheme="https://wistbean.github.io/tags/Spring/"/>
    
      <category term="Spring MVC" scheme="https://wistbean.github.io/tags/Spring-MVC/"/>
    
      <category term="Mybatis" scheme="https://wistbean.github.io/tags/Mybatis/"/>
    
      <category term="逆向工程" scheme="https://wistbean.github.io/tags/%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>「2-5」使用InteliJ IDEA 创建 Maven 聚合工程</title>
    <link href="https://wistbean.github.io/java-ssm-2-5.html"/>
    <id>https://wistbean.github.io/java-ssm-2-5.html</id>
    <published>2018-08-29T09:25:26.000Z</published>
    <updated>2019-02-23T17:53:55.904Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="SSM视频教程第2-5节-Maven-聚合工程"><a href="#SSM视频教程第2-5节-Maven-聚合工程" class="headerlink" title="SSM视频教程第2-5节:Maven 聚合工程"></a>SSM视频教程第2-5节:Maven 聚合工程</h1><iframe width="100%" height="315" src="https://www.youtube.com/embed/9s1NzYukex8" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><blockquote><p>访问不了Youtube？<br>1.点击<a href="/banwagong-ss.html">搭建自己的ss教程</a>轻松访问1080p高清Youtube视频。<br>2.或者点击<a href="https://www.bilibili.com/video/av29944189/" target="_blank" rel="noopener">本节b站视频教程地址</a>观看。</p></blockquote><h1 id="SSM视频教程第2-5节课程概要"><a href="#SSM视频教程第2-5节课程概要" class="headerlink" title="SSM视频教程第2-5节课程概要"></a>SSM视频教程第2-5节课程概要</h1><h2 id="使用-maven-的聚合工程"><a href="#使用-maven-的聚合工程" class="headerlink" title="使用 maven 的聚合工程"></a>使用 maven 的聚合工程</h2><p>manager 模块的聚合：</p><ul><li>pojo</li><li>mapper</li><li>service</li></ul><h1 id="SSM视频教程目录"><a href="#SSM视频教程目录" class="headerlink" title="SSM视频教程目录"></a>SSM视频教程目录</h1><ul><li><a href="https://wistbean.github.io/java-ssm-video.html#SSM%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B%E7%9B%AE%E5%BD%95">SSM视频教程目录</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Java" scheme="https://wistbean.github.io/categories/Java/"/>
    
      <category term="Java SSM视频教程" scheme="https://wistbean.github.io/categories/Java/Java-SSM%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/"/>
    
      <category term="Maven" scheme="https://wistbean.github.io/categories/Java/Java-SSM%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/Maven/"/>
    
    
      <category term="教程" scheme="https://wistbean.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Java" scheme="https://wistbean.github.io/tags/Java/"/>
    
      <category term="Java视频教程" scheme="https://wistbean.github.io/tags/Java%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/"/>
    
      <category term="项目实战" scheme="https://wistbean.github.io/tags/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/"/>
    
      <category term="分布式" scheme="https://wistbean.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
      <category term="SSM" scheme="https://wistbean.github.io/tags/SSM/"/>
    
      <category term="IntelliJ IDEA" scheme="https://wistbean.github.io/tags/IntelliJ-IDEA/"/>
    
      <category term="码农商城" scheme="https://wistbean.github.io/tags/%E7%A0%81%E5%86%9C%E5%95%86%E5%9F%8E/"/>
    
      <category term="Maven" scheme="https://wistbean.github.io/tags/Maven/"/>
    
  </entry>
  
  <entry>
    <title>「2-4」使用InteliJ IDEA 创建分布式多模块 Maven 项目</title>
    <link href="https://wistbean.github.io/java-ssm-2-4.html"/>
    <id>https://wistbean.github.io/java-ssm-2-4.html</id>
    <published>2018-08-29T09:25:25.000Z</published>
    <updated>2019-02-23T17:53:54.687Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="SSM视频教程第2-4节-分布式多模块-Maven-项目"><a href="#SSM视频教程第2-4节-分布式多模块-Maven-项目" class="headerlink" title="SSM视频教程第2-4节:分布式多模块 Maven 项目"></a>SSM视频教程第2-4节:分布式多模块 Maven 项目</h1><iframe width="100%" height="315" src="https://www.youtube.com/embed/REmJjMHH3nU" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><blockquote><p>访问不了Youtube？<br>1.点击<a href="/banwagong-ss.html">搭建自己的ss教程</a>轻松访问1080p高清Youtube视频。<br>2.或者点击<a href="https://www.bilibili.com/video/av28956398/" target="_blank" rel="noopener">本节b站视频教程地址</a>观看。</p></blockquote><h1 id="SSM视频教程第2-4节课程概要"><a href="#SSM视频教程第2-4节课程概要" class="headerlink" title="SSM视频教程第2-4节课程概要"></a>SSM视频教程第2-4节课程概要</h1><p>使用 InteliJ IDEA 创建分布式多模块 Maven 项目</p><ul><li>parent 父模块</li><li>common 通用模块</li><li>manager 管理模块</li><li>sso 单点登录模块</li><li>rest restful模块</li><li>search 搜索模块</li><li>…</li></ul><h1 id="SSM视频教程目录"><a href="#SSM视频教程目录" class="headerlink" title="SSM视频教程目录"></a>SSM视频教程目录</h1><ul><li><a href="https://wistbean.github.io/java-ssm-video.html#SSM%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B%E7%9B%AE%E5%BD%95">SSM视频教程目录</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Java" scheme="https://wistbean.github.io/categories/Java/"/>
    
      <category term="Java SSM视频教程" scheme="https://wistbean.github.io/categories/Java/Java-SSM%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/"/>
    
      <category term="Maven" scheme="https://wistbean.github.io/categories/Java/Java-SSM%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/Maven/"/>
    
    
      <category term="教程" scheme="https://wistbean.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Java" scheme="https://wistbean.github.io/tags/Java/"/>
    
      <category term="Java视频教程" scheme="https://wistbean.github.io/tags/Java%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/"/>
    
      <category term="项目实战" scheme="https://wistbean.github.io/tags/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/"/>
    
      <category term="分布式" scheme="https://wistbean.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
      <category term="SSM" scheme="https://wistbean.github.io/tags/SSM/"/>
    
      <category term="IntelliJ IDEA" scheme="https://wistbean.github.io/tags/IntelliJ-IDEA/"/>
    
      <category term="码农商城" scheme="https://wistbean.github.io/tags/%E7%A0%81%E5%86%9C%E5%95%86%E5%9F%8E/"/>
    
      <category term="Maven" scheme="https://wistbean.github.io/tags/Maven/"/>
    
  </entry>
  
  <entry>
    <title>「2-3」使用 InteliJ IDEA 创建 Maven 项目与相关配置</title>
    <link href="https://wistbean.github.io/java-ssm-2-3.html"/>
    <id>https://wistbean.github.io/java-ssm-2-3.html</id>
    <published>2018-08-29T09:25:24.000Z</published>
    <updated>2019-02-23T17:53:55.485Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="SSM视频教程第2-3节-使用-InteliJ-IDEA-创建-Maven-项目与相关配置"><a href="#SSM视频教程第2-3节-使用-InteliJ-IDEA-创建-Maven-项目与相关配置" class="headerlink" title="SSM视频教程第2-3节:使用 InteliJ IDEA 创建 Maven 项目与相关配置"></a>SSM视频教程第2-3节:使用 InteliJ IDEA 创建 Maven 项目与相关配置</h1><iframe width="100%" height="315" src="https://www.youtube.com/embed/TwmgCsTpgXg" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><blockquote><p>访问不了Youtube？<br>1.点击<a href="/banwagong-ss.html">搭建自己的ss教程</a>轻松访问1080p高清Youtube视频。<br>2.或者点击<a href="https://www.bilibili.com/video/av28261268/" target="_blank" rel="noopener">本节b站视频教程地址</a>观看。</p></blockquote><h1 id="SSM视频教程第2-3节课程概要"><a href="#SSM视频教程第2-3节课程概要" class="headerlink" title="SSM视频教程第2-3节课程概要"></a>SSM视频教程第2-3节课程概要</h1><p>使用 Intelij IDEA 创建 Maven 工程并配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot;</span><br><span class="line">         xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line">         xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;</span><br><span class="line">    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</span><br><span class="line">    &lt;groupId&gt;com.kendinghui&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;manong_parent&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--子模块--&gt;</span><br><span class="line">    &lt;modules&gt;</span><br><span class="line">    &lt;/modules&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--集中地定义版本号--&gt;</span><br><span class="line">    &lt;properties&gt;</span><br><span class="line">        &lt;junit.version&gt;4.12&lt;/junit.version&gt;</span><br><span class="line">        &lt;maven-resources-plugin&gt;3.1.0&lt;/maven-resources-plugin&gt;</span><br><span class="line">        &lt;maven-compiler-plugin&gt;3.2&lt;/maven-compiler-plugin&gt;</span><br><span class="line">    &lt;/properties&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependencyManagement&gt;</span><br><span class="line">        &lt;dependencies&gt;</span><br><span class="line">            &lt;dependency&gt;</span><br><span class="line">                &lt;groupId&gt;junit&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;junit&lt;/artifactId&gt;</span><br><span class="line">                &lt;version&gt;$&#123;junit.version&#125;&lt;/version&gt;</span><br><span class="line">            &lt;/dependency&gt;</span><br><span class="line">        &lt;/dependencies&gt;</span><br><span class="line">    &lt;/dependencyManagement&gt;</span><br><span class="line"></span><br><span class="line">    &lt;build&gt;</span><br><span class="line">        &lt;plugins&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;!--定义一个资源拷贝的插件--&gt;</span><br><span class="line">                &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;maven-resources-plugin&lt;/artifactId&gt;</span><br><span class="line">                &lt;version&gt;$&#123;maven-resources-plugin&#125;&lt;/version&gt;</span><br><span class="line">                &lt;configuration&gt;</span><br><span class="line">                    &lt;encoding&gt;UTF-8&lt;/encoding&gt;</span><br><span class="line">                &lt;/configuration&gt;</span><br><span class="line">            &lt;/plugin&gt;</span><br><span class="line"></span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;</span><br><span class="line">                &lt;version&gt;$&#123;maven-compiler-plugin&#125;&lt;/version&gt;</span><br><span class="line">                &lt;configuration&gt;</span><br><span class="line">                    &lt;compilerVersion&gt;1.8&lt;/compilerVersion&gt;</span><br><span class="line">                    &lt;source&gt;1.8&lt;/source&gt;</span><br><span class="line">                    &lt;target&gt;1.8&lt;/target&gt;</span><br><span class="line">                    &lt;encoding&gt;UTF-8&lt;/encoding&gt;</span><br><span class="line">                &lt;/configuration&gt;</span><br><span class="line">            &lt;/plugin&gt;</span><br><span class="line">        &lt;/plugins&gt;</span><br><span class="line">    &lt;/build&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/project&gt;</span><br></pre></td></tr></table></figure><h1 id="SSM视频教程目录"><a href="#SSM视频教程目录" class="headerlink" title="SSM视频教程目录"></a>SSM视频教程目录</h1><ul><li><a href="https://wistbean.github.io/java-ssm-video.html#SSM%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B%E7%9B%AE%E5%BD%95">SSM视频教程目录</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Java" scheme="https://wistbean.github.io/categories/Java/"/>
    
      <category term="Java SSM视频教程" scheme="https://wistbean.github.io/categories/Java/Java-SSM%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/"/>
    
      <category term="Maven" scheme="https://wistbean.github.io/categories/Java/Java-SSM%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/Maven/"/>
    
    
      <category term="教程" scheme="https://wistbean.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Java" scheme="https://wistbean.github.io/tags/Java/"/>
    
      <category term="Java视频教程" scheme="https://wistbean.github.io/tags/Java%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/"/>
    
      <category term="项目实战" scheme="https://wistbean.github.io/tags/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/"/>
    
      <category term="分布式" scheme="https://wistbean.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
      <category term="SSM" scheme="https://wistbean.github.io/tags/SSM/"/>
    
      <category term="IntelliJ IDEA" scheme="https://wistbean.github.io/tags/IntelliJ-IDEA/"/>
    
      <category term="码农商城" scheme="https://wistbean.github.io/tags/%E7%A0%81%E5%86%9C%E5%95%86%E5%9F%8E/"/>
    
      <category term="Maven" scheme="https://wistbean.github.io/tags/Maven/"/>
    
  </entry>
  
  <entry>
    <title>「2-2」码农商城 SSM 系统所需的 Maven 模块简介</title>
    <link href="https://wistbean.github.io/java-ssm-2-2.html"/>
    <id>https://wistbean.github.io/java-ssm-2-2.html</id>
    <published>2018-08-29T09:25:23.000Z</published>
    <updated>2019-02-23T17:53:55.119Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="SSM视频教程第2-2节-Maven-模块简介"><a href="#SSM视频教程第2-2节-Maven-模块简介" class="headerlink" title="SSM视频教程第2-2节:Maven 模块简介"></a>SSM视频教程第2-2节:Maven 模块简介</h1><iframe width="100%" height="315" src="https://www.youtube.com/embed/DAsvsoElXW4" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><blockquote><p>访问不了Youtube？<br>1.点击<a href="/banwagong-ss.html">搭建自己的ss教程</a>轻松访问1080p高清Youtube视频。<br>2.或者点击<a href="https://www.bilibili.com/video/av27263121/" target="_blank" rel="noopener">本节b站视频教程地址</a>观看。</p></blockquote><h1 id="SSM视频教程第2-2节课程概要"><a href="#SSM视频教程第2-2节课程概要" class="headerlink" title="SSM视频教程第2-2节课程概要"></a>SSM视频教程第2-2节课程概要</h1><p>了解码农商城所需要的一些模块</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/parent.png" alt="码农商城 SSM 系统所需的 Maven 模块简介" title="">                </div>                <div class="image-caption">码农商城 SSM 系统所需的 Maven 模块简介</div>            </figure><h1 id="SSM视频教程目录"><a href="#SSM视频教程目录" class="headerlink" title="SSM视频教程目录"></a>SSM视频教程目录</h1><ul><li><a href="https://wistbean.github.io/java-ssm-video.html">SSM视频教程目录</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Java" scheme="https://wistbean.github.io/categories/Java/"/>
    
      <category term="Java SSM视频教程" scheme="https://wistbean.github.io/categories/Java/Java-SSM%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/"/>
    
      <category term="Maven" scheme="https://wistbean.github.io/categories/Java/Java-SSM%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/Maven/"/>
    
    
      <category term="教程" scheme="https://wistbean.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Java" scheme="https://wistbean.github.io/tags/Java/"/>
    
      <category term="Intellij IDEA" scheme="https://wistbean.github.io/tags/Intellij-IDEA/"/>
    
      <category term="Java视频教程" scheme="https://wistbean.github.io/tags/Java%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/"/>
    
      <category term="项目实战" scheme="https://wistbean.github.io/tags/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/"/>
    
      <category term="分布式" scheme="https://wistbean.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
      <category term="SSM" scheme="https://wistbean.github.io/tags/SSM/"/>
    
      <category term="码农商城" scheme="https://wistbean.github.io/tags/%E7%A0%81%E5%86%9C%E5%95%86%E5%9F%8E/"/>
    
      <category term="Maven" scheme="https://wistbean.github.io/tags/Maven/"/>
    
  </entry>
  
  <entry>
    <title>「2-1」什么是Maven，Maven的配置</title>
    <link href="https://wistbean.github.io/java-ssm-2-1.html"/>
    <id>https://wistbean.github.io/java-ssm-2-1.html</id>
    <published>2018-08-29T09:25:22.000Z</published>
    <updated>2019-02-23T17:53:54.848Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="SSM视频教程第2-1节-Maven的概念，Maven的配置"><a href="#SSM视频教程第2-1节-Maven的概念，Maven的配置" class="headerlink" title="SSM视频教程第2-1节:Maven的概念，Maven的配置"></a>SSM视频教程第2-1节:Maven的概念，Maven的配置</h1><iframe width="100%" height="315" src="https://www.youtube.com/embed/bhJQZaCCnTY" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><blockquote><p>访问不了Youtube？<br>1.点击<a href="/banwagong-ss.html">搭建自己的ss教程</a>轻松访问1080p高清Youtube视频。<br>2.点击<a href="https://www.bilibili.com/video/av26620582/" target="_blank" rel="noopener">本节b站视频教程地址</a>观看。</p></blockquote><h1 id="SSM视频教程第2-1节课程概要"><a href="#SSM视频教程第2-1节课程概要" class="headerlink" title="SSM视频教程第2-1节课程概要"></a>SSM视频教程第2-1节课程概要</h1><h2 id="maven"><a href="#maven" class="headerlink" title="maven"></a>maven</h2><ol><li><p>项目管理<br>提供了一套完整的构建生命周期的框架</p></li><li><p>整合工具<br>自动的完成一些工程的基础构建配置</p></li></ol><h2 id="maven安装"><a href="#maven安装" class="headerlink" title="maven安装"></a>maven安装</h2><ol><li>配置好jdk的环境变量的</li><li>可以在<a href="http://maven.apache.org/下载maven" target="_blank" rel="noopener">http://maven.apache.org/下载maven</a></li><li>配置一下maven的环境变量</li><li>运行 mvn –version 校验是否安装成功。</li></ol><h2 id="maven配置文件"><a href="#maven配置文件" class="headerlink" title="maven配置文件"></a>maven配置文件</h2><ol><li>配置镜像：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;mirror&gt;</span><br><span class="line">    &lt;id&gt;alimaven&lt;/id&gt;</span><br><span class="line">    &lt;mirrorOf&gt;central&lt;/mirrorOf&gt;</span><br><span class="line">    &lt;name&gt;aliyun maven mirror&lt;/name&gt;</span><br><span class="line">    &lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public/&lt;/url&gt;</span><br><span class="line">  &lt;/mirror&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>配置本地仓库</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;localRepository&gt;E:/mavenrepository&lt;/localRepository&gt;</span><br></pre></td></tr></table></figure><h2 id="maven特性"><a href="#maven特性" class="headerlink" title="maven特性"></a>maven特性</h2><ol><li>依赖管理</li></ol><ul><li>jar包依赖</li><li>工程间的依赖</li><li>继承</li><li>聚合</li></ul><ol start="2"><li><p>工程类型</p><ul><li>war包的项目</li><li>jar包的项目</li><li>pom工程</li></ul></li></ol><h1 id="SSM视频教程目录"><a href="#SSM视频教程目录" class="headerlink" title="SSM视频教程目录"></a>SSM视频教程目录</h1><ul><li><a href="https://wistbean.github.io/java-ssm-video.html#SSM%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B%E7%9B%AE%E5%BD%95">SSM视频教程目录</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Java" scheme="https://wistbean.github.io/categories/Java/"/>
    
      <category term="Java SSM视频教程" scheme="https://wistbean.github.io/categories/Java/Java-SSM%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/"/>
    
      <category term="Maven" scheme="https://wistbean.github.io/categories/Java/Java-SSM%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/Maven/"/>
    
    
      <category term="教程" scheme="https://wistbean.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Java" scheme="https://wistbean.github.io/tags/Java/"/>
    
      <category term="Intellij IDEA" scheme="https://wistbean.github.io/tags/Intellij-IDEA/"/>
    
      <category term="Java视频教程" scheme="https://wistbean.github.io/tags/Java%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/"/>
    
      <category term="项目实战" scheme="https://wistbean.github.io/tags/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/"/>
    
      <category term="分布式" scheme="https://wistbean.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
      <category term="SSM" scheme="https://wistbean.github.io/tags/SSM/"/>
    
      <category term="码农商城" scheme="https://wistbean.github.io/tags/%E7%A0%81%E5%86%9C%E5%95%86%E5%9F%8E/"/>
    
      <category term="Maven" scheme="https://wistbean.github.io/tags/Maven/"/>
    
  </entry>
  
  <entry>
    <title>「1-4」GitHub完全使用指南</title>
    <link href="https://wistbean.github.io/java-ssm-1-4.html"/>
    <id>https://wistbean.github.io/java-ssm-1-4.html</id>
    <published>2018-08-29T09:25:21.000Z</published>
    <updated>2019-02-23T17:53:54.741Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="SSM视频教程第1-4节-GitHub完全使用指南"><a href="#SSM视频教程第1-4节-GitHub完全使用指南" class="headerlink" title="SSM视频教程第1-4节:GitHub完全使用指南"></a>SSM视频教程第1-4节:GitHub完全使用指南</h1><iframe width="100%" height="315" src="https://www.youtube.com/embed/AClvgSXwi9Y" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><blockquote><p>访问不了Youtube？<br>1.点击<a href="/banwagong-ss.html">搭建自己的ss教程</a>轻松访问1080p高清Youtube视频。<br>2.点击<a href="https://www.bilibili.com/video/av24020960/" target="_blank" rel="noopener">本节b站视频教程地址</a>观看。</p></blockquote><h1 id="SSM视频教程第1-4节课程概要"><a href="#SSM视频教程第1-4节课程概要" class="headerlink" title="SSM视频教程第1-4节课程概要"></a>SSM视频教程第1-4节课程概要</h1><h1 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h1><p>全球最大的社交编程网站！</p><h2 id="Github-有什么用？"><a href="#Github-有什么用？" class="headerlink" title="Github 有什么用？"></a>Github 有什么用？</h2><ol><li>代码托管</li><li>多人协作</li><li>个人博客</li><li>个人简历</li></ol><h2 id="使用Github"><a href="#使用Github" class="headerlink" title="使用Github"></a>使用Github</h2><ul><li>star 收藏</li><li>fork “复制”</li><li>repository 仓库</li><li>watch 观察</li><li>Gist 代码片段</li><li>Pull Request 请求合并</li><li>Issue 提问题/bug</li><li>clone 克隆</li><li>git config 配置信息</li><li>git push 将本地代码推送到github上去</li><li>git pull 将远程的代码更新下来</li><li>git branch 分支</li><li><p>git merge 合并</p><h2 id="ssh授权"><a href="#ssh授权" class="headerlink" title="ssh授权"></a>ssh授权</h2><p> 生成秘钥：ssh-keygen -t rsa<br> 验证是否授权成功： ssh -T <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a></p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Hi testWistbean! You&apos;ve successfully authenticated,</span><br><span class="line">but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure></li></ul><h1 id="SSM视频教程目录"><a href="#SSM视频教程目录" class="headerlink" title="SSM视频教程目录"></a>SSM视频教程目录</h1><ul><li><a href="https://wistbean.github.io/java-ssm-video.html#SSM%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B%E7%9B%AE%E5%BD%95">SSM视频教程目录</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Java" scheme="https://wistbean.github.io/categories/Java/"/>
    
      <category term="Java SSM视频教程" scheme="https://wistbean.github.io/categories/Java/Java-SSM%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/"/>
    
      <category term="Git" scheme="https://wistbean.github.io/categories/Java/Java-SSM%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/Git/"/>
    
    
      <category term="教程" scheme="https://wistbean.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Git" scheme="https://wistbean.github.io/tags/Git/"/>
    
      <category term="GitHub" scheme="https://wistbean.github.io/tags/GitHub/"/>
    
      <category term="Java" scheme="https://wistbean.github.io/tags/Java/"/>
    
      <category term="Java视频教程" scheme="https://wistbean.github.io/tags/Java%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/"/>
    
      <category term="项目实战" scheme="https://wistbean.github.io/tags/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/"/>
    
      <category term="分布式" scheme="https://wistbean.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
      <category term="SSM" scheme="https://wistbean.github.io/tags/SSM/"/>
    
      <category term="IntelliJ IDEA" scheme="https://wistbean.github.io/tags/IntelliJ-IDEA/"/>
    
      <category term="码农商城" scheme="https://wistbean.github.io/tags/%E7%A0%81%E5%86%9C%E5%95%86%E5%9F%8E/"/>
    
  </entry>
  
  <entry>
    <title>「1-3」代码托管Git的使用</title>
    <link href="https://wistbean.github.io/java-ssm-1-3.html"/>
    <id>https://wistbean.github.io/java-ssm-1-3.html</id>
    <published>2018-08-29T09:25:20.000Z</published>
    <updated>2019-02-23T17:53:55.438Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="SSM视频教程第1-3节-代码托管Git的使用"><a href="#SSM视频教程第1-3节-代码托管Git的使用" class="headerlink" title="SSM视频教程第1-3节:代码托管Git的使用"></a>SSM视频教程第1-3节:代码托管Git的使用</h1><iframe width="100%" height="315" src="https://www.youtube.com/embed/fx8jcmsfQSg" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><blockquote><p>访问不了Youtube？<br>1.点击<a href="/banwagong-ss.html">搭建自己的ss教程</a>轻松访问1080p高清Youtube视频。<br>2.点击<a href="https://www.bilibili.com/video/av23710837/" target="_blank" rel="noopener">本节b站视频教程地址</a>观看。</p></blockquote><h1 id="SSM视频教程第1-3节课程概要"><a href="#SSM视频教程第1-3节课程概要" class="headerlink" title="SSM视频教程第1-3节课程概要"></a>SSM视频教程第1-3节课程概要</h1><h2 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h2><p>代码的版本控制管理系统</p><h3 id="Git可以干什么呢？"><a href="#Git可以干什么呢？" class="headerlink" title="Git可以干什么呢？"></a>Git可以干什么呢？</h3><ol><li>防止代码丢失</li><li>远程同步代码</li><li>团队合作利器</li><li>代码还原</li><li>记录代码版本</li></ol><h3 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h3><h3 id="Git的常用的操作命令"><a href="#Git的常用的操作命令" class="headerlink" title="Git的常用的操作命令"></a>Git的常用的操作命令</h3><ul><li>git init 初始化git仓库</li><li>git status 查看状态</li><li>git add 将文件添加到git仓库的暂存区</li><li>git commit 将添加到暂存区的文件提交到git仓库</li><li>git log 查看日志</li><li>git branch 查看当前的分支</li><li>git branch hi 创建一个叫做“hi”的分支</li><li>git checkout hi 切换分支到“hi”分支</li><li>git branch -d hi 删除“hi”分支</li></ul><h1 id="SSM视频教程目录"><a href="#SSM视频教程目录" class="headerlink" title="SSM视频教程目录"></a>SSM视频教程目录</h1><ul><li><a href="https://wistbean.github.io/java-ssm-video.html#SSM%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B%E7%9B%AE%E5%BD%95">SSM视频教程目录</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Java" scheme="https://wistbean.github.io/categories/Java/"/>
    
      <category term="Java SSM视频教程" scheme="https://wistbean.github.io/categories/Java/Java-SSM%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/"/>
    
      <category term="Git" scheme="https://wistbean.github.io/categories/Java/Java-SSM%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/Git/"/>
    
    
      <category term="教程" scheme="https://wistbean.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Git" scheme="https://wistbean.github.io/tags/Git/"/>
    
      <category term="Java" scheme="https://wistbean.github.io/tags/Java/"/>
    
      <category term="Java视频教程" scheme="https://wistbean.github.io/tags/Java%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/"/>
    
      <category term="项目实战" scheme="https://wistbean.github.io/tags/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/"/>
    
      <category term="分布式" scheme="https://wistbean.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
      <category term="SSM" scheme="https://wistbean.github.io/tags/SSM/"/>
    
      <category term="IntelliJ IDEA" scheme="https://wistbean.github.io/tags/IntelliJ-IDEA/"/>
    
      <category term="码农商城" scheme="https://wistbean.github.io/tags/%E7%A0%81%E5%86%9C%E5%95%86%E5%9F%8E/"/>
    
  </entry>
  
  <entry>
    <title>「1-2」传统的集群架构和分布式架构区别</title>
    <link href="https://wistbean.github.io/java-ssm-1-2.html"/>
    <id>https://wistbean.github.io/java-ssm-1-2.html</id>
    <published>2018-08-29T09:25:19.000Z</published>
    <updated>2019-02-23T17:53:56.290Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="SSM视频教程第1-2节-传统的集群架构和分布式架构区别"><a href="#SSM视频教程第1-2节-传统的集群架构和分布式架构区别" class="headerlink" title="SSM视频教程第1-2节:传统的集群架构和分布式架构区别"></a>SSM视频教程第1-2节:传统的集群架构和分布式架构区别</h1><iframe width="100%" height="315" src="https://www.youtube.com/embed/1URBE2UO_Bo" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><blockquote><p>访问不了Youtube？<br>1.点击<a href="/banwagong-ss.html">搭建自己的ss教程</a>轻松访问1080p高清Youtube视频。<br>2.点击<a href="https://www.bilibili.com/video/av19819181/" target="_blank" rel="noopener">本节b站视频教程地址</a>观看。</p></blockquote><h1 id="SSM视频教程第1-2节课程概要"><a href="#SSM视频教程第1-2节课程概要" class="headerlink" title="SSM视频教程第1-2节课程概要"></a>SSM视频教程第1-2节课程概要</h1><h2 id="第二节-架构"><a href="#第二节-架构" class="headerlink" title="第二节 架构"></a>第二节 架构</h2><h3 id="集群架构"><a href="#集群架构" class="headerlink" title="集群架构"></a>集群架构</h3><p>缺点：</p><ul><li>耦合度太高了</li><li>增加了团队的合作成本</li><li>不能够去灵活的部署</li></ul><h3 id="分布式架构"><a href="#分布式架构" class="headerlink" title="分布式架构"></a>分布式架构</h3><p>优点：</p><ul><li>项目拆分成多个模块，耦合度降低</li><li>单点运行，团队合作效率高了</li><li>可以灵活部署</li></ul><p>缺点：</p><ul><li>需要去额外的开发，让各个模块之间能够通信！</li></ul><h1 id="SSM视频教程目录"><a href="#SSM视频教程目录" class="headerlink" title="SSM视频教程目录"></a>SSM视频教程目录</h1><ul><li><a href="https://wistbean.github.io/java-ssm-video.html#SSM视频教程目录">SSM视频教程目录</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Java" scheme="https://wistbean.github.io/categories/Java/"/>
    
      <category term="Java SSM视频教程" scheme="https://wistbean.github.io/categories/Java/Java-SSM%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="教程" scheme="https://wistbean.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Java" scheme="https://wistbean.github.io/tags/Java/"/>
    
      <category term="Java视频教程" scheme="https://wistbean.github.io/tags/Java%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/"/>
    
      <category term="项目实战" scheme="https://wistbean.github.io/tags/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/"/>
    
      <category term="分布式" scheme="https://wistbean.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
      <category term="SSM" scheme="https://wistbean.github.io/tags/SSM/"/>
    
      <category term="IntelliJ IDEA" scheme="https://wistbean.github.io/tags/IntelliJ-IDEA/"/>
    
      <category term="码农商城" scheme="https://wistbean.github.io/tags/%E7%A0%81%E5%86%9C%E5%95%86%E5%9F%8E/"/>
    
      <category term="架构" scheme="https://wistbean.github.io/tags/%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>「1-1」分布式高并发java web项目实战视频教程介绍</title>
    <link href="https://wistbean.github.io/java-ssm-1-1.html"/>
    <id>https://wistbean.github.io/java-ssm-1-1.html</id>
    <published>2018-08-29T09:25:18.000Z</published>
    <updated>2019-02-23T17:53:54.784Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="SSM视频教程第一节-项目实战视频教程介绍"><a href="#SSM视频教程第一节-项目实战视频教程介绍" class="headerlink" title="SSM视频教程第一节:项目实战视频教程介绍"></a>SSM视频教程第一节:项目实战视频教程介绍</h1><p>点击<a href="https://www.bilibili.com/video/av17651178/" target="_blank" rel="noopener">本节b站视频教程地址</a>观看。</p><h1 id="SSM视频教程第一节课程概要"><a href="#SSM视频教程第一节课程概要" class="headerlink" title="SSM视频教程第一节课程概要"></a>SSM视频教程第一节课程概要</h1><h3 id="面向的学习人群"><a href="#面向的学习人群" class="headerlink" title="面向的学习人群"></a>面向的学习人群</h3><ol><li>具备有一定的java基础</li><li>初级开发者 -&gt; 中高级开发者</li><li>具备一定的自学能力和执行能力！</li></ol><h3 id="技术选型"><a href="#技术选型" class="headerlink" title="技术选型"></a>技术选型</h3><ol><li>Spring</li><li>Spring MVC</li><li>Mybatis</li><li>redis</li><li>solor</li><li>EasyUI</li><li>UEditor</li><li>JQuery</li><li>Freemark</li><li>activMQ</li><li>httpClient</li><li>MySQL</li></ol><h3 id="开发环境"><a href="#开发环境" class="headerlink" title="开发环境"></a>开发环境</h3><ol><li>IntelliJ IDEA</li><li>Maven</li><li>Tomcat7</li><li>JDK</li><li>Nginx</li><li>Git</li><li>postman</li><li>sqlyog</li><li>win7</li></ol><h3 id="计划"><a href="#计划" class="headerlink" title="计划"></a>计划</h3><ul><li>技术架构 （集群和分布式架构的区别）</li><li>工程搭建 （maven）</li><li>SSM框架的整合</li><li>Mybatis逆向工程以及使用</li><li>日志的添加与使用</li><li>拦截器</li><li>后端功能 （系统的开发，图片系统，数据等等）</li><li>前端功能 （商品浏览，下订单，购物车等等。。）</li><li>redis使用以及集群搭建</li><li>solor使用和集群搭建</li><li>JMS 消息队列 （activMQ）</li><li>sso单点登录</li><li>restful服务</li><li>在Linux上部署</li></ul><h1 id="SSM视频教程目录"><a href="#SSM视频教程目录" class="headerlink" title="SSM视频教程目录"></a>SSM视频教程目录</h1><ul><li><a href="https://wistbean.github.io/java-ssm-video.html">SSM视频教程目录</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Java" scheme="https://wistbean.github.io/categories/Java/"/>
    
      <category term="Java SSM视频教程" scheme="https://wistbean.github.io/categories/Java/Java-SSM%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="教程" scheme="https://wistbean.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Java" scheme="https://wistbean.github.io/tags/Java/"/>
    
      <category term="Java视频教程" scheme="https://wistbean.github.io/tags/Java%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/"/>
    
      <category term="项目实战" scheme="https://wistbean.github.io/tags/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/"/>
    
      <category term="分布式" scheme="https://wistbean.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
      <category term="SSM" scheme="https://wistbean.github.io/tags/SSM/"/>
    
      <category term="IntelliJ IDEA" scheme="https://wistbean.github.io/tags/IntelliJ-IDEA/"/>
    
      <category term="码农商城" scheme="https://wistbean.github.io/tags/%E7%A0%81%E5%86%9C%E5%95%86%E5%9F%8E/"/>
    
  </entry>
  
  <entry>
    <title>CentOS快速搭建一个属于自己的IPsec/L2TP VPN</title>
    <link href="https://wistbean.github.io/ipsec,l2tp_vpn.html"/>
    <id>https://wistbean.github.io/ipsec,l2tp_vpn.html</id>
    <published>2018-08-29T09:16:04.000Z</published>
    <updated>2019-02-27T12:14:16.949Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="搭建IPsec-L2TP-VPN的准备"><a href="#搭建IPsec-L2TP-VPN的准备" class="headerlink" title="搭建IPsec/L2TP VPN的准备"></a>搭建IPsec/L2TP VPN的准备</h1><ul><li>一台云服务器VPS</li><li>远程连接VPS工具</li></ul><p>1.我使用的云服务器是<a href="https://bwh88.net/aff.php?aff=32874" target="_blank">搬瓦工官网</a>，<br>因为性价比高，一年也就十几刀，速度快。</p><p>使用以下的搬瓦工出的最新优惠：</p><table><thead><tr><th>搬瓦工配置</th><th>搬瓦工费用</th><th>优惠链接</th></tr></thead><tbody><tr><td><em>SPECIAL 40G KVM PROMO V3 - LOS ANGELES - CN2  </em> <br>  SSD硬盘: 40  GB RAID-10 <br> RAM内存: 2048   MB <br> CPU处理器: 1x Intel Xeon <br> Transfer流量: 2000  GB/月 <br> 连接速度: 1 Gigabit <br> 洛杉矶机房，CN2路线，使用中国的直线路线，速度加快</td><td>$27.99/季</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=58" target="_blank" rel="noopener">点击进入</a></td></tr><tr><td><em>SPECIAL 20G KVM PROMO V3 - LOS ANGELES - CN2 </em> <br>  SSD硬盘: 20 GB RAID-10 <br> RAM内存: 1024  MB <br> CPU处理器: 1x Intel Xeon <br> Transfer流量: 1000  GB/月 <br> 连接速度: 1 Gigabit <br> 洛杉矶机房，CN2路线，使用中国的直线路线，速度加快</td><td>$29.99 /半年</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=57" target="_blank" rel="noopener">点击进入</a></td></tr><tr><td><em>80G KVM – PROMO</em> <br> SSD硬盘: 80 GB RAID-10<br>RAM内存: 4 GB<br>CPU处理器: 4x Intel Xeon<br>Transfer流量: 3 TB/mo<br>连接速度: 1 Gigabit<br>Multiple locations</td><td>$19.99/月</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=46" target="_blank" rel="noopener">点击进入</a></td></tr><tr><td><em>20G KVM – PROMO</em> <br> SSD硬盘: 20 GB RAID-10 <br>RAM内存: 1024 MB <br>CPU处理器: 2x Intel Xeon <br>Transfer流量: 1 TB/mo <br>连接速度: 1 Gigabit <br>Multiple locations</td><td>$49.99/年</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=44" target="_blank" rel="noopener">点击进入</a></td></tr><tr><td><em>40G KVM – PROMO</em> <br> SSD硬盘: 40 GB RAID-10 <br>RAM内存: 2 GB <br>CPU处理器: 3x Intel Xeon <br>Transfer流量: 2 TB/mo <br>连接速度: 1 Gigabit <br>Multiple locations</td><td>$99.99/年</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=45" target="_blank" rel="noopener">点击进入</a></td></tr><tr><td><em>160G KVM – PROMO</em> <br> SSD硬盘: 160 GB RAID-10<br>RAM内存: 8 GB<br>CPU处理器: 5x Intel Xeon<br>Transfer流量: 4 TB/mo<br>连接速度: 1 Gigabit<br>Multiple locations</td><td>$39.99/月</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=47" target="_blank" rel="noopener">点击进入</a></td></tr><tr><td><em>3200G KVM – PROMO</em> <br> SSD硬盘: 320 GB RAID-10<br>RAM内存: 16 GB<br>CPU处理器: 6x Intel Xeon<br>Transfer流量: 5 TB/mo<br>连接速度: 1 Gigabit<br>Multiple locations</td><td>$79.99/月</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=48" target="_blank" rel="noopener">点击进入</a></td></tr></tbody></table><p>2.远程连接工具我一直用的是 <a href="https://www.vandyke.com/products/securecrt/" target="_blank" rel="noopener">SecureCRT</a> , 当然你也可以使用其它的 SSH 工具。</p><h1 id="开始搭建-IPsec-L2TP-VPN"><a href="#开始搭建-IPsec-L2TP-VPN" class="headerlink" title="开始搭建 IPsec/L2TP VPN"></a>开始搭建 IPsec/L2TP VPN</h1><h2 id="获取搬瓦工服务器的ip，端口，账号密码"><a href="#获取搬瓦工服务器的ip，端口，账号密码" class="headerlink" title="获取搬瓦工服务器的ip，端口，账号密码"></a>获取搬瓦工服务器的ip，端口，账号密码</h2><p>有了<a href="https://bwh88.net/aff.php?aff=32874" target="_blank">搬瓦工</a>服务器的IP地址和端口<br>我们就可以连接了：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/pic1.png" alt="搭建 IPsec/L2TP VPN" title="">                </div>                <div class="image-caption">搭建 IPsec/L2TP VPN</div>            </figure><p>账号是root，密码可以在这里获取：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/pic2.png" alt="搭建 IPsec/L2TP VPN" title="">                </div>                <div class="image-caption">搭建 IPsec/L2TP VPN</div>            </figure><h2 id="使用-SSH-工具连接到服务器"><a href="#使用-SSH-工具连接到服务器" class="headerlink" title="使用 SSH 工具连接到服务器"></a>使用 SSH 工具连接到服务器</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/pic3.png" alt="搭建 IPsec/L2TP VPN" title="">                </div>                <div class="image-caption">搭建 IPsec/L2TP VPN</div>            </figure><h2 id="使用-IPsec-L2TP-脚本搭建"><a href="#使用-IPsec-L2TP-脚本搭建" class="headerlink" title="使用 IPsec/L2TP 脚本搭建"></a>使用 IPsec/L2TP 脚本搭建</h2><p>在这里感谢<a href="https://github.com/hwdsl2" target="_blank" rel="noopener">hwdsl2</a>提供的脚本，我们在连接到服务器后使用如下命令：</p><p>安装 wget ：</p><pre><code>yum install wget</code></pre><p>使用脚本：</p><pre><code>wget https://git.io/vpnsetup-centos -O vpnsetup.sh &amp;&amp; sudo sh vpnsetup.sh</code></pre><p>稍等一会安装成功会提供一个 VPN 需要的信息：</p><pre><code>Server IP: xxx.xx.xx.xxIPsec PSK: xxxxUsername: xxxxPassword: xxxx</code></pre><p>这时候就搭建成功了，快吧？</p><h1 id="windowns-7-使用IPsec-L2TP-VPN"><a href="#windowns-7-使用IPsec-L2TP-VPN" class="headerlink" title="windowns 7 使用IPsec/L2TP VPN"></a>windowns 7 使用IPsec/L2TP VPN</h1><h2 id="设置VPN连接"><a href="#设置VPN连接" class="headerlink" title="设置VPN连接"></a>设置VPN连接</h2><pre><code>单击开始菜单，选择控制面板。进入 网络和Internet 部分。单击 网络与共享中心。单击 设置新的连接或网络。选择 连接到工作区，然后单击 下一步。单击 使用我的Internet连接 (VPN)。在 Internet地址 字段中输入你的 VPN 服务器 IP。在 目标名称 字段中输入任意内容。选中 现在不连接；仅进行设置以便稍后连接 复选框。单击 下一步。在 用户名 字段中输入你的 VPN 用户名。在 密码 字段中输入你的 VPN 密码。选中 记住此密码 复选框。单击 创建，然后单击 关闭 按钮。返回 网络与共享中心。单击左侧的 更改适配器设置。右键单击新创建的 VPN 连接，并选择 属性。单击 选项 选项卡，取消选中 包括Windows登录域 复选框。单击 安全 选项卡，从 VPN 类型 下拉菜单中选择 &quot;使用 IPsec 的第 2 层隧道协议 (L2TP/IPSec)&quot;。单击 允许使用这些协议。确保选中 &quot;质询握手身份验证协议 (CHAP)&quot; 复选框。单击 高级设置 按钮。单击 使用预共享密钥作身份验证 并在 密钥 字段中输入你的 VPN IPsec PSK。单击 确定 关闭 高级设置。单击 确定 保存 VPN 连接的详细信息。</code></pre><h2 id="添加注册表"><a href="#添加注册表" class="headerlink" title="添加注册表"></a>添加注册表</h2><p>新建一个TXT文件，输入以下内容：</p><pre><code>Windows Registry Editor Version 5.00[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\services\RasMan\Parameters]&quot;ProhibitIpSec&quot;=dword:00000000[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\PolicyAgent]&quot;AssumeUDPEncapsulationContextOnSendRule&quot;=dword:00000002</code></pre><p>另存为.reg格式的文件，然后双击。</p><h2 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h2><p>将以下服务全部设置为自动启用，要不然会连接不成功：</p><pre><code>IPsec Policy AgentRouting and Remote AccessRemote Access Auto Connection ManagerRemote Access Connection ManagerSecure Socket Tunneling Protocol Service</code></pre><h2 id="重启电脑后连接"><a href="#重启电脑后连接" class="headerlink" title="重启电脑后连接"></a>重启电脑后连接</h2><p>重启电脑后，点击右下角的网络连接，双击VPN连接，即可成功连接：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/pic5.png" alt="搭建 IPsec/L2TP VPN" title="">                </div>                <div class="image-caption">搭建 IPsec/L2TP VPN</div>            </figure><h2 id="连接效果"><a href="#连接效果" class="headerlink" title="连接效果"></a>连接效果</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/pic6.png" alt="搭建 IPsec/L2TP VPN" title="">                </div>                <div class="image-caption">搭建 IPsec/L2TP VPN</div>            </figure><h2 id="iPhone-iPad-使用IPsec-L2TP-VPN"><a href="#iPhone-iPad-使用IPsec-L2TP-VPN" class="headerlink" title="iPhone/iPad 使用IPsec/L2TP VPN"></a>iPhone/iPad 使用IPsec/L2TP VPN</h2><pre><code>进入设置 -&gt; 通用 -&gt; VPN。单击 添加VPN配置...。单击 类型 。选择 L2TP 并返回。在 描述 字段中输入任意内容。在 服务器 字段中输入你的 VPN 服务器 IP。在 帐户 字段中输入你的 VPN 用户名。在 密码 字段中输入你的 VPN 密码。在 密钥 字段中输入你的 VPN IPsec PSK。启用 发送所有流量 选项。单击右上角的 存储。启用 VPN 连接。</code></pre><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/pic7.jpg" alt="搭建 IPsec/L2TP VPN" title="">                </div>                <div class="image-caption">搭建 IPsec/L2TP VPN</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/pic8.png" alt="搭建 IPsec/L2TP VPN" title="">                </div>                <div class="image-caption">搭建 IPsec/L2TP VPN</div>            </figure><p>其它客户端连接方式请参考：<a href="https://github.com/hwdsl2/setup-ipsec-vpn/blob/master/docs/clients-zh.md" target="_blank" rel="noopener">配置 IPsec/L2TP VPN 客户端</a></p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://github.com/hwdsl2/setup-ipsec-vpn" target="_blank" rel="noopener">IPsec VPN 服务器一键安装脚本</a></p><p><a href="https://moshuqi.github.io/2017/07/20/%E8%87%AA%E5%B7%B1%E6%90%AD%E5%BB%BAVPN%E6%9C%8D%E5%8A%A1%E5%99%A8/" target="_blank" rel="noopener">自己搭建VPN服务器</a></p><p><a href="https://wistbean.github.io/2018/06/10/banwagong-vpn">使用搬瓦工快速搭建自己的VPN</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="vpn" scheme="https://wistbean.github.io/categories/vpn/"/>
    
      <category term="搬瓦工" scheme="https://wistbean.github.io/categories/vpn/%E6%90%AC%E7%93%A6%E5%B7%A5/"/>
    
    
      <category term="vpn搭建" scheme="https://wistbean.github.io/tags/vpn%E6%90%AD%E5%BB%BA/"/>
    
      <category term="搬瓦工搭建vpn" scheme="https://wistbean.github.io/tags/%E6%90%AC%E7%93%A6%E5%B7%A5%E6%90%AD%E5%BB%BAvpn/"/>
    
      <category term="IPsec/L2TP" scheme="https://wistbean.github.io/tags/IPsec-L2TP/"/>
    
  </entry>
  
  <entry>
    <title>通过互联网赚取你的第一桶金</title>
    <link href="https://wistbean.github.io/make-money.html"/>
    <id>https://wistbean.github.io/make-money.html</id>
    <published>2018-08-09T17:45:26.000Z</published>
    <updated>2018-12-27T13:46:51.596Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=3&id=1370566899&auto=1&height=66"></iframe><h1 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h1><p><a href="https://wistbean.github.io/make-money-on-the-internet.html">通过互联网赚钱的 9 种渠道</a></p><h1 id="肯定会电台相关"><a href="#肯定会电台相关" class="headerlink" title="肯定会电台相关"></a>肯定会电台相关</h1><p><a href="https://wistbean.github.io/categories/%E8%82%AF%E5%AE%9A%E4%BC%9A%E7%94%B5%E5%8F%B0/">肯定会电台</a><br><a href="https://wistbean.github.io/podcast.xml">肯定会电台RSS订阅</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="podcast" scheme="https://wistbean.github.io/categories/podcast/"/>
    
      <category term="肯定会电台" scheme="https://wistbean.github.io/categories/podcast/%E8%82%AF%E5%AE%9A%E4%BC%9A%E7%94%B5%E5%8F%B0/"/>
    
      <category term="互联网" scheme="https://wistbean.github.io/categories/podcast/%E8%82%AF%E5%AE%9A%E4%BC%9A%E7%94%B5%E5%8F%B0/%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
    
      <category term="肯定会电台" scheme="https://wistbean.github.io/tags/%E8%82%AF%E5%AE%9A%E4%BC%9A%E7%94%B5%E5%8F%B0/"/>
    
      <category term="互联网" scheme="https://wistbean.github.io/tags/%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
      <category term="赚钱" scheme="https://wistbean.github.io/tags/%E8%B5%9A%E9%92%B1/"/>
    
  </entry>
  
  <entry>
    <title>你的个人隐私被泄露了，咋办？</title>
    <link href="https://wistbean.github.io/personal-data.html"/>
    <id>https://wistbean.github.io/personal-data.html</id>
    <published>2018-08-09T17:45:26.000Z</published>
    <updated>2018-12-27T13:46:48.008Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>        <div id="aplayer-YvMnihVJ" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-YvMnihVJ"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "你的个人隐私被泄露了，咋办？",              author: "wistbean",              url: "/images/39.mp3",              pic: "",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><h1 id="内容概要"><a href="#内容概要" class="headerlink" title="内容概要"></a>内容概要</h1><h2 id="个人隐私泄露现象"><a href="#个人隐私泄露现象" class="headerlink" title="个人隐私泄露现象"></a>个人隐私泄露现象</h2><h3 id="微博被自动关注了不认识的账号"><a href="#微博被自动关注了不认识的账号" class="headerlink" title="微博被自动关注了不认识的账号"></a>微博被自动关注了不认识的账号</h3><h3 id="淘宝自动收藏了商品"><a href="#淘宝自动收藏了商品" class="headerlink" title="淘宝自动收藏了商品"></a>淘宝自动收藏了商品</h3><h3 id="老是收到垃圾短信"><a href="#老是收到垃圾短信" class="headerlink" title="老是收到垃圾短信"></a>老是收到垃圾短信</h3><h3 id="QQ无缘无故进了陌生群"><a href="#QQ无缘无故进了陌生群" class="headerlink" title="QQ无缘无故进了陌生群"></a>QQ无缘无故进了陌生群</h3><h2 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h2><h3 id="北京瑞智华胜公司窃取-30-亿条个人信息，非法牟利千万元"><a href="#北京瑞智华胜公司窃取-30-亿条个人信息，非法牟利千万元" class="headerlink" title="北京瑞智华胜公司窃取 30 亿条个人信息，非法牟利千万元"></a>北京瑞智华胜公司窃取 30 亿条个人信息，非法牟利千万元</h3><h3 id="阿里巴巴安全部协助警方破获了一起数据窃取案件"><a href="#阿里巴巴安全部协助警方破获了一起数据窃取案件" class="headerlink" title="阿里巴巴安全部协助警方破获了一起数据窃取案件"></a>阿里巴巴安全部协助警方破获了一起数据窃取案件</h3><h2 id="我们的信息怎么被泄露的呢？"><a href="#我们的信息怎么被泄露的呢？" class="headerlink" title="我们的信息怎么被泄露的呢？"></a>我们的信息怎么被泄露的呢？</h2><h3 id="这些公司和运营商们合作中，截取到了用户的-cookie-权限"><a href="#这些公司和运营商们合作中，截取到了用户的-cookie-权限" class="headerlink" title="这些公司和运营商们合作中，截取到了用户的 cookie 权限"></a>这些公司和运营商们合作中，截取到了用户的 cookie 权限</h3><h4 id="cookie"><a href="#cookie" class="headerlink" title="cookie"></a>cookie</h4><h5 id="用户上网过程中都会产生cookie"><a href="#用户上网过程中都会产生cookie" class="headerlink" title="用户上网过程中都会产生cookie"></a>用户上网过程中都会产生cookie</h5><h6 id="网站辨别用户身份而存储在用户本地电脑的数据"><a href="#网站辨别用户身份而存储在用户本地电脑的数据" class="headerlink" title="网站辨别用户身份而存储在用户本地电脑的数据"></a>网站辨别用户身份而存储在用户本地电脑的数据</h6><p>####### 记录用户凭证</p><p>####### 记录用户上网行为</p><h3 id="数据"><a href="#数据" class="headerlink" title="数据"></a>数据</h3><h4 id="上网行为"><a href="#上网行为" class="headerlink" title="上网行为"></a>上网行为</h4><h4 id="在登录过的网站中的账号密码"><a href="#在登录过的网站中的账号密码" class="headerlink" title="在登录过的网站中的账号密码"></a>在登录过的网站中的账号密码</h4><h3 id="谋取利润"><a href="#谋取利润" class="headerlink" title="谋取利润"></a>谋取利润</h3><h4 id="导粉"><a href="#导粉" class="headerlink" title="导粉"></a>导粉</h4><h4 id="刷量"><a href="#刷量" class="headerlink" title="刷量"></a>刷量</h4><h4 id="恶意推广"><a href="#恶意推广" class="headerlink" title="恶意推广"></a>恶意推广</h4><h2 id="我们应该警惕"><a href="#我们应该警惕" class="headerlink" title="我们应该警惕"></a>我们应该警惕</h2><h3 id="账号被盗"><a href="#账号被盗" class="headerlink" title="账号被盗"></a>账号被盗</h3><h3 id="个人财产安全"><a href="#个人财产安全" class="headerlink" title="个人财产安全"></a>个人财产安全</h3><h3 id="生活受到不必要的麻烦"><a href="#生活受到不必要的麻烦" class="headerlink" title="生活受到不必要的麻烦"></a>生活受到不必要的麻烦</h3><h3 id="信息被卖"><a href="#信息被卖" class="headerlink" title="信息被卖"></a>信息被卖</h3><h2 id="我们应该怎么做？"><a href="#我们应该怎么做？" class="headerlink" title="我们应该怎么做？"></a>我们应该怎么做？</h2><h3 id="别以为网络是虚拟的你就很安全"><a href="#别以为网络是虚拟的你就很安全" class="headerlink" title="别以为网络是虚拟的你就很安全"></a>别以为网络是虚拟的你就很安全</h3><h3 id="使用APP的时候非必要的权限不要开启"><a href="#使用APP的时候非必要的权限不要开启" class="headerlink" title="使用APP的时候非必要的权限不要开启"></a>使用APP的时候非必要的权限不要开启</h3><h3 id="开启的权限只在应用运行的时候授权"><a href="#开启的权限只在应用运行的时候授权" class="headerlink" title="开启的权限只在应用运行的时候授权"></a>开启的权限只在应用运行的时候授权</h3><h3 id="密码不要都设置成一样的，也不要设置的过于简单-防止被人撞库和暴力破解"><a href="#密码不要都设置成一样的，也不要设置的过于简单-防止被人撞库和暴力破解" class="headerlink" title="密码不要都设置成一样的，也不要设置的过于简单,防止被人撞库和暴力破解"></a>密码不要都设置成一样的，也不要设置的过于简单,防止被人撞库和暴力破解</h3><h4 id="推荐使用密码管理器lastpass"><a href="#推荐使用密码管理器lastpass" class="headerlink" title="推荐使用密码管理器lastpass"></a>推荐使用密码管理器lastpass</h4><h5 id="https-www-lastpass-com-zh"><a href="#https-www-lastpass-com-zh" class="headerlink" title="https://www.lastpass.com/zh"></a><a href="https://www.lastpass.com/zh" target="_blank" rel="noopener">https://www.lastpass.com/zh</a></h5><h5 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h5><h5 id="设置主密码"><a href="#设置主密码" class="headerlink" title="设置主密码"></a>设置主密码</h5><h3 id="天下没有免费的午餐，免费的WIFI不要随便连"><a href="#天下没有免费的午餐，免费的WIFI不要随便连" class="headerlink" title="天下没有免费的午餐，免费的WIFI不要随便连"></a>天下没有免费的午餐，免费的WIFI不要随便连</h3><h3 id="在网上尽量用昵称，能不填真实信息就不填真实信息"><a href="#在网上尽量用昵称，能不填真实信息就不填真实信息" class="headerlink" title="在网上尽量用昵称，能不填真实信息就不填真实信息"></a>在网上尽量用昵称，能不填真实信息就不填真实信息</h3><h3 id="手机拍照关掉定位功能，因为你如果没关掉的话，发给别人看的照片人家能清楚的知道你是在哪里拍的"><a href="#手机拍照关掉定位功能，因为你如果没关掉的话，发给别人看的照片人家能清楚的知道你是在哪里拍的" class="headerlink" title="手机拍照关掉定位功能，因为你如果没关掉的话，发给别人看的照片人家能清楚的知道你是在哪里拍的"></a>手机拍照关掉定位功能，因为你如果没关掉的话，发给别人看的照片人家能清楚的知道你是在哪里拍的</h3><h4 id="iphone用户在设置–隐私–定位服务–相机–关闭"><a href="#iphone用户在设置–隐私–定位服务–相机–关闭" class="headerlink" title="iphone用户在设置–隐私–定位服务–相机–关闭"></a>iphone用户在设置–隐私–定位服务–相机–关闭</h4><h3 id="对不太信任的软件使用虚拟机运行"><a href="#对不太信任的软件使用虚拟机运行" class="headerlink" title="对不太信任的软件使用虚拟机运行"></a>对不太信任的软件使用虚拟机运行</h3><h3 id="搭建个VPN代理访问"><a href="#搭建个VPN代理访问" class="headerlink" title="搭建个VPN代理访问"></a>搭建个VPN代理访问</h3><h3 id="不要贪小便宜，办理正规的宽带"><a href="#不要贪小便宜，办理正规的宽带" class="headerlink" title="不要贪小便宜，办理正规的宽带"></a>不要贪小便宜，办理正规的宽带</h3><h1 id="肯定会电台相关"><a href="#肯定会电台相关" class="headerlink" title="肯定会电台相关"></a>肯定会电台相关</h1><p><a href="https://wistbean.github.io/categories/%E8%82%AF%E5%AE%9A%E4%BC%9A%E7%94%B5%E5%8F%B0/">肯定会电台</a><br><a href="https://wistbean.github.io/podcast.xml">肯定会电台RSS订阅</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="podcast" scheme="https://wistbean.github.io/categories/podcast/"/>
    
      <category term="肯定会电台" scheme="https://wistbean.github.io/categories/podcast/%E8%82%AF%E5%AE%9A%E4%BC%9A%E7%94%B5%E5%8F%B0/"/>
    
      <category term="互联网" scheme="https://wistbean.github.io/categories/podcast/%E8%82%AF%E5%AE%9A%E4%BC%9A%E7%94%B5%E5%8F%B0/%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
    
      <category term="肯定会电台" scheme="https://wistbean.github.io/tags/%E8%82%AF%E5%AE%9A%E4%BC%9A%E7%94%B5%E5%8F%B0/"/>
    
      <category term="互联网" scheme="https://wistbean.github.io/tags/%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
      <category term="个人隐私" scheme="https://wistbean.github.io/tags/%E4%B8%AA%E4%BA%BA%E9%9A%90%E7%A7%81/"/>
    
  </entry>
  
  <entry>
    <title>找到你要的资源，Google高级搜索技巧</title>
    <link href="https://wistbean.github.io/google-search.html"/>
    <id>https://wistbean.github.io/google-search.html</id>
    <published>2018-08-02T17:45:26.000Z</published>
    <updated>2018-12-27T13:46:49.883Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>        <div id="aplayer-LgJtbUJR" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-LgJtbUJR"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "找到你要的资源，Google高级搜索技巧",              author: "wistbean",              url: "/images/37.mp3",              pic: "",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><p>我发现有些朋友在使用 Google 的时候直接在搜索引擎输入关键词然后回车，这很方便，不过 Google 这个强大的搜索引擎有许多搜索技巧可以帮助我们精准的找到我们想要的资料。</p><p>给你一个同样的工具，有些人能搜索到想要的东西，有的人怎么搜索也搜索不到，就是因为他们不知道这其中的奥秘。</p><p>在我的知识星球里有球友问我有些资料是怎么样挖掘的？</p><p>我跟他说了下，一方面是环境原因，因为我经常分享一下文章啥的，就认识了些能人，有群，谈谈技术，分享些资料，这很正常的事。其实加入我的知识星球也是这个道理。另一方面就是获取信息的能力了，而 Google 的搜索技巧就是我获取想要知识的来源之一。</p><p>接下来就说说我常用的 Google 搜索技巧，希望也能帮助到你，不要花了点钱搭建了自己的v屁n，却浪费的 Google 这么好的资源。</p><h1 id="完全匹配搜索"><a href="#完全匹配搜索" class="headerlink" title="完全匹配搜索"></a>完全匹配搜索</h1><p>举个例子，如果你直接搜索 「苍老师作品」，那么你搜索到的内容不是完全匹配到的：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/g2.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>那么如果我们想要完全匹配搜索的话，使用双引号：「”苍老师作品”」,这时候得到的结果就是完全匹配的：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/g66.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h1 id="模糊匹配"><a href="#模糊匹配" class="headerlink" title="模糊匹配"></a>模糊匹配</h1><p>如果你想要搜索某些信息，但是你不能完整的记住想要搜索的关键内容，比如歌词，或者电影台词等，那么就可以通过模糊匹配的方式，使用「*」来代替你忘记的内容：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/g3.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h1 id="排除搜索"><a href="#排除搜索" class="headerlink" title="排除搜索"></a>排除搜索</h1><p>如果你想在google中搜索的结果不要某些网站或者关键词出现，那么你可以用「-」来剔除，比如这里不要让豆瓣出现：<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/g4.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></p><h1 id="在特定的网站内搜索"><a href="#在特定的网站内搜索" class="headerlink" title="在特定的网站内搜索"></a>在特定的网站内搜索</h1><p>可以通过 「site:」来指定我们想在特定的网站里面搜索相关的内容：<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/g5.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></p><p>所以这时候你知道为什么别人能很容易找到你找不到的大片了吧？</p><h1 id="特定文件类型搜索"><a href="#特定文件类型搜索" class="headerlink" title="特定文件类型搜索"></a>特定文件类型搜索</h1><p>我发现很多网民对个人信息隐私都不太关心，如果你通过特定的文件类型搜索加一些关键词，很容易发现有些信息早就被人泄露了，文件的特定搜索用「filetype:」+ 文件的类型，比如我在这里搜索「身份证相关excel文件」，往下翻你就会发现很多姓名和身份证暴露无遗了。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/g6.webp" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>当然filetype的用处不是让你搜索这些，你可以搜索一些 pdf 资源，有时候我就是通过这个搜索到一些不错的电子书。</p><p>Google的以图搜图也是很牛逼的，你可以去体验一下。</p><p>还有其它的比如 inurl 、 intile命令我就用的比较少。因为以上五个搜索技巧已经足够我搜索到我想要的内容了。</p><h1 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h1><p><a href="https://blog.csdn.net/u012946824/article/details/53185189" target="_blank" rel="noopener">最新常用的Google 高级搜索技巧</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="podcast" scheme="https://wistbean.github.io/categories/podcast/"/>
    
      <category term="肯定会电台" scheme="https://wistbean.github.io/categories/podcast/%E8%82%AF%E5%AE%9A%E4%BC%9A%E7%94%B5%E5%8F%B0/"/>
    
      <category term="互联网" scheme="https://wistbean.github.io/categories/podcast/%E8%82%AF%E5%AE%9A%E4%BC%9A%E7%94%B5%E5%8F%B0/%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
    
      <category term="肯定会电台" scheme="https://wistbean.github.io/tags/%E8%82%AF%E5%AE%9A%E4%BC%9A%E7%94%B5%E5%8F%B0/"/>
    
      <category term="互联网" scheme="https://wistbean.github.io/tags/%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
      <category term="Google" scheme="https://wistbean.github.io/tags/Google/"/>
    
  </entry>
  
  <entry>
    <title>编程人生中的两个小经验</title>
    <link href="https://wistbean.github.io/programing-experience.html"/>
    <id>https://wistbean.github.io/programing-experience.html</id>
    <published>2018-07-12T13:55:11.000Z</published>
    <updated>2018-09-08T18:24:09.155Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="怎么让自己比别人牛逼一点点？"><a href="#怎么让自己比别人牛逼一点点？" class="headerlink" title="怎么让自己比别人牛逼一点点？"></a>怎么让自己比别人牛逼一点点？</h1><p>其实说实话，现在不管是培训出身还是院校出身，现在开始去互联网公司上班，相对来说起步有一点晚了，工作也没有以往那么好找了。</p><p>不过你应该可以看到一个普遍的现象，就是现在大多的程序员在编程的时候，所借助的资源大部分来源于百度，CSDN博客，还有一些其它的论坛。 不是说这些不好，只是大部分质量参差不齐，有些博客抄来抄去，你很难去费很多时间精力去筛选，去辨别。</p><p>那么这个时候应该怎么办呢？最好的方式就是走比别人相对难一点点的路，怎么说呢？就比如别人在百度的时候，你已经花了点钱自己搭了个vpn上google搜索第一手资料，别人在看国内的博客的时候，你已经一边翻译一边看着官方文档，虽然很多英语都不懂，但是如果坚持一点一点坑下去的话，其实差距慢慢就拉开了。当别人还在把遇到的报错截图发给别人问怎么办的时候，你已经学会试着看看源代码别人是怎么写的。你会去github上pull跟自己最近水平相当的项目进行学习了等。</p><p>这以上举的例子要说明的就是：虽然起步比别人晚，但是不代表结果就是人家先到终点，别人在一小步一小步的走甚至停留在原地的时候，我们可以让自己的步伐跨的大一点，也就是提高自己的起点，当然刚开始很难，但是能够转变这种思维，一直坚持下去的话，到时候回头看的时候，才发现，原来你已经走了这么远了，而别人，还在原地。</p><h1 id="选择是很重要，但是要学会选择很难"><a href="#选择是很重要，但是要学会选择很难" class="headerlink" title="选择是很重要，但是要学会选择很难"></a>选择是很重要，但是要学会选择很难</h1><p>我们都知道，选择比努力重要，如果你一不小心选择错了方向，那么很可能就南辕北辙了，这是非常不值当的，如果能在对的方向努力下去，那么有一天才能收获你的果实。举个不恰当的例子：你去追一个女孩子，人家对你一点兴趣都没有，你一个劲的给对方自以为的感动，人家只会觉得很烦，离你越远越好。</p><p>所以选择是很重要的，你需要要有辨别能力，需要对信息有足够的敏感度，比如现在新手，想要开始学编程，从事互联网的事业，那么选择什么方向呢? 是Android，还是iOS，还是java，还是 python？ 如果这时候你没有一个好的选择，真的不同的努力结果差别会很大。</p><p>就拿 Android 和 python 来说，现在 Android 开发已经没有那么火了，为什么？市场已经很饱和了，而且现在Android对中高级的人才需要比较多，而如果你现在开始学Android，学个一两年，到时候可能你已经算是Android中级开发者了，可是人家不需要了。</p><p>而现在的人工智能，数据分析，区块链等都是趋势，这时候 python 借势火了一把，很多公司都需要 python 的人才了， 所以从现在来说，一个学习 Android，一个学习 python，一年后，谁更容易找到工作，谁更被需要？ 答案肯定显而易见了。</p><p>选择是很重要，但是要学会选择很难，因为你需要信息的敏感认知，而这些信息不是说你看书就能找到了，你需要有自己的圈子，有一个环境，有一个耳渲目染的地方，而这些，除了靠自己的人品之外，还需要自己多提升自己，打入更大的圈子，去学习，去交流。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="经验分享" scheme="https://wistbean.github.io/categories/%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="个人提升" scheme="https://wistbean.github.io/tags/%E4%B8%AA%E4%BA%BA%E6%8F%90%E5%8D%87/"/>
    
      <category term="编程" scheme="https://wistbean.github.io/tags/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="关于wistbean" scheme="https://wistbean.github.io/tags/%E5%85%B3%E4%BA%8Ewistbean/"/>
    
  </entry>
  
  <entry>
    <title>使用搬瓦工快速搭建自己的VPN</title>
    <link href="https://wistbean.github.io/banwagong-vpn.html"/>
    <id>https://wistbean.github.io/banwagong-vpn.html</id>
    <published>2018-06-10T09:06:26.000Z</published>
    <updated>2019-03-01T07:33:58.572Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="1-使用搬瓦工搭建自己的VPN"><a href="#1-使用搬瓦工搭建自己的VPN" class="headerlink" title="1.使用搬瓦工搭建自己的VPN"></a>1.使用搬瓦工搭建自己的VPN</h2><p>很多人想要使用 VPN ，不过去购买第三方的「VPN账号」除了不稳定外还怕不安全，有些第三方 VPN 会获取用户的数据做一些坏事，还特么限制网速，不能忍！</p><p>所以想要自己买一台服务器，然后搭建一个完全属于自己的 VPN ，稳定快速又安全！</p><p>那么就在这里教大家使用<a href="https://bwh88.net/aff.php?aff=32874" target="_blank">搬瓦工官网</a>（性价比很高的云服务器提供商）来快速的搭建自己的VPN。而且我还<br>会告诉大家<strong>怎么花比别人少的钱购买服务器</strong>，下文将会提到怎么获取优惠码，一般人很少知道的！</p><h2 id="2-使用搬瓦工搭建VPN前的准备"><a href="#2-使用搬瓦工搭建VPN前的准备" class="headerlink" title="2.使用搬瓦工搭建VPN前的准备"></a>2.使用搬瓦工搭建VPN前的准备</h2><ol><li><p>一台可以上网的电脑。</p></li><li><p>支付宝或者PayPal账号， 搬瓦工支持支付宝付款。</p></li></ol><h2 id="3-购买搬瓦工VPS云服务器"><a href="#3-购买搬瓦工VPS云服务器" class="headerlink" title="3.购买搬瓦工VPS云服务器"></a>3.购买搬瓦工VPS云服务器</h2><h3 id="3-1选择搬瓦工VPS服务器"><a href="#3-1选择搬瓦工VPS服务器" class="headerlink" title="3.1选择搬瓦工VPS服务器"></a>3.1选择搬瓦工VPS服务器</h3><table><thead><tr><th>搬瓦工配置</th><th>搬瓦工费用</th><th>优惠链接</th></tr></thead><tbody><tr><td><em>SPECIAL 40G KVM PROMO V3 - LOS ANGELES - CN2  </em> <br>  SSD硬盘: 40  GB RAID-10 <br> RAM内存: 2048   MB <br> CPU处理器: 1x Intel Xeon <br> Transfer流量: 2000  GB/月 <br> 连接速度: 1 Gigabit <br> 洛杉矶机房，CN2路线，使用中国的直线路线，速度加快</td><td>$27.99/季</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=58" target="_blank" rel="noopener">点击进入</a></td></tr><tr><td><em>SPECIAL 20G KVM PROMO V3 - LOS ANGELES - CN2 </em> <br>  SSD硬盘: 20 GB RAID-10 <br> RAM内存: 1024  MB <br> CPU处理器: 1x Intel Xeon <br> Transfer流量: 1000  GB/月 <br> 连接速度: 1 Gigabit <br> 洛杉矶机房，CN2路线，使用中国的直线路线，速度加快</td><td>$29.99 /半年</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=57" target="_blank" rel="noopener">点击进入</a></td></tr><tr><td><em>80G KVM – PROMO</em> <br> SSD硬盘: 80 GB RAID-10<br>RAM内存: 4 GB<br>CPU处理器: 4x Intel Xeon<br>Transfer流量: 3 TB/mo<br>连接速度: 1 Gigabit<br>Multiple locations</td><td>$19.99/月</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=46" target="_blank" rel="noopener">点击进入</a></td></tr><tr><td><em>20G KVM – PROMO</em> <br> SSD硬盘: 20 GB RAID-10 <br>RAM内存: 1024 MB <br>CPU处理器: 2x Intel Xeon <br>Transfer流量: 1 TB/mo <br>连接速度: 1 Gigabit <br>Multiple locations</td><td>$49.99/年</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=44" target="_blank" rel="noopener">点击进入</a></td></tr><tr><td><em>40G KVM – PROMO</em> <br> SSD硬盘: 40 GB RAID-10 <br>RAM内存: 2 GB <br>CPU处理器: 3x Intel Xeon <br>Transfer流量: 2 TB/mo <br>连接速度: 1 Gigabit <br>Multiple locations</td><td>$99.99/年</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=45" target="_blank" rel="noopener">点击进入</a></td></tr><tr><td><em>160G KVM – PROMO</em> <br> SSD硬盘: 160 GB RAID-10<br>RAM内存: 8 GB<br>CPU处理器: 5x Intel Xeon<br>Transfer流量: 4 TB/mo<br>连接速度: 1 Gigabit<br>Multiple locations</td><td>$39.99/月</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=47" target="_blank" rel="noopener">点击进入</a></td></tr><tr><td><em>3200G KVM – PROMO</em> <br> SSD硬盘: 320 GB RAID-10<br>RAM内存: 16 GB<br>CPU处理器: 6x Intel Xeon<br>Transfer流量: 5 TB/mo<br>连接速度: 1 Gigabit<br>Multiple locations</td><td>$79.99/月</td><td><a href="https://www.bwh88.net/aff.php?aff=32874&amp;pid=48" target="_blank" rel="noopener">点击进入</a></td></tr></tbody></table><h3 id="3-2拿到搬瓦工优惠码"><a href="#3-2拿到搬瓦工优惠码" class="headerlink" title="3.2拿到搬瓦工优惠码"></a>3.2拿到搬瓦工优惠码</h3><p>当你进到这个页面的时候呢，别急着点击「Add to Cart」添加到购物车，这里面暗藏着一个优惠码，很多人不知道，使用浏览器查看源代码，chrome浏览器的话按F12，然后搜索「code」，你会发现有一个 「Try this promo code: xxxx 」，这个xxxx就是优惠码，你把他复制下来，待会有用。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/vpn4.png" alt="使用搬瓦工搭建VPN" title="">                </div>                <div class="image-caption">使用搬瓦工搭建VPN</div>            </figure><p>页面的 Location 就是选择服务器的地址，到时访问谷歌的时候会显示你当前访问的地址。好了，我们点击「Add to Cart」。</p><p>接下来，进入结算页面，我们刚才复制的优惠码就派上用场了，将你刚刚复制的优惠码复制进去然后点击 「Validate Code」，看！是不是优惠了！一般人不知道这种操作:</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/vpn5.png" alt="使用搬瓦工搭建VPN" title="">                </div>                <div class="image-caption">使用搬瓦工搭建VPN</div>            </figure><p>接着点击「CheckOut」完成付款即可。付款的时候选择 Alipay 就可以使用支付宝付款。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/vpn8.png" alt="使用搬瓦工搭建VPN" title="">                </div>                <div class="image-caption">使用搬瓦工搭建VPN</div>            </figure><h2 id="4-快速搭建搬瓦工VPN"><a href="#4-快速搭建搬瓦工VPN" class="headerlink" title="4.快速搭建搬瓦工VPN"></a>4.快速搭建搬瓦工VPN</h2><p>购买完毕后你就拥有一台你自己的服务器了，接着点击Services下的MyServices，可以看到你的服务器：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/vpn6.png" alt="使用搬瓦工搭建VPN" title="">                </div>                <div class="image-caption">使用搬瓦工搭建VPN</div>            </figure><p>我们点击「KiwiVM Control Panel」进入管理界面：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/vpn7.png" alt="使用搬瓦工搭建VPN" title="">                </div>                <div class="image-caption">使用搬瓦工搭建VPN</div>            </figure><p>可以看到你服务器的信息:</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/vpn9.png" alt="使用搬瓦工搭建VPN" title="">                </div>                <div class="image-caption">使用搬瓦工搭建VPN</div>            </figure><p>接着我们点击 「OpenVPN Server」：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/vpn10.png" alt="使用搬瓦工搭建VPN" title="">                </div>                <div class="image-caption">使用搬瓦工搭建VPN</div>            </figure><p>可能有些朋友在这里的时候发现没有 OpenVPN 这个菜单：<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/have-not-vpn.png" alt="openvpn" title="">                </div>                <div class="image-caption">openvpn</div>            </figure></p><p>那么这个时候可以访问：<a href="https://kiwivm.64clouds.com/preloader.php?load=/main-exec.php?mode=extras_openvpn" target="_blank" rel="noopener">搬瓦工一键安装OpenVPN</a></p><p>接着点击：「Install and configer OpenVPN Server」，搬瓦工会自动帮我们在服务器安装和配置，不需要自己手动敲命令了：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/vpn11.png" alt="使用搬瓦工搭建VPN" title="">                </div>                <div class="image-caption">使用搬瓦工搭建VPN</div>            </figure><p>等一会就搭建好VPN了，就问你快不？</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/vpn12.png" alt="使用搬瓦工搭建VPN" title="">                </div>                <div class="image-caption">使用搬瓦工搭建VPN</div>            </figure><h2 id="5-使用搬瓦工openVPN"><a href="#5-使用搬瓦工openVPN" class="headerlink" title="5.使用搬瓦工openVPN"></a>5.使用搬瓦工openVPN</h2><h3 id="PC端使用搬瓦工VPN"><a href="#PC端使用搬瓦工VPN" class="headerlink" title="PC端使用搬瓦工VPN"></a>PC端使用搬瓦工VPN</h3><p>首先我们下载我们的VPN文件所需的配置文件，点击「Download key Files」下载，然后再下载openVPN的客户端：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/vpn13.png" alt="使用搬瓦工搭建VPN" title="">                </div>                <div class="image-caption">使用搬瓦工搭建VPN</div>            </figure><p>接着将配置文件解压到openVPN客户端的config文件夹下：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/vpn14.png" alt="使用搬瓦工搭建VPN" title="">                </div>                <div class="image-caption">使用搬瓦工搭建VPN</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/vpn15.png" alt="使用搬瓦工搭建VPN" title="">                </div>                <div class="image-caption">使用搬瓦工搭建VPN</div>            </figure><p>接着再openvpn目录下的bin目录双击打开openvpn-gui，然后Connect连接，连接完成右下角的openVPN会成为绿色状态，然后就可以访问外网了，速度很快：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/vpn16.png" alt="使用搬瓦工搭建VPN" title="">                </div>                <div class="image-caption">使用搬瓦工搭建VPN</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/vpn17.png" alt="使用搬瓦工搭建VPN" title="">                </div>                <div class="image-caption">使用搬瓦工搭建VPN</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/vpn18.png" alt="使用搬瓦工搭建VPN" title="">                </div>                <div class="image-caption">使用搬瓦工搭建VPN</div>            </figure><h3 id="iPhone端使用搬瓦工VPN"><a href="#iPhone端使用搬瓦工VPN" class="headerlink" title="iPhone端使用搬瓦工VPN"></a>iPhone端使用搬瓦工VPN</h3><p>同样，手机也需要安装一个openVPN的客户端，不过你在中国区的 AppleStore 下载不到 openVPN 的，你需要注册一个美区的苹果账号，然后搜索 openVPN 下载：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/vpn20.png" alt="使用搬瓦工搭建VPN" title="">                </div>                <div class="image-caption">使用搬瓦工搭建VPN</div>            </figure><p>接着电脑端下载 iTunes ，打开 iTunes ，手机用数据线连接电脑，点击文件共享：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/vpn21.png" alt="使用搬瓦工搭建VPN" title="">                </div>                <div class="image-caption">使用搬瓦工搭建VPN</div>            </figure><p>将刚刚下载的vpn文件解压，然后添加到OpenVPN客户端：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/vpn22.png" alt="使用搬瓦工搭建VPN" title="">                </div>                <div class="image-caption">使用搬瓦工搭建VPN</div>            </figure><p>手机打开OpenVPN APP， 点击 + 这个按钮：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/vpn23.png" alt="使用搬瓦工搭建VPN" title="">                </div>                <div class="image-caption">使用搬瓦工搭建VPN</div>            </figure><p>然后就可以连接了：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/vpn24.png" alt="使用搬瓦工搭建VPN" title="">                </div>                <div class="image-caption">使用搬瓦工搭建VPN</div>            </figure><p>访问速度杠杠的：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/vpn25.png" alt="使用搬瓦工搭建VPN" title="">                </div>                <div class="image-caption">使用搬瓦工搭建VPN</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/vpn26.png" alt="使用搬瓦工搭建VPN" title="">                </div>                <div class="image-caption">使用搬瓦工搭建VPN</div>            </figure><h3 id="Android端使用搬瓦工VPN"><a href="#Android端使用搬瓦工VPN" class="headerlink" title="Android端使用搬瓦工VPN"></a>Android端使用搬瓦工VPN</h3><p>Android手机使用搬瓦工openVpn同上，下载openVpn App ，然后把配置文件传上去就行了。</p><h2 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h2><ul><li><a href="/banwagong-quick-build-ss.html">搬瓦工vps一键搭建ss并开启BBR代理加速科学上网，傻瓜式1分钟搞定</a></li><li><a href="/banwagong-15-1000G-vps.html">搬瓦工19美元服务器没货了，但提供了15美元1000GB的vps</a></li><li><a href="https://wistbean.github.io/ipsec,l2tp_vpn.html">CentOS快速搭建一个属于自己的IPsec/L2TP VPN</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="vpn" scheme="https://wistbean.github.io/categories/vpn/"/>
    
      <category term="搬瓦工" scheme="https://wistbean.github.io/categories/vpn/%E6%90%AC%E7%93%A6%E5%B7%A5/"/>
    
    
      <category term="搬瓦工" scheme="https://wistbean.github.io/tags/%E6%90%AC%E7%93%A6%E5%B7%A5/"/>
    
      <category term="vpn搭建" scheme="https://wistbean.github.io/tags/vpn%E6%90%AD%E5%BB%BA/"/>
    
      <category term="搬瓦工搭建vpn" scheme="https://wistbean.github.io/tags/%E6%90%AC%E7%93%A6%E5%B7%A5%E6%90%AD%E5%BB%BAvpn/"/>
    
  </entry>
  
  <entry>
    <title>我用过觉得很不错的Chrome插件</title>
    <link href="https://wistbean.github.io/chrome-extensions.html"/>
    <id>https://wistbean.github.io/chrome-extensions.html</id>
    <published>2017-11-19T06:56:54.000Z</published>
    <updated>2018-10-03T10:21:17.980Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>现在PC端的浏览器我只使用Chrome，他支持各种插件的扩展，还有调试的Developer Tools，速度快，界面简洁大方等等。让我用了就爱不释手了。<br>我猜80%的程序员都用Chrome的吧。而我接下来推荐你的这些插件，是我用过后真心觉得不错的，如果你对这些插件使用熟悉了，那我觉得应该会对你的<br>使用效率有很大的提升。</p><p>可以通过访问 <a href="https://Chrome.google.com/webstore/category/extensions?hl=zh-CN" target="_blank" rel="noopener">chrome.google.com/webstore/category/extensions?hl=zh-CN</a><br>搜索添加插件，不过要科学上网哦！想要科学上网可以到这里观看：<a href="https://www.wistbean.com/banwagong-vpn.html" target="_blank" rel="noopener">使用搬瓦工快速搭建自己的VPN</a></p><h1 id="Vimium"><a href="#Vimium" class="headerlink" title="Vimium"></a>Vimium</h1><p>这款插件的牛逼之处在于脱离鼠标，上网全程使用的是键盘，各种快捷键，可以通过快捷键上下移动网页，标签切换，快速定位链接，只要是你需要操作的，<br>都能通过快捷键快速操作！</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://owx1uvd7t.bkt.clouddn.com/11.png" alt="Vimium" title="">                </div>                <div class="image-caption">Vimium</div>            </figure><h1 id="Google文档、表格及幻灯片的Office"><a href="#Google文档、表格及幻灯片的Office" class="headerlink" title="Google文档、表格及幻灯片的Office"></a>Google文档、表格及幻灯片的Office</h1><p>你在网上看到word，ppt或者excel，你是不是第一步先下载到本地，然后打开相关的office软件查看呢？现在有他之后，你直接点击文件，就能直接在网页上查看，<br>也可以从中下载！</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://owx1uvd7t.bkt.clouddn.com/unnamed.png" alt="google office" title="">                </div>                <div class="image-caption">google office</div>            </figure><h1 id="Get-Postman"><a href="#Get-Postman" class="headerlink" title="Get Postman"></a>Get Postman</h1><p>这个插件我从下载后就一直使用，没有断过，因为它真的很不错，我的一些接口的调试，一些API的使用都是通过他来测试的，界面简洁，http的所有请求，以及返回的数据格式<br>设置，用户体验都非常不错，所以这款我是极力推荐的！</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://owx1uvd7t.bkt.clouddn.com/postman.jpg" alt="postman" title="">                </div>                <div class="image-caption">postman</div>            </figure><h1 id="jsonView"><a href="#jsonView" class="headerlink" title="jsonView"></a>jsonView</h1><p>当你去调用API的时候，获取到json数据，是不是一团糟，那么这个插件就可以格式化json数据，你就可以很直观的使用这些数据去解析了！<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://owx1uvd7t.bkt.clouddn.com/jsonview.jpg" alt="jsonView" title="">                </div>                <div class="image-caption">jsonView</div>            </figure></p><h1 id="Smart-TOC"><a href="#Smart-TOC" class="headerlink" title="Smart TOC"></a>Smart TOC</h1><p>当你查看网页内容的时候，特别是一些文档，如果他没有设置菜单栏，那么去看这些内容的时候就会很麻烦，因为你可能只是需要观看某个API，<br>难道每次都要去整个网页搜索吗？所以这个插件解决了这个问题，直接帮你生成菜单标题栏，点击后直接就可以跳到相应的位置！</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://owx1uvd7t.bkt.clouddn.com/toc.png" alt="Smart TOC" title="">                </div>                <div class="image-caption">Smart TOC</div>            </figure><h1 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h1><ul><li><a href="https://www.wistbean.com/tutorial-resources.html" target="_blank" rel="noopener">其实，你要的教程资源大多都在这两个地方，而且不用钱</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="资源推荐" scheme="https://wistbean.github.io/categories/%E8%B5%84%E6%BA%90%E6%8E%A8%E8%8D%90/"/>
    
    
      <category term="资源推荐" scheme="https://wistbean.github.io/tags/%E8%B5%84%E6%BA%90%E6%8E%A8%E8%8D%90/"/>
    
  </entry>
  
  <entry>
    <title>谈谈java中的面向对象编程思想</title>
    <link href="https://wistbean.github.io/object-oriented-programming.html"/>
    <id>https://wistbean.github.io/object-oriented-programming.html</id>
    <published>2017-09-17T07:26:03.000Z</published>
    <updated>2018-11-02T08:52:35.455Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="java对象"><a href="#java对象" class="headerlink" title="java对象"></a>java对象</h1><p>英语：Object-oriented programming，缩写：OOP；</p><p>我们开发的程序是给用户使用的，而我们的程序是使用对象来完成产生的。对象可以看成是对问题的描述的一种解决方案，它与问题空间之间一一映射。也就是<strong>将问题抽取成为对象集合</strong>。</p><p>在java中以class关键字来定义类的对象，类包含了元素和功能，是一种<strong>引用类型</strong>，和Int、Float等类型是一样的道理，只不过Int、Float等这些基本类型是java内置了的，所以我们可以拿来即用，而我们自定义的对象需要我们进行实例化后使用。</p><h1 id="java面向对象的服务提供者"><a href="#java面向对象的服务提供者" class="headerlink" title="java面向对象的服务提供者"></a>java面向对象的服务提供者</h1><p>我们可以将对象看作服务提供者，比如手机这个对象，我们可以用它来聊天，打开闪光灯，砸核桃等。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/oop1.png" alt="OOP 面向对象" title="">                </div>                <div class="image-caption">OOP 面向对象</div>            </figure><p>当每个对象都有各自独特的服务的时候，我们在使用的时候就很方便高效了，我们知道要实现什么功能，就拿什么对象来使用，如果我们对多个对象的各个方面都“组合”的很好的话，那么对代码来说是<strong>高内聚</strong>的，我们都约定俗成开发程序高内聚是我们追求你之一。</p><h1 id="java面向对象的封装"><a href="#java面向对象的封装" class="headerlink" title="java面向对象的封装"></a>java面向对象的封装</h1><p>假设在合作开发的时候，有人负责创建类来提供服务，有人收集使用类来快速实现程序开发，我们把第一种人暂且叫类（服务）创建者，第二种人叫做使用服务（类）者。</p><p>那么在这种情况下，创建者对自己的类只需要暴露必需的功能给使用者就可以了，使用者无需关心创建者是怎么样实现类的细节，拿来用就好了。这样创建者会对比较“脆弱”的代码进行封装，使用者无法触及，防止使用者随意修改，减少了bug的产生，还有就是创建者对封装的这些代码修改不会对使用者造成影响，比如类创建者在一开始创建类的时候某功能写的简单了，后来为了提高性能，那么修改这部分代码，实际上对使用者是毫无影响的。</p><p>java用private关键字来限定只有类创建者和类内部方法可以使用，其它人都无法使用。</p><p>如果是使用public修饰的话就相当于完全暴露了，任何人都可以使用。</p><p>还有protected是让继承的子类可以使用，但是不能使用父类被private修饰的属性。</p><p>默认不指定修饰的时候，同一包下的其它成员都可以访问。</p><p>所以封装是有必要的，在这种分离的情况下，提高了安全性。</p><h1 id="java对象组合"><a href="#java对象组合" class="headerlink" title="java对象组合"></a>java对象组合</h1><p>一个对象含有另一个对象，这就是组合。 比如手机这个对象含有相机对象，我们创建了相机对象，可以内置于手机对象中，这样做的好处是使用对象间灵活高效的。</p><p><img src="/images/oop2.png" alt="OOP"></p><p>代码提现：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Phone</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Camera camera;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="java面向对象的继承"><a href="#java面向对象的继承" class="headerlink" title="java面向对象的继承"></a>java面向对象的继承</h1><p>当你发现对象之间存在诸多相似性的时候，并不需要每个都创建独立的对象，可以找出他们的相同点作为基类（父类），进而在衍生出差异的类（子类），这样子父类就包含子类所有共享的行为特性了，子类就以不同的实现方式存在。</p><p>关于继承可以在<a href="http://www.wistbean.com/java-extends.html/" title="Java 继承是什么龟" target="_blank" rel="noopener">Java 继承是什么龟</a>查看。</p><h1 id="java面向对象的多态"><a href="#java面向对象的多态" class="headerlink" title="java面向对象的多态"></a>java面向对象的多态</h1><p>狗可以称为动物，猫可以称为动物。多态在于你可以不在意具体对象类型而使用它们共同的属性：</p><p>代码提现：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Animal</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        System.out.print(<span class="string">"吃东西。。"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Dog</span> <span class="keyword">extends</span> <span class="title">Animal</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"吃骨头"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Cat</span> <span class="keyword">extends</span> <span class="title">Animal</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"吃鱼"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Dog dog = <span class="keyword">new</span> Dog();</span><br><span class="line">        Cat cat = <span class="keyword">new</span> Cat();</span><br><span class="line">        eatSome(dog);</span><br><span class="line">        eatSome(cat);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">eatSome</span><span class="params">(Animal animal)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        animal.eat();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">输出：</span><br><span class="line"></span><br><span class="line">吃骨头</span><br><span class="line">吃鱼</span><br></pre></td></tr></table></figure><p>在这里可以看到dog和cat向上转型为Animal。<strong>向上转型是安全的，向下转型却是危险的</strong>，例如将Animal转为它的子类，因为此刻Animal既不知道是Dog还是Cat，所以向下转型还需要专门指定对象，即<strong>强制转换</strong>。</p><p>更多关于多态可以参考：<a href="http://www.wistbean.com/blog/2015/07/22/java-polymorphic/" title="Java 多态可以吃吗？" target="_blank" rel="noopener">Java 多态可以吃吗？</a></p><h1 id="对象存储"><a href="#对象存储" class="headerlink" title="对象存储"></a>对象存储</h1><p>因为java是在运行时才能确定对象的多少，所以有了动态存储对象的<strong>集合</strong>，集合提供了不同的接口和行为，它们之间效率不同，应用场景不同：<a href="http://www.wistbean.com/blog/2015/07/26/java-collection/" title="Java 细数各种常见的集合" target="_blank" rel="noopener">Java 细数各种常见的集合</a></p><h1 id="对象生命周期"><a href="#对象生命周期" class="headerlink" title="对象生命周期"></a>对象生命周期</h1><p>对象的生成会占用内存资源的，所以需要销毁来释放内存资源，对象是在堆的内存池中动态创建的，java有一个专门的垃圾回收器，它知道对象在什么时候可以销毁，会自动的销毁从而释放资源且不会影响程序的正常运行。</p><h1 id="相关资料"><a href="#相关资料" class="headerlink" title="相关资料"></a>相关资料</h1><ul><li><a href="http://www.cnblogs.com/hellojava/archive/2013/02/27/2935450.html" target="_blank" rel="noopener">Java面向对象详解</a></li><li><a href="https://zhuanlan.zhihu.com/p/29422384" target="_blank" rel="noopener">我的专栏 谈谈java的面向对象</a></li><li><a href="http://wiki.jikexueyuan.com/project/java-interview-bible/OOP.html" target="_blank" rel="noopener">面向对象编程</a></li><li><a href="https://zh.wikipedia.org/zh-hans/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1" target="_blank" rel="noopener">面向对象程序设计</a></li><li><a href="https://www.zhihu.com/question/31021366" target="_blank" rel="noopener">什么是面向对象编程思想？</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Java" scheme="https://wistbean.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="https://wistbean.github.io/tags/Java/"/>
    
      <category term="面向对象" scheme="https://wistbean.github.io/tags/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    
      <category term="编程思想" scheme="https://wistbean.github.io/tags/%E7%BC%96%E7%A8%8B%E6%80%9D%E6%83%B3/"/>
    
  </entry>
  
  <entry>
    <title>02 在VirtualBox虚拟机安装配置CentOS系统</title>
    <link href="https://wistbean.github.io/install-centos.html"/>
    <id>https://wistbean.github.io/install-centos.html</id>
    <published>2017-04-02T09:01:58.000Z</published>
    <updated>2018-12-02T17:39:29.444Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>通过：<a href="/use-virtualbox-install-centos.html" title="01 创建CentOS虚拟机">01 创建CentOS虚拟机</a> 我们已经创建好了虚拟机，也下载好了CentOS7的镜像文件。那么接下来就开始在我们的虚拟机安装配置CentOS系统。</p><p>01 首先打开我们的虚拟机，选择我们创建好的虚拟机，然后点击设置–存储–添加虚拟光驱：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/2017-04-02-install-centos/installCentOS01.png" alt="VirtualBox" title="">                </div>                <div class="image-caption">VirtualBox</div>            </figure><p>02 点击选择磁盘：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/2017-04-02-install-centos/installCentOS02.png" alt="VirtualBox" title="">                </div>                <div class="image-caption">VirtualBox</div>            </figure><p>03 选择我们下载好的CentOS镜像文件：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/2017-04-02-install-centos/installCentOS03.png" alt="VirtualBox" title="">                </div>                <div class="image-caption">VirtualBox</div>            </figure><p>04 选择完之后，点击ok，再点击Virtual Box的启动按钮，就会引导读取我们选择的iso镜像文件：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/2017-04-02-install-centos/installCentOS04.png" alt="VirtualBox" title="">                </div>                <div class="image-caption">VirtualBox</div>            </figure><p>05 运行后我们就可以看到安装引导：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/2017-04-02-install-centos/installCentOS05.png" alt="VirtualBox" title="">                </div>                <div class="image-caption">VirtualBox</div>            </figure><p>06 我们选择 Install CentOS Linux7，然后按回车，骚等一会就会出现如下界面，我们选择English，当然你也可以选择中文，但是这里我选择English，毕竟学Linux还是要懂点英文的：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/2017-04-02-install-centos/installCentOS06.png" alt="VirtualBox" title="">                </div>                <div class="image-caption">VirtualBox</div>            </figure><p>07 选择完之后我们看到CentOS系统安装总览，分别有「LOCALIZATION(本地化安装)」、「SOFTWARE(软件安装)」、「SYSTEM(系统安装)」：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/2017-04-02-install-centos/installCentOS07.png" alt="VirtualBox" title="">                </div>                <div class="image-caption">VirtualBox</div>            </figure><blockquote><p>注意了，在虚拟机使用和我们自己的电脑之间，按住右边的Ctrl键可以对鼠标的事件进行切换，比如你在虚拟机中使用中，想用鼠标使用自己的电脑时，那么就按右边的Ctrl键来获取鼠标事件。</p></blockquote><h1 id="设置LOCALIZATION-本地化安装"><a href="#设置LOCALIZATION-本地化安装" class="headerlink" title="设置LOCALIZATION(本地化安装)"></a>设置LOCALIZATION(本地化安装)</h1><p>08.1 点击DATE&amp;TIME来设置系统时间，这里Region（地区）我们选择Asia（亚洲），城市选择shanghai，然后点击左上角的Done：</p><p><img src="/images/2017-04-02-install-centos/installCentOS08.png" alt="VirtualBox"></p><p>08.2 接下来我们点击LANGUAGE SUPPORT(语言支持)，我们可以根据自己的需求选择需要的语言安装包，这里我选择英语和中文，选择完点击左上角的Done：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/2017-04-02-install-centos/installCentOS09.png" alt="VirtualBox" title="">                </div>                <div class="image-caption">VirtualBox</div>            </figure><h1 id="设置SOFTWARE-软件安装"><a href="#设置SOFTWARE-软件安装" class="headerlink" title="设置SOFTWARE(软件安装)"></a>设置SOFTWARE(软件安装)</h1><p>09 INSTALLATION SOURCE 这个选项默认即可，接下来我们选择 SOFTWARE SELECTION, 这里面可以供我们选择软件包，因为我们把Linux作为服务器使用，所以在这里我们选择Server with GUI，因为这个环境包含了基础的服务设施和GUI界面，然后在右边可以根据需要选择软件环境：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/2017-04-02-install-centos/installCentOS10.png" alt="VirtualBox" title="">                </div>                <div class="image-caption">VirtualBox</div>            </figure><h1 id="设置SYSTEM-系统"><a href="#设置SYSTEM-系统" class="headerlink" title="设置SYSTEM(系统)"></a>设置SYSTEM(系统)</h1><p>10.1 选择 「INSTALLATION DESTINATION」 进行分区操作，在这里说明一下Linux的分区必须有 根分区（用“/”标识） 和 交换分区(用swap标识)，swap分区类似于Windows的虚拟内存概念。虽然Linux的必需分区为根分区和交换分区，但是我们在分区的时候可以根据我们的需要进行分区，不仅仅划分根分区和交换区：</p><ul><li>/  (根分区)</li><li>swap （交换分区）</li><li>/boot (存储系统内核和引导等信息)</li><li>/usr (存储应用软件安装信息)</li><li>/var (存储系统日志信息)</li></ul><p>在分区前还再说明一下Linux的分区命名规则：</p><p>一般有这样的命名：</p><blockquote><p>/dev/hdb2 、 /dev/sda1</p></blockquote><ul><li>/dev : 所有文件的存放目录</li><li>hd/sd ： 代表硬盘，hd是IDE硬盘，sd是SCSI硬盘。</li><li>b： 分区的第三个字母，代表的是在哪个硬盘上，如 /dev/hdb 就表示在第二个hd盘上， /dev/sda  就代表在第一个sd盘上。</li><li>2： 最后这个数字就代表的是分区，Linux在1~4代表主分区或者扩展分区，从5开始就代表逻辑分区，比如 /dev/hdb2/ 就代表在第二个hd盘上的第二个主分区或者扩展分区， /dev/sda6 就代表在第一个sd盘上的第二个逻辑分区。</li></ul><p>好了，我们了解好了分区后就点击「INSTALLATION DESTINATION」 ，可以看到我们之前创建好的100G的sda盘，我们在下面选择「I will configure partitioning」 来自定义分区：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/2017-04-02-install-centos/installCentOS11.png" alt="VirtualBox" title="">                </div>                <div class="image-caption">VirtualBox</div>            </figure><p>点击完Done之后会让我们选择分区方案，在这里我们选择 Standard partition（标准分区）：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/2017-04-02-install-centos/installCentOS12.png" alt="VirtualBox" title="">                </div>                <div class="image-caption">VirtualBox</div>            </figure><p>接下来开始分区，首先对根分区进行划分，点击下方的 + ， Mount Point选择根分区（“/”）,Desired Capacity(容量)输入20G：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/2017-04-02-install-centos/installCentOS13.png" alt="VirtualBox" title="">                </div>                <div class="image-caption">VirtualBox</div>            </figure><p>然后我们点击 Add mount point，可以看到我们建立了sda1这个根分区：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/2017-04-02-install-centos/installCentOS14.png" alt="VirtualBox" title="">                </div>                <div class="image-caption">VirtualBox</div>            </figure><p>接下来我们划分交换分区，点击下方的 + ，然后选择warp，这里输入4096M：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/2017-04-02-install-centos/installCentOS15.png" alt="VirtualBox" title="">                </div>                <div class="image-caption">VirtualBox</div>            </figure><p>然后以同样的方式划分：</p><ul><li>/boot (存储系统内核和引导等信息)</li><li>/usr (存储应用软件安装信息)</li><li>/var (存储系统日志信息)</li></ul><p>这里我给boot划分500M，usr划分20G，var划分30G，还有剩余的空间我们可以划分为“/mydata”,这里录入mydata，下面的Desired Capacity不需要填，会自动就剩余的空间划分给mydata：</p><p><img src="/images/2017-04-02-install-centos/installCentOS16.png" alt="VirtualBox"></p><p>至此，我们就把划分好分区了：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/2017-04-02-install-centos/installCentOS17.png" alt="VirtualBox" title="">                </div>                <div class="image-caption">VirtualBox</div>            </figure><p>点击完Done后我们点击Accept Cahnge：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/2017-04-02-install-centos/installCentOS18.png" alt="VirtualBox" title="">                </div>                <div class="image-caption">VirtualBox</div>            </figure><p>10.2 接下来我们对网络进行配置,KDUMP默认启用即可， 点击「NETWORK &amp; HOST NAME」，可以看到我们左侧有一块网卡，Ethernet是以太网，enpOs3是网卡的标识，右侧可以看到详细MAC信息和连接速率等信息，左下角可以输入主机名：</p><p><img src="/images/2017-04-02-install-centos/installCentOS19.png" alt="VirtualBox"></p><p>然后点击右上角的开关按钮来激活我们的网卡。点击Done。</p><h1 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h1><p>完成了以上的设置后，我们就点击右下角的 Begin Installation 按钮，开始安装到我们的磁盘啦。</p><p><img src="/images/2017-04-02-install-centos/installCentOS20.png" alt="VirtualBox"></p><p>在安装的过程中，我们开始对root账号进行密码设置：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/2017-04-02-install-centos/installCentOS21.png" alt="VirtualBox" title="">                </div>                <div class="image-caption">VirtualBox</div>            </figure><p>设置完密码点击done，当然你也可以继续创建账户，然后就是等待安装啦：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/2017-04-02-install-centos/installCentOS22.png" alt="VirtualBox" title="">                </div>                <div class="image-caption">VirtualBox</div>            </figure><p>经过一段时间的等待，我们的CentOS终于安装完成了：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/2017-04-02-install-centos/installCentOS23.png" alt="VirtualBox" title="">                </div>                <div class="image-caption">VirtualBox</div>            </figure><p>接下来我们点击右下角的Reboot按钮进行重启，重启后我们选择CentOS Linux：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/2017-04-02-install-centos/installCentOS24.png" alt="VirtualBox" title="">                </div>                <div class="image-caption">VirtualBox</div>            </figure><p>接下来我们需要同意协议，点击LICENSE,然后勾选accept：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/2017-04-02-install-centos/installCentOS25.png" alt="VirtualBox" title="">                </div>                <div class="image-caption">VirtualBox</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/2017-04-02-install-centos/installCentOS26.png" alt="VirtualBox" title="">                </div>                <div class="image-caption">VirtualBox</div>            </figure><p>点击Done之后，如果你在安装的过程中没有创建账户，那么在这个时候可以点击USE CREATION来对用户进行创建：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/2017-04-02-install-centos/installCentOS27.png" alt="VirtualBox" title="">                </div>                <div class="image-caption">VirtualBox</div>            </figure><p>创建完之后点击右下角的FINISH CONFIGURETION。</p><h1 id="CentOS安装完成了"><a href="#CentOS安装完成了" class="headerlink" title="CentOS安装完成了"></a>CentOS安装完成了</h1><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/2017-04-02-install-centos/installCentOS28.png" alt="VirtualBox" title="">                </div>                <div class="image-caption">VirtualBox</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/2017-04-02-install-centos/installCentOS30.png" alt="VirtualBox" title="">                </div>                <div class="image-caption">VirtualBox</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/2017-04-02-install-centos/installCentOS31.png" alt="VirtualBox" title="">                </div>                <div class="image-caption">VirtualBox</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/2017-04-02-install-centos/installCentOS32.png" alt="VirtualBox" title="">                </div>                <div class="image-caption">VirtualBox</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/2017-04-02-install-centos/installCentOS33.png" alt="VirtualBox" title="">                </div>                <div class="image-caption">VirtualBox</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/2017-04-02-install-centos/installCentOS29.png" alt="VirtualBox" title="">                </div>                <div class="image-caption">VirtualBox</div>            </figure><p>那么接下来的篇章会告诉你怎么基本使用CentOS，对系统目录进行了解，对CentOS有一个整体的认识。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Linux" scheme="https://wistbean.github.io/categories/Linux/"/>
    
    
      <category term="教程" scheme="https://wistbean.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Linux" scheme="https://wistbean.github.io/tags/Linux/"/>
    
      <category term="CentOS" scheme="https://wistbean.github.io/tags/CentOS/"/>
    
      <category term="VirtualBox" scheme="https://wistbean.github.io/tags/VirtualBox/"/>
    
      <category term="虚拟机" scheme="https://wistbean.github.io/tags/%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    
      <category term="配置" scheme="https://wistbean.github.io/tags/%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>01 使用 VirtualBox 创建 CentOS 虚拟机</title>
    <link href="https://wistbean.github.io/use-virtualbox-install-centos.html"/>
    <id>https://wistbean.github.io/use-virtualbox-install-centos.html</id>
    <published>2017-04-02T04:00:33.000Z</published>
    <updated>2018-12-02T17:26:55.221Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>这是 Linux 学习的第一篇，对于刚开始学习 Linux 的我们没必要直接马上将 Linux 装到我们电脑上，我们可以先在虚拟机中使用，等熟练到一定程度的时候，再将 Linux 安装到我们的电脑上也不迟。那么我们就先将 CentOS 虚拟机创建起来吧。</p><p>在看本篇文章之前你需要下载：</p><ul><li>VirtualBox虚拟机，地址：<a href="https://www.virtualbox.org/wiki/Downloads" target="_blank" rel="noopener">https://www.virtualbox.org/wiki/Downloads</a></li><li>CentOS7镜像文件，地址：<a href="http://mirrors.163.com/centos/7.3.1611/isos/x86_64/" target="_blank" rel="noopener">http://mirrors.163.com/centos/7.3.1611/isos/x86_64/</a></li></ul><blockquote><p>tips：CentOS7有4G大小，VirtualBox有117MB大小。CentOS7镜像文件将会在下一篇文章用到。</p></blockquote><h1 id="为什么使用VirtualBox虚拟机"><a href="#为什么使用VirtualBox虚拟机" class="headerlink" title="为什么使用VirtualBox虚拟机"></a>为什么使用VirtualBox虚拟机</h1><p>现在市面上比较流行的虚拟就有<a href="https://my.vmware.com/zh/web/vmware/downloads" target="_blank" rel="noopener">VMware</a>，<a href="https://www.virtualbox.org/wiki/Downloads" target="_blank" rel="noopener">VirtualBox</a>。由于VMware是收费的，而VirtualBox是开源免费的，就凭这一点，我们就选择使用VirtualBox了哈，当然除了开源免费外，它还要诸多优点的，比如它跨平台：可以运行在 Windows, Mac OS X 和 Linux/UNIX平台上，可以虚拟出我们常见系统等等，所以完全够我们使用。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/2017-04-02-use-virtualbox-install-centos/VirtualBox.png" alt="VirtualBox" title="">                </div>                <div class="image-caption">VirtualBox</div>            </figure><hr><h1 id="安装VirtualBox虚拟机"><a href="#安装VirtualBox虚拟机" class="headerlink" title="安装VirtualBox虚拟机"></a>安装VirtualBox虚拟机</h1><ol><li>双击运行我们下载好的VirtualBox虚拟机：</li></ol><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/2017-04-02-use-virtualbox-install-centos/install-vb01.png" alt="VirtualBox" title="">                </div>                <div class="image-caption">VirtualBox</div>            </figure><ol start="2"><li>点击next后，注意这里一般不选择默认的系统盘，我这里选择D盘：</li></ol><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/2017-04-02-use-virtualbox-install-centos/install-vb02.png" alt="VirtualBox" title="">                </div>                <div class="image-caption">VirtualBox</div>            </figure><ol start="3"><li>再点击next，next，yes后进行安装，安装过程中会弹出提示安装设备软件，我们选择安装：</li></ol><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/2017-04-02-use-virtualbox-install-centos/install-vb05.png" alt="VirtualBox" title="">                </div>                <div class="image-caption">VirtualBox</div>            </figure><ol start="4"><li>安装完成后运行VirtualBox：</li></ol><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/2017-04-02-use-virtualbox-install-centos/install-vb07.png" alt="VirtualBox" title="">                </div>                <div class="image-caption">VirtualBox</div>            </figure><hr><h1 id="创建虚拟系统"><a href="#创建虚拟系统" class="headerlink" title="创建虚拟系统"></a>创建虚拟系统</h1><ol><li>点击左上角的新建按钮，弹出对话框，名称输入「CentOS」，类型为Linux，版本为Red Hat（64bit）：</li></ol><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/2017-04-02-use-virtualbox-install-centos/create_sys01.png" alt="VirtualBox" title="">                </div>                <div class="image-caption">VirtualBox</div>            </figure><ol start="2"><li>点击下一步，选择虚拟内存大小，这里设置：（4096MB）4G：</li></ol><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/2017-04-02-use-virtualbox-install-centos/create_sys02.png" alt="VirtualBox" title="">                </div>                <div class="image-caption">VirtualBox</div>            </figure><ol start="3"><li>点击下一步，创建虚拟硬盘，我们选择 “现在创建虚拟硬盘” ，然后点击创建：</li></ol><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/2017-04-02-use-virtualbox-install-centos/create_sys03.png" alt="VirtualBox" title="">                </div>                <div class="image-caption">VirtualBox</div>            </figure><ol start="4"><li>点击创建之后，会让我们选择硬盘的类型，这里我们选择：VDI（VitrtualBox 磁盘映像）：</li></ol><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/2017-04-02-use-virtualbox-install-centos/create_sys04.png" alt="VirtualBox" title="">                </div>                <div class="image-caption">VirtualBox</div>            </figure><ol start="5"><li>设置硬盘的分配方式，这里我们选择：动态分配</li></ol><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/2017-04-02-use-virtualbox-install-centos/create_sys05.png" alt="VirtualBox" title="">                </div>                <div class="image-caption">VirtualBox</div>            </figure><ol start="6"><li>选择文件的位置和大小，我们先选择大小，这里设置为100GB：</li></ol><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/2017-04-02-use-virtualbox-install-centos/create_sys06.png" alt="VirtualBox" title="">                </div>                <div class="image-caption">VirtualBox</div>            </figure><ol start="7"><li>点击又上角的文件夹按钮，存放到你想放的位置上，这里我放在G:\vmdisk上：</li></ol><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/2017-04-02-use-virtualbox-install-centos/create_sys07.png" alt="VirtualBox" title="">                </div>                <div class="image-caption">VirtualBox</div>            </figure><ol start="8"><li>点击创建后，我们的虚拟机系统就创建完成了：</li></ol><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/2017-04-02-use-virtualbox-install-centos/create_sys08.png" alt="VirtualBox" title="">                </div>                <div class="image-caption">VirtualBox</div>            </figure><hr><p>我们已将将 CentOS 的虚拟机创建好了，那么下一章就开始对基于我们现在的虚拟机来安装 CentOS 系统和配置。所以你赶紧把 CentOS7 镜像文件下载好吧?坐等下一章我们一起安装！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Linux" scheme="https://wistbean.github.io/categories/Linux/"/>
    
    
      <category term="教程" scheme="https://wistbean.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Linux" scheme="https://wistbean.github.io/tags/Linux/"/>
    
      <category term="CentOS" scheme="https://wistbean.github.io/tags/CentOS/"/>
    
      <category term="VirtualBox" scheme="https://wistbean.github.io/tags/VirtualBox/"/>
    
      <category term="虚拟机" scheme="https://wistbean.github.io/tags/%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>Linux 学习启动篇</title>
    <link href="https://wistbean.github.io/start-learning-linux.html"/>
    <id>https://wistbean.github.io/start-learning-linux.html</id>
    <published>2017-03-31T09:25:18.000Z</published>
    <updated>2018-12-27T13:46:51.645Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>从这篇文章起，就意味着开始着手学习使用<a href="https://zh.wikipedia.org/zh/Linux" target="_blank" rel="noopener">Linux</a>系统了，虽然经常听到Linux操作系统，但是或许正在着手去操作使用的人还是少数的，甚至连什么是Linux都不知道的人也大有所在。那么这篇 「Linux学习启动篇」 将从0开始，首先了解Linux是干嘛的？能在Linux上做些什么事情？接下来再和我一起深入学习！</p><h2 id="1-什么是Linux"><a href="#1-什么是Linux" class="headerlink" title="1.什么是Linux"></a>1.什么是Linux</h2><p>Linux是一种自由和开放源代码的类<a href="https://zh.wikipedia.org/wiki/UNIX" target="_blank" rel="noopener">UNIX</a>操作系统。</p><p>Linux是自由开放源代码的，这个系统的内核是由<a href="https://zh.wikipedia.org/wiki/Linus_Torvalds" target="_blank" rel="noopener">「Linus Torvalds（中文名：林纳斯·托瓦兹）」</a>在1991年10月5日发布的，其实Linux本来指的是Linux内核本身，但是通常都用了「Linux内核」来称呼，而Linux就代表了 Linux内核 + 用户空间的应用程序 构成的完整操作系统。</p><p><img src="/images/625px-NewTux.svg.png" alt="Linux"></p><h2 id="2-开源协议"><a href="#2-开源协议" class="headerlink" title="2.开源协议"></a>2.开源协议</h2><p>Linux如此受欢迎的其中一个原因就是它开源，这意味着任何个人或者机构都可以很自由的使用Linux里面所有的源代码，你可以对它进行修改生成新的版本然后再发布出来成为你的东西。但是前提是遵循<a href="https://zh.wikipedia.org/wiki/GNU%E9%80%9A%E7%94%A8%E5%85%AC%E5%85%B1%E8%AE%B8%E5%8F%AF%E8%AF%81" target="_blank" rel="noopener">「GUN GPL协议」</a>。</p><p>GUN GPL(GUN General Public License)，通用公共许可协议，这是由<a href="https://zh.wikipedia.org/wiki/%E7%90%86%E6%9F%A5%E5%BE%B7%C2%B7%E6%96%AF%E6%89%98%E6%9B%BC" target="_blank" rel="noopener">理查德·斯托曼</a>发起的，许多自由软件和开放源码都采用了这个协议条款，任何个人或者机构使用基于GPL进行衍生发布时必须采用GPL协议许可，而且需要<strong>公开源代码</strong>。</p><h2 id="3-Linux使用领域"><a href="#3-Linux使用领域" class="headerlink" title="3.Linux使用领域"></a>3.Linux使用领域</h2><ul><li>服务器领域： Linux已经在服务器领域占了大半壁江山，随着开源软件的日益强大，Linux服务器操作系统已经越来越多人使用。应该很少人会用windows server了吧。</li></ul><ul><li>移动设备嵌入领域： Linux的低成本、强大的定制功能以及良好的移植性能，在智能手机、平板电脑等移动设备方面，Android手机就是Google开发的基于Linux平台的开源手机操作系统。现在市场上Android手机仍然是占了最大的移动操作系统份额。阿里云的YunOS系统也是基于Linux的，越来越多的系统都使用了Linux。</li></ul><ul><li>桌面领域：现在大多数在Windows平台上广泛使用的自由软件都有相应的Linux版本，现在Linux桌面系统的发展也是越来越多了，像国内的红旗Linux，深度Linux，还有你可能经常听到的Ubuntu系统，都是基于Linux的桌面操作系统。</li></ul><h2 id="4-Linux发行版"><a href="#4-Linux发行版" class="headerlink" title="4.Linux发行版"></a>4.Linux发行版</h2><p>Linux的发行版实在太多了，这里列举几个常见的发行版本。</p><p><a href="https://www.debian.org/" target="_blank" rel="noopener">Debian</a> GNU/Linux 7.0：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/1024px-Johndebian7.png" alt="debian" title="">                </div>                <div class="image-caption">debian</div>            </figure><p><a href="https://www.gentoo.org/" target="_blank" rel="noopener">Gentoo</a> Linux 12.0：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/1024px-Gentoo12.0.jpg" alt="Gentoo" title="">                </div>                <div class="image-caption">Gentoo</div>            </figure><p><a href="https://linuxmint.com/" target="_blank" rel="noopener">Linux Mint 14</a>：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/Cinnamon_1.6.7_Menu.png" alt="Linux Mint 14" title="">                </div>                <div class="image-caption">Linux Mint 14</div>            </figure><p><a href="https://getfedora.org/zh_CN/" target="_blank" rel="noopener">Fedora</a>：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/Fedora_20_GNOME.png" alt="Fedora" title="">                </div>                <div class="image-caption">Fedora</div>            </figure><p><a href="https://www.ubuntu.com/index_kylin" target="_blank" rel="noopener">Ubuntu</a>：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/Ubuntu_Desktop_12.10_Screenshot.png" alt="Ubuntu" title="">                </div>                <div class="image-caption">Ubuntu</div>            </figure><p>以上列举的这几个都是有桌面版的，但是我们学习Linux主要还是对命令行进行学习，对于学习和使用的系统我们选择不是以上这几个，而是centOS系统，那么为什么选择centOS？</p><h2 id="5-选择centOS版本进行学习"><a href="#5-选择centOS版本进行学习" class="headerlink" title="5.选择centOS版本进行学习"></a>5.选择centOS版本进行学习</h2><p>早前 <a href="https://www.redhat.com/zh" target="_blank" rel="noopener">Red Hat</a>公司 就发行了「Red Hat Linux」的个人版本，到了Red Hat 9.0版本后，Red Hat公司就不再发行桌面版的发行套件了，Red Hat Linux 也就停止了开发，而开始全力集中转向服务器版本上，也就是Red Hat Enterprise Linux（企业版本）。</p><p>后来 Red Hat Linux 的桌面版本与来自开源社区的Fedora进行合并，Red Hat Linux 桌面版就称为了 Fedroa Core。</p><p>所以目前Red Hat有：免费的Fedroa Core版本，也有收费的Red Hat Enterprise Linux版本。Red Hat Enterprise Linux都会在Fedroa Core版本的基础上进行升级，大约发布6个Fedroa Core版本就会发布一个Red Hat Enterprise Linux版本。</p><p>因为之前我们讲过了，Red Hat的企业版本虽然收费的，但是它依照开源协议必须公开源代码，那么这个是时候CentOS就出现了，它的全名是（Community Enterprise Operating Systeam 社区企业操作系统），CentOS和Red Hat企业版本的不同之处在于centOS没有包含封闭源码的软件，所以centOS可以自由使用，而且可以长期的享受它的免费升级和服务。</p><p>所以选择CentOS版本进行学习是很有必要的：目前网络上80%的Linux资源都是基于centOS的发行版的，可以供我们更多的资源查找和学习帮助。CentOS版本在许多开源镜像网站可以轻松获取。centOS也具有经典性和代表性，绝大多数物联网公司的后台服务器都使用的是centOS发行版本。</p><p>所以综上：选择CentOS版本是比较好的。接下来就和我一起学习Linux吧，就从<a href="https://wistbean.github.io/use-virtualbox-install-centos.html">安装虚拟机</a>开始，如何？</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Linux" scheme="https://wistbean.github.io/categories/Linux/"/>
    
    
      <category term="教程" scheme="https://wistbean.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Linux" scheme="https://wistbean.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>算法中的时间复杂度分析</title>
    <link href="https://wistbean.github.io/space-complexity.html"/>
    <id>https://wistbean.github.io/space-complexity.html</id>
    <published>2017-01-29T08:42:51.000Z</published>
    <updated>2018-10-29T18:03:31.221Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="大-O-时间表示法"><a href="#大-O-时间表示法" class="headerlink" title="大 O 时间表示法"></a>大 O 时间表示法</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cal</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (; i &lt;= n ; ++i) &#123;</span><br><span class="line">            sum += i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>这一段求和代码中，第 2、3 行分别要执行一个 unit_time 的时间。 第 5、6 行分别需要执行 n 个unit_time 的时间。</p><p>整段代码所需要执行的时间T(n) = 2*unit_time + 2n*unit_time = <code>(2+2n)*unit_time</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cal2</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> j = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (; i &lt;= n ; ++i) &#123;</span><br><span class="line">            j = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span> (; j &lt;= n ; ++j) &#123;</span><br><span class="line">                sum = sum + i*j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>这段代码中，第 3、4、5 分别要执行一个 unit_time 的时间。第 7、8 行分别要执行 n 个 unit_time 的时间。第 9、10 行分别要执行 n<sup>2</sup> 个unit_time 的时间。<br>所以这段代码所需要执行的时间为<code>T(n) = (3+2n+2n^2)*unit_time</code></p><p>由此可见，代码执行时间与数据规模大小有关，从以下这两个公式中可以得出<em>大 O 时间表示法</em>。</p><blockquote><p>T(n) = (2+2n)*unit_time<br>T(n) = (3+2n+2n<sup>2</sup>)*unit_time</p></blockquote><p><em>T(n) = O(&fnof;(n))</em> : 大 O 时间表示法，表示数据规模增长的越高，执行时间越久。因为公式中的常量和系数并不会影响它们之间的关系，所以可以忽略，以上两个公式就可以简写为：</p><blockquote><p>T(n) = O(n)<br>T(n) = O(n<sup>2</sup>)</p></blockquote><h1 id="时间复杂度分析"><a href="#时间复杂度分析" class="headerlink" title="时间复杂度分析"></a>时间复杂度分析</h1><p>明白了「大 O 时间表示法」之后，来试着分析一下代码的时间复杂度，由于 T(n) = O(&fnof;(n)) 中，对常量，系数可以忽略不计，那么在上面两段代码中，只需要去分析代码中循环次数最多的代码就可以了，比如在一段代码中，只需要分析：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (; i &lt;= n ; ++i) &#123;</span><br><span class="line">           sum += i;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><p>可以得出第一段代码中的时间复杂度为 O(n)。</p><p>在第二段代码中，只需要分析：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (; i &lt;= n ; ++i) &#123;</span><br><span class="line">            j = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span> (; j &lt;= n ; ++j) &#123;</span><br><span class="line">                sum = sum + i*j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>可以得出第二段代码中的时间复杂度为 O(n<sup>2</sup>)</p><p>那么在一段代码中，有多段循环的代码，怎么分析呢？比如以下这样的代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cal3</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> sum_1 = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> p = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (; p &lt; <span class="number">100</span>; ++p) &#123;</span><br><span class="line">            sum_1 += p;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> sum_2 = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> q = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (; q &lt; n; ++q) &#123;</span><br><span class="line">            sum_1 += p;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> sum_3 = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> j = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (; i &lt; n; ++i) &#123;</span><br><span class="line">            <span class="keyword">for</span> (; j &lt; n; ++j) &#123;</span><br><span class="line">                sum_3 += j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> sum_1+sum_2+sum_3;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>这段代码主要是得出sum_1+sum_2+sum_3。通过分析可以得到第一小段代码执行 100 次，是常量，所以时间复杂度是 O(n)。第二小段代码时间复杂度是 O(n)。第三小段代码的时间复杂度是 O(n<sup>2</sup>)。<br>那么这个时候就可以<em>取复杂度最大</em>的，也就是说这整段代码的时间复杂度为 O(n<sup>2</sup>)。</p><blockquote><p>加法法则：当 T1(n) = O(f(n)),T2(n) = O(g(n)) , 则 T(n) = O(max(f(n),g(n)))</p></blockquote><p>还有一种嵌套代码的情况，比如这样的：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">cal4</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">       <span class="keyword">int</span> i = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">for</span> (; i &lt; n; ++i) &#123;</span><br><span class="line">           sum = sum + f(i);</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">return</span> sum;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">       <span class="keyword">int</span> i = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">for</span> (; i &lt; n; ++i) &#123;</span><br><span class="line">           sum = sum + i;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">return</span> sum;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>在第 6 行代码中，去调用了一个时间复杂度为 O(n) 的的函数，而第 5、6 行的时间复杂度本身就是 O(n),所以这整段代码的时间复杂度就是 T(n) = O(n) * O(n) = O(n<sup>2</sup>)。</p><p>所以，在嵌套代码中，时间复杂度就是嵌套代码内外复杂度的乘积。</p><h1 id="常见的复杂度"><a href="#常见的复杂度" class="headerlink" title="常见的复杂度"></a>常见的复杂度</h1><p>复杂度由低到高如下：</p><ol><li>O(1)</li><li>O(logn)</li><li>O(n)</li><li>O(nlogn)</li><li>O(n<sup>2</sup>)</li></ol><p>对于 O(logn) 复杂度：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">i = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(i&lt;n)&#123;</span><br><span class="line">    i = i*<span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在这里循环执行了 i=i*2,列出来就是:2<sup>x</sup>=n,也就是log<sub>2</sub>n=x;底数2可以忽略不计，所以复杂度为O(logn)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="数据结构与算法" scheme="https://wistbean.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="数据结构" scheme="https://wistbean.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="https://wistbean.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="修炼内功" scheme="https://wistbean.github.io/tags/%E4%BF%AE%E7%82%BC%E5%86%85%E5%8A%9F/"/>
    
      <category term="复杂度分析" scheme="https://wistbean.github.io/tags/%E5%A4%8D%E6%9D%82%E5%BA%A6%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>修炼内功：数据结构与算法的学习路线</title>
    <link href="https://wistbean.github.io/algorithm-and-data-structure.html"/>
    <id>https://wistbean.github.io/algorithm-and-data-structure.html</id>
    <published>2017-01-29T07:41:39.000Z</published>
    <updated>2019-02-23T17:49:56.040Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul><li>复杂度分析<ul><li><a href="https://wistbean.github.io/space-complexity.html">时间复杂度</a><ul><li>最好</li><li>最坏</li><li>平均</li><li>均摊</li></ul></li><li>空间复杂度</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="数据结构与算法" scheme="https://wistbean.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="数据结构" scheme="https://wistbean.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="https://wistbean.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="修炼内功" scheme="https://wistbean.github.io/tags/%E4%BF%AE%E7%82%BC%E5%86%85%E5%8A%9F/"/>
    
      <category term="学习路线" scheme="https://wistbean.github.io/tags/%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/"/>
    
  </entry>
  
  <entry>
    <title>Java中的String，StringBuffer，StringBuilder</title>
    <link href="https://wistbean.github.io/java-String.html"/>
    <id>https://wistbean.github.io/java-String.html</id>
    <published>2016-03-04T09:00:13.000Z</published>
    <updated>2018-12-27T13:46:50.939Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><ol><li><p><a href="https://wistbean.github.io/learn-jdk-string-source-code.html">String</a>,被 final 修饰了，因为它是不可变的，在拼接字符串的时候会产生新的对象。</p></li><li><p>StringBuffer,为了解决字符串在拼接过程中产生额外的中间对象，就有了 StringBuffer，提供了 append 和 add 方法来进行字符串的操作，减少了额外的开销，但是它是线程安全的，会影响一些性能。</p></li><li><p>StringBuilder，和 StringBuffer 差不多，不过它是线程安全的，所以呢，在做字符串操作的时候，优先选择 StringBuilder。</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Java" scheme="https://wistbean.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="https://wistbean.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Java中的反射，动态机制</title>
    <link href="https://wistbean.github.io/java-reflection.html"/>
    <id>https://wistbean.github.io/java-reflection.html</id>
    <published>2016-03-04T09:00:13.000Z</published>
    <updated>2018-11-03T06:53:34.421Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>在编程中的语言中，有些语言是动态类型的，有些语言是静态类型的。</p><blockquote><p>动态：运行时检查<br>静态：编译时检查</p></blockquote><p>有些语言是强类型，有些语言是弱类型。</p><blockquote><p>强类型：强制显示引用，例如：int i = 0；<br>若类型：不需要强制显示引用，例如：var i = 0；</p></blockquote><h1 id="Java是一种什么样的语言类型？"><a href="#Java是一种什么样的语言类型？" class="headerlink" title="Java是一种什么样的语言类型？"></a>Java是一种什么样的语言类型？</h1><p>Java是静态的强类型语言，但是有了反射机制之后，Java也具备了动态语言的能力。</p><h1 id="Java的反射"><a href="#Java的反射" class="headerlink" title="Java的反射"></a>Java的反射</h1><p>在运行的时候，反射机制可以获取：</p><blockquote><p>对象<br>类的定义<br>属性，方法<br>调用方法<br>构造对象</p></blockquote><p>甚至可以修改类的定义。</p><h1 id="Java反射的实现"><a href="#Java反射的实现" class="headerlink" title="Java反射的实现"></a>Java反射的实现</h1><p>在 JDK 中提供了反射的动态代理，还有诸如 ASM,cglib，javassist。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Java" scheme="https://wistbean.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="https://wistbean.github.io/tags/Java/"/>
    
      <category term="反射" scheme="https://wistbean.github.io/tags/%E5%8F%8D%E5%B0%84/"/>
    
  </entry>
  
  <entry>
    <title>Java中的强引用，软引用，弱引用，虚引用</title>
    <link href="https://wistbean.github.io/java-reference.html"/>
    <id>https://wistbean.github.io/java-reference.html</id>
    <published>2016-03-03T09:00:13.000Z</published>
    <updated>2018-10-31T12:49:15.112Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><ol><li><p>强引用，是最常见的引用方式，垃圾收集器看到一个对象被强引用了，就不会对它非分之想。只有超过了引用的作用域或者强引用被赋值为 NULL，这时候就可以被垃圾收集。</p></li><li><p>软引用，相对弱化的强引用，垃圾收集器也不太会对其进行回收，只有 JVM 觉得自己内存不够了的时候，才会去视图回收软引用的对象。软引用通常用来实现缓存。</p></li><li><p>弱引用，仅仅提供了一种访问弱引用状态的途径，一般用来实现缓存。</p></li><li><p>虚引用，也叫幻想引用，提供了一种对象确保被 finalize 之后，做某些事情的机制。</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Java" scheme="https://wistbean.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="https://wistbean.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Java中的final，finally，finalize</title>
    <link href="https://wistbean.github.io/java-final.html"/>
    <id>https://wistbean.github.io/java-final.html</id>
    <published>2016-03-02T09:00:13.000Z</published>
    <updated>2018-10-31T11:00:57.725Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><ol><li><p>final可以用来修饰类，方法，变量。当类被 final 修饰之后便不可以被继承，方法被 final 修饰之后就不可以被重写，而变量被 final 修饰之后就不可以被改变。</p></li><li><p>finally是用来执行最重要或者说一定要被执行到的语句，在异常捕获(<code>try...catch...finally</code>)的时候最为常用，比如关闭IO流，关闭数据连接，关闭锁等。</p></li><li><p>finalize是超类 Object 的一个方法，当垃圾收集器回收垃圾的时候会被调用，保证对象被垃圾收集器收集钱做特定的资源回收，确定不再有对对象的引用。子类重写这个方法可以处理系统资源或者执行其他的处理。</p></li></ol><p>如果硬要说final，finally，finalize之间有什么关系的话，那就是有个鸡儿的关系 - -</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Java" scheme="https://wistbean.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="https://wistbean.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Java中的异常处理，Exception和Error的使用</title>
    <link href="https://wistbean.github.io/java-error-exception.html"/>
    <id>https://wistbean.github.io/java-error-exception.html</id>
    <published>2016-03-01T09:00:13.000Z</published>
    <updated>2018-11-02T08:52:37.166Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="对比一下-Exception-和-Error"><a href="#对比一下-Exception-和-Error" class="headerlink" title="对比一下 Exception 和 Error"></a>对比一下 Exception 和 Error</h1><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/throwable.png" alt="Exception 和 Error" title="">                </div>                <div class="image-caption">Exception 和 Error</div>            </figure><ol><li><p>从 Java API 可以看到，Exception 和 Error 都继承于 Throwable ，Throwable提供了 throw(抛出) 和 catch(捕获)</p></li><li><p>Exception 是在程序正常运行的时候可以预料到的，可以事先对其捕获，进行相应的处理。</p></li><li><p>Error 一般不需要捕获，因为它是在正常情况下，不太可能发生的。</p></li><li><p>Exception 有两种情况</p></li></ol><ul><li>编译时可检查（需要在代码中事先捕获处理）</li><li>运行时不可检查 （如 NullPointException），编译期不强求捕获，但是可以对其判断，是否需要捕获代码。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Java" scheme="https://wistbean.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="https://wistbean.github.io/tags/Java/"/>
    
      <category term="Exception" scheme="https://wistbean.github.io/tags/Exception/"/>
    
      <category term="Error" scheme="https://wistbean.github.io/tags/Error/"/>
    
  </entry>
  
  <entry>
    <title>Java的特性和对解释执行的疑问</title>
    <link href="https://wistbean.github.io/java-platform.html"/>
    <id>https://wistbean.github.io/java-platform.html</id>
    <published>2016-03-01T07:20:37.000Z</published>
    <updated>2018-12-27T13:46:50.771Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Java-的两大特性"><a href="#Java-的两大特性" class="headerlink" title="Java 的两大特性"></a>Java 的两大特性</h1><p>Java是<a href="https://wistbean.github.io/object-oriented-programming.html">面对对象</a>编程语言，具有以下显著的两大特性。</p><ol><li>跨平台<br>书写一次代码，可以在任何地方运行。</li><li>垃圾回收器<br>有了垃圾回收器，Java会自动的将垃圾回收分配内存，程序员就不用太操心内存分配的问题。</li></ol><h1 id="JRE-和-JDK-的区别"><a href="#JRE-和-JDK-的区别" class="headerlink" title="JRE 和 JDK 的区别"></a>JRE 和 JDK 的区别</h1><p>JRE：java运行环境，包含了：</p><ul><li>JVM</li><li>Java类库</li><li>模块等</li></ul><p>JDK：Java开发环境，是JRE的超集，有更多的工具，如：编译器，诊断工具等。</p><h1 id="Java是解释执行么？"><a href="#Java是解释执行么？" class="headerlink" title="Java是解释执行么？"></a>Java是解释执行么？</h1><p>编译时：</p><pre><code>源代码 -&gt; javac编译 -&gt; 字节码</code></pre><p>运行时：</p><pre><code>字节码 -&gt; JVM -&gt; 机器码</code></pre><p>通常情况下， JVM 提供了 JIT (Just In Time) 动态编译器，JIT 可以在运行的时候将代码编译成机器码，属于<em>编译执行，而不是解释执行</em>！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Java" scheme="https://wistbean.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="https://wistbean.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>解析Java中的 String 源码</title>
    <link href="https://wistbean.github.io/learn-jdk-string-source-code.html"/>
    <id>https://wistbean.github.io/learn-jdk-string-source-code.html</id>
    <published>2015-07-25T14:07:17.000Z</published>
    <updated>2018-11-02T08:52:37.254Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>话说之前对代码的编写大多都是直接使用jdk里面的对象，有时候也对一些对象直接封装之后就使用了，很少去了解源码中具体细节是怎么实现的，这样显然不符合我这么帅的人的做事风格，所以我现在就来对源码进行学习学习，可能篇幅略长，不过会慢慢记录下我学习的过程和总结一下，希望对自己有帮助的同时，也能够帮助到和我一样，希望更进一步去理解java的小伙伴们！！</p><h2 id="String类的大概面貌"><a href="#String类的大概面貌" class="headerlink" title="String类的大概面貌"></a>String类的大概面貌</h2><p>废话不多说了，先打开我的 InteliJ IDEA , 创建一个学习源码的项目，就叫做「learnJavaSourceCode」吧。</p><p>打开String.java之后可以发现了String实现了java.io.Serializable, Comparable<string>, CharSequence ：</string></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/3.png" alt="String.java" title="">                </div>                <div class="image-caption">String.java</div>            </figure><p>在 String 类中有4个成员变量：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>. <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">char</span> value[];</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>. <span class="keyword">private</span> <span class="keyword">int</span> hash; <span class="comment">// Default to 0</span></span><br><span class="line"></span><br><span class="line"><span class="number">3</span>. <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = -<span class="number">6849794470754667710L</span>;</span><br><span class="line"></span><br><span class="line"><span class="number">4</span>. <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> ObjectStreamField[] serialPersistentFields = <span class="keyword">new</span> ObjectStreamField[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line"><span class="number">5</span>. <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Comparator&lt;String&gt; CASE_INSENSITIVE_ORDER = <span class="keyword">new</span> CaseInsensitiveComparator();</span><br></pre></td></tr></table></figure></p><p>有一个内部类CaseInsensitiveComparator，还有其它就是构造函数和方法了！</p><h2 id="String的概要描述总结"><a href="#String的概要描述总结" class="headerlink" title="String的概要描述总结"></a>String的概要描述总结</h2><p>也就是在一开始的一大段注释：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/describeString.png" alt="String describe" title="">                </div>                <div class="image-caption">String describe</div>            </figure><p>我对它总结一下就是以下几点：</p><ol><li><p>在java中所有的字符字面值（例如：”abc”）都是 String 的一个实例;</p></li><li><p>Strings是常量，它们的值在被创建之后就不可以改变了，字符缓冲支持改变，因为 String 的对象是不可变的，所以它们可以被共享;</p></li><li><p>String包含了一些方法，例如字符的大小写转换等（有点废话  - -）;</p></li><li><p>java语言提供了支持字符间的连接操作和将对象转化为字符串的操作，字符间的连接是通过 “+” 来操作的，它们之所以可以连接是因为通过 StringBuffrer 或者 StringBuilder 的 append 方法实现的，而将对象转化成字符串是通过 Object 方法中的 toString 方法。</p></li><li><p>携带 null 这个参数给String的构造函数或者方法，String会抛出NullPointerException,这不是见惯不惯了吗:)</p></li><li><p>String 表示一个 UTF-16 格式的字符串。其中的 增补字符 由 代理项对 表示，索引值是指 char 代码单元，因此增补字符在 String 中占用两个位置。</p></li></ol><h2 id="对String的主要描述进行演示"><a href="#对String的主要描述进行演示" class="headerlink" title="对String的主要描述进行演示"></a>对String的主要描述进行演示</h2><ol><li><p>在java中所有的字符字面值（例如：”abc”）都是 String 的一个实例:</p><p>很好理解，我们经常就是这样做的,java这么规定，我们也就这么写了：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String s = <span class="string">"abc"</span>; <span class="comment">//这里的 "abc" 就是一个对象</span></span><br><span class="line">System.out.println(<span class="string">"abc"</span>);</span><br></pre></td></tr></table></figure></li><li><p>Strings是常量，它们的值在被创建之后就不可以改变了，字符缓冲支持改变，因为 String 的对象是不可变的，所以它们可以被共享:</p><p>那是不是这样：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span> <span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">    String s = <span class="string">"abc"</span>; <span class="comment">//s是常量，abc被创建了，那么s对应的值就不可以改变了</span></span><br><span class="line">    s = <span class="string">"def"</span>; <span class="comment">// 我就把它改成def看看</span></span><br><span class="line">    System.out.println(s); <span class="comment">// 输出 def</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p>奇怪，不是说不能被改变了吗？为毛可以是def？</p><p>其实不然，我们一开始是创建的 “abc” , 我们从1中 <strong>「在java中所有的字符字面值（例如：”abc”）都是 String 的一个实例」</strong> 可以知道，其实”abc”就是一个String的实例，我们的String s 只不过是指向这个”abc”的String对象了，而我们的 s = “def” 则是将s指向”def”这个对象！</p><p>  心情好，画个图吧：</p><p>  首先我们写了这样一句 String s  = “abc”; 那么是这样的：</p><p>  <img src="/images/String.png" alt="String"></p><p>  s 这个引用会去常量池里面找有没有”abc”,发现卧槽，没有，那么就创建一个：</p><p>  <img src="/images/s2.png" alt="String"></p><p>  这时候 s 就可以指向 “abc” 了！</p><p>  接着我们把 s = “def” , 同样的道理，它会去常量池找有没有 “def”, 有就指向它，没有就在常量池创建一个：</p><p>  <img src="/images/s3.png" alt="String"></p><p>  所以我们现在应该知道 「String的对象是不可变的，所以它们可以被共享」 这句话是什么意思了吧 - -</p><ol start="3"><li><p>Java语言提供了支持字符间的连接操作和将对象转化为字符串的操作，字符间的连接是通过 “+” 来操作的，它们之所以可以连接是因为通过 StringBuffrer 或者 StringBuilder 的 append 方法实现的，而将对象转化成字符串是通过 Object 方法中的 toString 方法。</p><p>写段代码：</p></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">String s1 = <span class="string">"I "</span>;</span><br><span class="line">String s2 = <span class="string">"Love "</span>;</span><br><span class="line">String s3 = <span class="string">"You "</span>;</span><br><span class="line">System.out.println(s1 + s2 + s3 );</span><br></pre></td></tr></table></figure><p>   运行后理所当然是 I Love You  :)<br>   接着使用<a href="http://www.javadecompilers.com/jad" target="_blank" rel="noopener">jad</a>反编译下上面这段代码会发现：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">String s1 = <span class="string">"I "</span>;</span><br><span class="line">String s2 = <span class="string">"Love "</span>;</span><br><span class="line">String s3 = <span class="string">"You "</span>;</span><br><span class="line">System.out.println((<span class="keyword">new</span> StringBuilder()).append(s1).append(s2).append(s3).toString());</span><br></pre></td></tr></table></figure><p>   可以看到它真的用StringBuilder对象用append方法把我们的s1 + s2 + s3 拼接起来了，然后用toString方法得到 I Love You … 害羞 - -</p><h2 id="对String常用构造方法解析"><a href="#对String常用构造方法解析" class="headerlink" title="对String常用构造方法解析"></a>对String常用构造方法解析</h2><h3 id="String-String-original"><a href="#String-String-original" class="headerlink" title="String(String original);"></a>String(String original);</h3><p>首先来个问题思考：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String msg1 = &quot;I Love You !&quot; ;</span><br><span class="line">String msg2 = new String (&quot;I Love You !&quot;);</span><br></pre></td></tr></table></figure></p><p>上面的 msg1 和 msg2 是一样的吗？ （我们不一样~~）</p><p>我们已经知道msg1是从常量池去取的，而我们new String() 这时候应该在堆内存产生一个String对象，而通过源码可以看到这个String对象方法是将我们传入的这个 “I Love You !” 对象的value和hash进行复制：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public String(String original) &#123;</span><br><span class="line">       this.value = original.value;</span><br><span class="line">       this.hash = original.hash;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>画个图那就是这个样子的：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/new%20String%28%29.png" alt="new String()" title="">                </div>                <div class="image-caption">new String()</div>            </figure><h3 id="String-char-value"><a href="#String-char-value" class="headerlink" title="String(char[] value)"></a>String(char[] value)</h3><p>我们创建个char[],然后传给String构造函数：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span>[] c = <span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">3</span>];</span><br><span class="line">c[<span class="number">0</span>] = <span class="string">'I'</span>;</span><br><span class="line">c[<span class="number">1</span>] = <span class="string">'L'</span>;</span><br><span class="line">c[<span class="number">2</span>] = <span class="string">'U'</span>;</span><br><span class="line">String msg = <span class="keyword">new</span> String(c);</span><br><span class="line">System.out.println(msg);</span><br></pre></td></tr></table></figure></p><p>通过debug后可以发现：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/new%20String%28char%29.png" alt="new String()" title="">                </div>                <div class="image-caption">new String()</div>            </figure><p>原来它通过 Arrays.copyOf 把我们的char直接复制给value了！<br>其实我们应该也猜到了，String里面的value就是char数组！</p><h3 id="String-byte-bytes"><a href="#String-byte-bytes" class="headerlink" title="String(byte[] bytes)"></a>String(byte[] bytes)</h3><p>String提供了好几个含有byte[]参数的构造函数,那么我们对byte[]和String间的转化就容易许多了。<br>可能你之前应该遇到过乱码问题，你应该是这么解决的：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">        String s = <span class="keyword">new</span> String(<span class="string">"乱码"</span>.getBytes(),<span class="string">"utf-8"</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>其实String里面是含有一个char[]来存放这些字符，而这些字符是以Unicode码来存储的，字节是通过网络传输信息的单位,所以我们在传入byte[]转化为String的时候，是需要对其进行编码的：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">char</span>[] decode(String charsetName, <span class="keyword">byte</span>[] ba, <span class="keyword">int</span> off, <span class="keyword">int</span> len)</span><br><span class="line">       <span class="keyword">throws</span> UnsupportedEncodingException</span><br><span class="line">   &#123;</span><br><span class="line">       StringDecoder sd = deref(decoder);</span><br><span class="line">       String csn = (charsetName == <span class="keyword">null</span>) ? <span class="string">"ISO-8859-1"</span> : charsetName;<span class="comment">//我们指定了utf-8，默认是ISO-8859-1</span></span><br><span class="line">       <span class="keyword">if</span> ((sd == <span class="keyword">null</span>) || !(csn.equals(sd.requestedCharsetName())</span><br><span class="line">                             || csn.equals(sd.charsetName()))) &#123;</span><br><span class="line">           sd = <span class="keyword">null</span>;</span><br><span class="line">           <span class="keyword">try</span> &#123;</span><br><span class="line">               Charset cs = lookupCharset(csn);</span><br><span class="line">               <span class="keyword">if</span> (cs != <span class="keyword">null</span>)</span><br><span class="line">                   sd = <span class="keyword">new</span> StringDecoder(cs, csn);</span><br><span class="line">           &#125; <span class="keyword">catch</span> (IllegalCharsetNameException x) &#123;&#125;</span><br><span class="line">           <span class="keyword">if</span> (sd == <span class="keyword">null</span>)</span><br><span class="line">               <span class="keyword">throw</span> <span class="keyword">new</span> UnsupportedEncodingException(csn);</span><br><span class="line">           set(decoder, sd);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> sd.decode(ba, off, len);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h2 id="对String常用方法解析"><a href="#对String常用方法解析" class="headerlink" title="对String常用方法解析"></a>对String常用方法解析</h2><h3 id="charAt-int-index"><a href="#charAt-int-index" class="headerlink" title="charAt(int index)"></a>charAt(int index)</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">String msg = <span class="string">"I love you !"</span>;</span><br><span class="line"><span class="keyword">char</span> c = msg.charAt(<span class="number">3</span>);</span><br><span class="line">System.out.println(c); <span class="comment">// 输出的是 o;</span></span><br></pre></td></tr></table></figure><p>可以看到这个方法是根据索引返回Char值！</p><p>进去源码看看：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">public char charAt(int index) &#123;</span><br><span class="line">       if ((index &lt; 0) || (index &gt;= value.length)) &#123;</span><br><span class="line">           throw new StringIndexOutOfBoundsException(index);</span><br><span class="line">       &#125;</span><br><span class="line">       return value[index];</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>可以看到当我们传进去的索引值是小于0 或者 大于 这个字符串的长度，就会抛出异常。否则就返回value数组中对应的值！</p><p>通过 debug 可以看到其实我们刚刚定义的 String msg = “I love you !” 中的值被放到了 value 这个数组中了！</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/s01.png" alt="String" title="">                </div>                <div class="image-caption">String</div>            </figure><p>而我们  char c = msg.charAt(3) 传入的这个3 就是这个数组对应的下标3，所以呢，输出就是o啦！<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/s02.png" alt="String" title="">                </div>                <div class="image-caption">String</div>            </figure></p><h3 id="equals-Object-anObject"><a href="#equals-Object-anObject" class="headerlink" title="equals(Object anObject)"></a>equals(Object anObject)</h3><p>equals我们通常用于比较是否相同，那么你知道下面这段代码分别输出的是什么吗？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">String s = &quot;I Love You !&quot;;</span><br><span class="line">String s1 = &quot;I Love You !&quot;;</span><br><span class="line">String s2 = new String(&quot;I Love You !&quot;);</span><br><span class="line">System.out.println(s == s1);</span><br><span class="line">System.out.println(s.equals(s1));</span><br><span class="line">System.out.println(s == s2);</span><br><span class="line">System.out.println(s.equals(s2));</span><br></pre></td></tr></table></figure><p>他们分别输出的：</p><ul><li>true</li><li>true</li><li>false</li><li>true</li></ul><p>可能有些人会奇怪会什么 s == s2 是false？ 他们不是都是是 “”I Love You !” 吗？<br>这时候我们就要来看看 <strong>==  和  equals</strong> 的区别了！</p><p>其实 == 比较的是他们的地址值（hashcode），我们知道String是不可变的，我们可以知道s 和 s1 指向的都是 “I Love You !”;所以他们的hashcode是一样的。所以返回true;而s 和 s2 他们指向的地址是不一样的所以是false;</p><p>可能此刻有人会疑惑那么为什么s.equals(s2)返回的是true了。这时候我们应该可以猜到equals应该判断的不是两个对象间的hashcode吧，我们看下源码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object anObject)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span> == anObject) &#123;  <span class="comment">//如果对象的hashcode一样就直接返回true</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (anObject <span class="keyword">instanceof</span> String) &#123;  <span class="comment">// 判断传进来的对象是不是String类型</span></span><br><span class="line">            String anotherString = (String)anObject; <span class="comment">// 将对象强转为String</span></span><br><span class="line">            <span class="keyword">int</span> n = value.length; <span class="comment">//获取我们本身拿来对比的String对象的长度</span></span><br><span class="line">            <span class="keyword">if</span> (n == anotherString.value.length) &#123; <span class="comment">// 判断它们的长度是否一样</span></span><br><span class="line">                <span class="keyword">char</span> v1[] = value;</span><br><span class="line">                <span class="keyword">char</span> v2[] = anotherString.value;</span><br><span class="line">                <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">while</span> (n-- != <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (v1[i] != v2[i])  <span class="comment">//逐一判断字符使用相等</span></span><br><span class="line">                        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">                    i++;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>很明显我们可以发现，equals判断的不是hashcode，而是判断它们的值是否相同，所以s.equals(s2)返回的是true！</p><h3 id="endsWith-String-suffix"><a href="#endsWith-String-suffix" class="headerlink" title="endsWith(String suffix)"></a>endsWith(String suffix)</h3><p>有时候我们可能会判断字符串是否以指定的后缀结束。例如我们有获取的图片路径，判断他是不是以.jpg结尾的：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String s = <span class="string">"canglaoshi.jpg"</span>;</span><br><span class="line">System.out.println(s.endsWith(<span class="string">".jpg"</span>)); <span class="comment">//true</span></span><br></pre></td></tr></table></figure><p>debug一下就明白了它是怎么判断的：<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/endwith.png" alt="String" title="">                </div>                <div class="image-caption">String</div>            </figure></p><p>它会去调用 startsWith 方法。</p><ul><li>用 ta[] 这个数组来存放 “canglaoshi.jpg”;</li><li>用 int to 来接收 “canglaoshi.jpg”的长度（14） 减去 “.jpg” 的长度（4） = 10;</li><li>用 pa[] 来存放 “.jpg”;</li><li>用int pc 来接收 “.jpg”的长度;</li></ul><p>最后就是以pc为次数进行遍历ta[]从下标为to开始，pa[] 从下标为0开始逐一判断，如果相同就返回true！</p><h3 id="replace-char-oldChar-char-newChar"><a href="#replace-char-oldChar-char-newChar" class="headerlink" title="replace(char oldChar, char newChar)"></a>replace(char oldChar, char newChar)</h3><p> 返回一个新的字符串，它是通过用 newChar 替换此字符串中出现的所有 oldChar 得到的。<br> 那么问题来了，下面这一段输出的是什么呢？<br> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">String s = <span class="string">"I Love You !"</span>;</span><br><span class="line">s.replace(<span class="string">"Love"</span>, <span class="string">"Fxxk"</span>);</span><br><span class="line">System.out.println(s);</span><br></pre></td></tr></table></figure></p><p>如果你说是 I Fxxk You ！, 那就真的是欠fxxk了~ 别忘了，String 是不可变的。所以呢，<br>s 还是 I Love You, 而String s1 = s.replace(“Love”, “Fxxk”); 这样的s1 才是<br>“I Fxxk You ！”</p><h3 id="hashCode"><a href="#hashCode" class="headerlink" title="hashCode()"></a>hashCode()</h3><p>返回此字符串的哈希码。<br>哈希码是怎么算出来的？</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="string">"I Love You !"</span>.hashCode()); <span class="comment">//-1710377367</span></span><br></pre></td></tr></table></figure><p>我们知道我们的 “I Love You !” 被放到了char数组中。<br>hashcode的算法是这样的：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">31</span> * <span class="number">0</span> + val[<span class="number">0</span>]</span><br><span class="line"><span class="number">31</span> * (<span class="number">31</span> * <span class="number">0</span> + val[<span class="number">0</span>]) +  val[<span class="number">1</span>]</span><br><span class="line"><span class="number">31</span> * (<span class="number">31</span> * (<span class="number">31</span> * <span class="number">0</span> + val[<span class="number">0</span>]) +  val[<span class="number">1</span>]) + val[<span class="number">2</span>]</span><br><span class="line">...</span><br></pre></td></tr></table></figure></p><p>它的代码实现是：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">hashCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> h = hash;</span><br><span class="line">        <span class="keyword">if</span> (h == <span class="number">0</span> &amp;&amp; value.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">char</span> val[] = value;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; value.length; i++) &#123;</span><br><span class="line">                h = <span class="number">31</span> * h + val[i];</span><br><span class="line">            &#125;</span><br><span class="line">            hash = h;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> h;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><p>可以看到它的算法，其中char值就是字符对应的ACII编码：<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/char.png" alt="String" title="">                </div>                <div class="image-caption">String</div>            </figure></p><h3 id="substring-int-beginIndex"><a href="#substring-int-beginIndex" class="headerlink" title="substring(int beginIndex)"></a>substring(int beginIndex)</h3><p>返回一个新的字符串，它是此字符串的一个子字符串。<br>可以理解为截取字符串，它的实现就是用数组的copyOfRange将指定数组的指定范围复制到一个新数组：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.value = Arrays.copyOfRange(value, offset, offset+count);</span><br></pre></td></tr></table></figure></p><h1 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h1><ul><li><a href="http://www.hollischuang.com/archives/99#构造方法" target="_blank" rel="noopener">Java 7 源码学习系列</a></li><li><a href="http://www.jianshu.com/p/799c4459b808" target="_blank" rel="noopener">Java 源码分析 — String 的设计</a></li><li><a href="http://blog.csdn.net/stubbornant/article/details/51535946" target="_blank" rel="noopener">Java String源码解析</a></li><li><a href="http://blog.csdn.net/stubbornant/article/details/51535946" target="_blank" rel="noopener">Java String源码解析</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Java" scheme="https://wistbean.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="https://wistbean.github.io/tags/Java/"/>
    
      <category term="String" scheme="https://wistbean.github.io/tags/String/"/>
    
  </entry>
  
  <entry>
    <title>Java 面向对象编程中的继承</title>
    <link href="https://wistbean.github.io/java-extends.html"/>
    <id>https://wistbean.github.io/java-extends.html</id>
    <published>2015-07-21T07:35:54.000Z</published>
    <updated>2018-10-30T07:54:26.592Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="对java的疑问："><a href="#对java的疑问：" class="headerlink" title="对java的疑问："></a>对java的疑问：</h1><ul><li>为什么要用到java继承呢？</li><li>java继承需要注意什么？</li><li>java继承有什么好处呢？</li><li>有没有什么弊端呢?</li></ul><h1 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h1><p>继承，就像大象和小象有一些共同的属性，一只大象生了一只小象，而小象拥有了大象的功能属性，然后小象还可以自己学习很多东西，扩展了自己的功能和属性！</p><h1 id="代码提现继承"><a href="#代码提现继承" class="headerlink" title="代码提现继承"></a>代码提现继承</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//父类</span></span><br><span class="line"> <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Elephant_Father</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//子类</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Elephant_Son</span> <span class="keyword">extends</span> <span class="title">Elephant_Father</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">LOL</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"hahahhahahah"</span>);</span><br><span class="line">    &#125;   </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//实现类：</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainDemo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">            Elephant_Son son = <span class="keyword">new</span> Elephant_Son();</span><br><span class="line">            son.setAge(<span class="number">15</span>);</span><br><span class="line">            son.setName(<span class="string">"little elephant"</span>);</span><br><span class="line">            System.out.println(<span class="string">"son.name:"</span> </span><br><span class="line">            + son.getName()+ <span class="string">" ,son.age:"</span> + son.getAge());</span><br><span class="line">            son.LOL();  </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>控制台显示结果：</p><pre><code>son.name:little elephant ,son.age:15hahahhahahah</code></pre><p>从代码中可以看出：当Elephant_Son extends Elephant_Father的时候，son自己本身并没有setName()、getName()等功能，可是它继承了它的爸爸后就可以用它爸爸身上的东西了。 </p><p><strong>由此可见继承简化了代码，son在继承了father的基本功能后，在自己的类中还可以实现自己扩展出来的东西，这也简单的回答了第一个问题(java为什么要用继承！)</strong></p><hr><p>可是，当father拥有了一个吃的方法，而son也有吃的方法，可是他们像吃的东西不同，比如father想吃饭，而son想吃方便面！那么当son继承了father后怎么办呢？难道也要跟着吃饭吗？no！！</p><p>代码体现：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//父类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Elephant_Father</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span></span></span><br><span class="line"><span class="function">     </span>&#123;</span><br><span class="line">         System.out.println(<span class="string">"father:我要吃饭！！！"</span>);</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//子类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Elephant_Son</span> <span class="keyword">extends</span> <span class="title">Elephant_Father</span> </span>&#123;</span><br><span class="line"><span class="comment">//TODO</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainDemo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//实现类</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">           Elephant_Son son = <span class="keyword">new</span> Elephant_Son();</span><br><span class="line">           son.eat();</span><br><span class="line"></span><br><span class="line">           Elephant_Father father = <span class="keyword">new</span> Elephant_Father();</span><br><span class="line">           father.eat();</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>输出结果：</p><pre><code>father:我要吃饭！！！father:我要吃饭！！！</code></pre><p>son继承了father后，son.eat()是吃饭啊，可是想吃方便面啊！！怎么办？ 这时候son想了个方法，把继承父亲吃的这个方法给重写掉！多么聪明的son呀，说来就来：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">//父类</span></span><br><span class="line"> <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Elephant_Father</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span></span></span><br><span class="line"><span class="function">     </span>&#123;</span><br><span class="line">         System.out.println(<span class="string">"father:我要吃饭！！！"</span>);</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//子类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Elephant_Son</span> <span class="keyword">extends</span> <span class="title">Elephant_Father</span> </span>&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            System.out.println(<span class="string">"son：爸爸要吃饭我又不吃，我改了，我要吃方便面！"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//实现类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainDemo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            Elephant_Son son = <span class="keyword">new</span> Elephant_Son();</span><br><span class="line">            son.eat();</span><br><span class="line"></span><br><span class="line">            Elephant_Father father = <span class="keyword">new</span> Elephant_Father();</span><br><span class="line">            father.eat();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>输出结果：</p><pre><code>son：爸爸要吃饭我又不吃，我改了，我要吃方便面！father:我要吃饭！！！</code></pre><p><strong>由此可见，在继承中有一个东西叫做重写（覆盖），爸爸有的东西不一定是我要的，那么我就改掉！！！</strong></p><hr><p>父亲呢！有时候有些东西是不想给孩子看到（你懂的），有些父亲甚至不想有孩子，想“断子绝孙”，这个时候父亲就想到了把一些东西占为己有，私有（private）掉， 而想“断子绝孙”的父亲就把自己成为最终态（final）！</p><h1 id="java的修饰符private"><a href="#java的修饰符private" class="headerlink" title="java的修饰符private"></a>java的修饰符private</h1><p>比如，father有一个思考事情的方法，但是他不想让继承他的son知道！就用private私有：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Elephant_Father</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">think</span><span class="params">()</span></span></span><br><span class="line"><span class="function">      </span>&#123;</span><br><span class="line">          System.out.println(<span class="string">"father：我一直在思考，让你了解我的好"</span>);</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>这个时候，son是继承不到father的think方法的！</p><h1 id="java的修饰符final"><a href="#java的修饰符final" class="headerlink" title="java的修饰符final"></a>java的修饰符final</h1><p>再比如想要断子绝孙的父亲：</p><pre><code>final class Elephant_Father {}</code></pre><p>这个时候，它就没有son了，也就是说，son继承不了他，因为他final了！</p><h1 id="java的修饰符static"><a href="#java的修饰符static" class="headerlink" title="java的修饰符static"></a>java的修饰符static</h1><p>又：当父亲有static来修饰方法的时候，子类是不能重写的！比如：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//父类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Elephant_Father</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">     <span class="comment">//static修饰</span></span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span></span></span><br><span class="line"><span class="function">     </span>&#123;</span><br><span class="line">         System.out.println(<span class="string">"吃饭"</span>);</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//子类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Elephant_Son</span> <span class="keyword">extends</span> <span class="title">Elephant_Father</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"吃面"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//实现类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainDemo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            Elephant_Son son = <span class="keyword">new</span> Elephant_Son();</span><br><span class="line"></span><br><span class="line">            son.eat();</span><br><span class="line"></span><br><span class="line">            Elephant_Father father = <span class="keyword">new</span> Elephant_Father();</span><br><span class="line">            father.eat();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>输出：</p><pre><code>吃面吃饭</code></pre><p>咋一看好像真的重写了呢!! 可是有没有看到子类的eat方法上面没有@Override字样儿！ 其实并不是重写而是子类自己写的一个静态方法，static修饰的方法和一般的方法不同，它是静态绑定的，所属类的！所以是不会有重写的！</p><p>所以可以对以上的描述拿来简单回答第二个问题（继承需要注意什么）。</p><p>但还有一个细节就是java是不能多继承的，</p><p>什么意思？<br>就是son extends father，mother，…，这样是不行的，</p><p>但是java可以传递性的继承，什么意思呢？<br>就是 son extends father， grandson extends son ….；</p><hr><p>最后浅谈一下：</p><h1 id="java继承的好处："><a href="#java继承的好处：" class="headerlink" title="java继承的好处："></a>java继承的好处：</h1><p>除了刚才讲过的简化了代码，提高了代码的复用性，而且还提高了代码的维护性；<br>再者，使得类与类之间产生了关系，产生了关系的作用在前面的例子可<br>以看到，还有它的另一作用是多态的前提！</p><h1 id="java继承的弊端："><a href="#java继承的弊端：" class="headerlink" title="java继承的弊端："></a>java继承的弊端：</h1><p>提高了耦合性，一定程度上打破了封装！</p><h1 id="相关资料"><a href="#相关资料" class="headerlink" title="相关资料"></a>相关资料</h1><ul><li><a href="http://www.runoob.com/java/java-inheritance.html" target="_blank" rel="noopener">Java 继承</a></li><li><a href="http://blog.csdn.net/a2011480169/article/details/50242093" target="_blank" rel="noopener">JAVA面向对象编程中重点总结</a></li><li><a href="http://wiki.jikexueyuan.com/project/java-enhancement/java-two.html" target="_blank" rel="noopener">理解 Java 的三大特性之继承</a></li><li><a href="https://zh.wikipedia.org/zh-hans/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1" target="_blank" rel="noopener">面向对象程序设计</a></li><li><a href="https://zh.wikibooks.org/zh-hans/Java/%E7%BB%A7%E6%89%BF" target="_blank" rel="noopener">Java/继承</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Java" scheme="https://wistbean.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="https://wistbean.github.io/tags/Java/"/>
    
      <category term="面向对象" scheme="https://wistbean.github.io/tags/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    
      <category term="继承" scheme="https://wistbean.github.io/tags/%E7%BB%A7%E6%89%BF/"/>
    
  </entry>
  
</feed>
